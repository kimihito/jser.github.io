<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 27 Oct 2021 13:19:36 +0900</pubDate>
    <lastBuildDate>Wed, 27 Oct 2021 13:19:36 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-10-27のJS: Yarn 3.1、Node.js 16.13.0(LTS)、Next.js 12</title>
        <description>&lt;p&gt;JSer.info #563 - Yarn 3.1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak&quot;&gt;Yarn 3.1 🎃👻 Corepack, ESM, pnpm, Optional Packages ... - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yarnpkg/berry/blob/master/CHANGELOG.md#310&quot; title=&quot;berry/CHANGELOG.md at master · yarnpkg/berry&quot;&gt;berry/CHANGELOG.md at master · yarnpkg/berry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;yarn init -2&lt;/code&gt;で&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.9.0/&quot;&gt;Node v16.9.0&lt;/a&gt;からサポートされた&lt;a href=&quot;https://nodejs.org/api/corepack.html&quot;&gt;Corepack&lt;/a&gt;の&lt;code&gt;packageManager&lt;/code&gt;フィールドに対応しています。&lt;/p&gt;

&lt;p&gt;また、PnPでのEMSサポート、新しいインストールモードとして&lt;code&gt;nodeLinker: pnpm&lt;/code&gt;のサポートしています。&lt;br&gt;
また、&lt;code&gt;optionalDependencies&lt;/code&gt;で指定したアーキテクチャだけをダウンロードする&lt;code&gt;supportedArchitectures&lt;/code&gt;の設定を追加しています。いままでのYarnは&lt;code&gt;optionalDependencies&lt;/code&gt;で指定された依存をすべてダウンロードしていたため、esbuildなどのアーキテクチャごとのバイナリを&lt;code&gt;optionalDependencies&lt;/code&gt;でしているパッケージではダウンロードに時間がかかっていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/evanw/esbuild/issues/789#issuecomment-901467782&quot; title=&quot;Different strategy for installing platform-specific binaries · Issue #789 · evanw/esbuild&quot;&gt;Different strategy for installing platform-specific binaries · Issue #789 · evanw/esbuild&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 16.13.0がリリースされました。このバージョンからNode.js 16.xのLTSが開始されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.13.0/&quot;&gt;Node v16.13.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 16.xのLTSは2024-04-30までメンテナンスがサポートされる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Next.js 12がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nextjs.org/blog/next-12&quot;&gt;Blog - Next.js 12 | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WCベースのビルドに対応、&lt;code&gt;pages/_middleware.js&lt;/code&gt;を使ったMiddlwareの対応、React 18(Server-Side StreamingとReact Server Components)に対応しています。&lt;br&gt;
また、&lt;a href=&quot;https://github.com/webpack/webpack/projects/9&quot;&gt;webpackの&lt;code&gt;buildHttp&lt;/code&gt;&lt;/a&gt;を使ったURL Importsに対応し、URLを直接ES Modulesとしてインポートし&lt;code&gt;next.lock&lt;/code&gt;のロックファイルで管理できるようになります。&lt;br&gt;
また、クローラーbotに対するISRの最適化、AVIFの対応なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-96-beta-conditional-focus-priority-hints-and-more&quot;&gt;Chromium Blog: Chrome 96 Beta: Conditional Focus, Priority Hints, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/10/chrome-96-beta-conditional-focus.html&quot; title=&quot;Chromium Blog: Chrome 96 Beta: Conditional Focus, Priority Hints, and More&quot;&gt;blog.chromium.org/2021/10/chrome-96-beta-conditional-focus.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 96 betaリリース。&lt;br&gt;
Chromeバージョン 100をテストできるフラグの追加。&lt;br&gt;
Origin TrialとしてConditional Focus、Priority Hintsの追加。&lt;br&gt;
BFCacheがDeskopでも有効化、CSS &lt;code&gt;:autofill&lt;/code&gt;擬似クラスとMedia Queryの&lt;code&gt;prefers-contrast&lt;/code&gt;をサポート。&lt;br&gt;
HTTPS DNS Recordsのサポート、WebAssemblyのCSP対応で&lt;code&gt;wasm-unsafe-eval&lt;/code&gt;をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;early-preview-new-react-documentation-by-rachelnabors-pull-request-3965-reactjs-reactjs-org&quot;&gt;[Early Preview] New React Documentation by rachelnabors · Pull Request #3965 · reactjs/reactjs.org&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/reactjs.org/pull/3965&quot; title=&quot;\[Early Preview\] New React Documentation by rachelnabors · Pull Request #3965 · reactjs/reactjs.org&quot;&gt;github.com/reactjs/reactjs.org/pull/3965&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactの新しいドキュメントのベータ版がリリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;security-issue-compromised-npm-packages-of-ua-parser-js-0-7-29-0-8-0-1-0-0-questions-about-deprecated-npm-package-ua-parser-js-issue-536-faisalman-ua-parser-js&quot;&gt;Security issue: compromised npm packages of ua-parser-js (0.7.29, 0.8.0, 1.0.0) - Questions about deprecated npm package ua-parser-js · Issue #536 · faisalman/ua-parser-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/faisalman/ua-parser-js/issues/536&quot; title=&quot;Security issue: compromised npm packages of ua-parser-js (0.7.29, 0.8.0, 1.0.0) - Questions about deprecated npm package ua-parser-js · Issue #536 · faisalman/ua-parser-js&quot;&gt;github.com/faisalman/ua-parser-js/issues/536&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;マルウェアを含むua-parser-js 0.7.29/0.8.0/1.0.0が公開されていたため、&lt;br&gt;
それぞれpatch versionとして0.7.30/0.8.1/1.0.1がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sonatype.com/newly-found-npm-malware-mines-cryptocurrency-on-windows-linux-macos-devices&quot; title=&quot;Newly Found npm Malware Mines Cryptocurrency on Windows, Linux, macOS Devices&quot;&gt;Newly Found npm Malware Mines Cryptocurrency on Windows, Linux, macOS Devices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yarn-3-1-corepack-esm-pnpm-optional-packages-dev-community&quot;&gt;Yarn 3.1 🎃👻 Corepack, ESM, pnpm, Optional Packages ... - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak&quot; title=&quot;Yarn 3.1 🎃👻 Corepack, ESM, pnpm, Optional Packages ... - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Yarn 3.1リリース。&lt;br&gt;
&lt;code&gt;yarn init -2&lt;/code&gt;でCorepackの対応、PnPでのEMSサポート、&lt;code&gt;nodeLinker: pnpm&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;optionalDependencies&lt;/code&gt;で指定したアーキテクチャだけをダウンロードする&lt;code&gt;supportedArchitectures&lt;/code&gt;の設定を追加、&lt;code&gt;wrokspaces&lt;/code&gt;コマンドに&lt;code&gt;--since&lt;/code&gt;フラグの追加&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yarnpkg/berry/blob/master/CHANGELOG.md#310&quot; title=&quot;berry/CHANGELOG.md at master · yarnpkg/berry&quot;&gt;berry/CHANGELOG.md at master · yarnpkg/berry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/evanw/esbuild/issues/789#issuecomment-901467782&quot; title=&quot;Different strategy for installing platform-specific binaries · Issue #789 · evanw/esbuild&quot;&gt;Different strategy for installing platform-specific binaries · Issue #789 · evanw/esbuild&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-2-0-masters-of-the-universe-solidjs-solid&quot;&gt;Release v1.2.0 - Masters of the Universe · solidjs/solid&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/solidjs/solid/releases/tag/v1.2.0&quot; title=&quot;Release v1.2.0 - Masters of the Universe · solidjs/solid&quot;&gt;github.com/solidjs/solid/releases/tag/v1.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Solid v1.2.0リリース。&lt;br&gt;
Custom Rendererのサポート、&lt;code&gt;html&lt;/code&gt;テンプレートリテラルでSpread構文のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-13-0-lts-node-js&quot;&gt;Node v16.13.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.13.0/&quot; title=&quot;Node v16.13.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.13.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 16のLong Term Support (LTS)となる16.13.0がリリースされた。&lt;br&gt;
2024-04-30までメンテナンスされる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blog-next-js-12-next-js&quot;&gt;Blog - Next.js 12 | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/blog/next-12&quot; title=&quot;Blog - Next.js 12 | Next.js&quot;&gt;nextjs.org/blog/next-12&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 12リリース。&lt;br&gt;
SWCベースのビルドに対応、Middlwareの対応、React 18(Server-Side StreamingとReact Server Components)に対応。&lt;br&gt;
webpackの&lt;code&gt;buildHttp&lt;/code&gt;を使ったURL Importsに対応、クローラーbotに対するISRの最適化、AVIFの対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimizing-resource-loading-with-priority-hints&quot;&gt;Optimizing resource loading with Priority Hints&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/priority-hints/&quot; title=&quot;Optimizing resource loading with Priority Hints&quot;&gt;web.dev/priority-hints/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 96 betaでのOrigin Trialで実装されたPriority Hintsについて。&lt;br&gt;
&lt;code&gt;importance&lt;/code&gt;属性を使ってリソースロードの優先度のHintを定義できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-4-5-esm&quot;&gt;TypeScript 4.5 以降で ESM 対応はどうなるのか？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/teppeis/articles/2021-10-typescript-45-esm&quot; title=&quot;TypeScript 4.5 以降で ESM 対応はどうなるのか？&quot;&gt;zenn.dev/teppeis/articles/2021-10-typescript-45-esm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのESM対応について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;monitor-your-web-application-with-the-reporting-api&quot;&gt;Monitor your web application with the Reporting API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/reporting-api/&quot; title=&quot;Monitor your web application with the Reporting API&quot;&gt;web.dev/reporting-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 96から利用できる&lt;code&gt;Reporting-Endpoints&lt;/code&gt;について。&lt;br&gt;
&lt;code&gt;Report-To&lt;/code&gt;はDeprecatedとなり&lt;code&gt;Reporting-Endpoints&lt;/code&gt;を使うようになる。&lt;br&gt;
CSPエラー、ネットワークエラー、ポリシーエラーのレポート先を指定できる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5712172409683968&quot; title=&quot;Reporting API: Isolate reports per-document and support the Reporting-Endpoints header - Chrome Platform Status&quot;&gt;Reporting API: Isolate reports per-document and support the Reporting-Endpoints header - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/reporting-api-migration/#migration-steps&quot; title=&quot;Migrate to Reporting API v1&quot;&gt;Migrate to Reporting API v1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-webkit-features-in-safari-15-webkit&quot;&gt;New WebKit Features in Safari 15 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11989/new-webkit-features-in-safari-15/&quot; title=&quot;New WebKit Features in Safari 15 | WebKit&quot;&gt;webkit.org/blog/11989/new-webkit-features-in-safari-15/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 15の変更点について。&lt;br&gt;
WebExtensionsの対応、&lt;code&gt;theme-color&lt;/code&gt;の対応、CSSの&lt;code&gt;aspect-ratio&lt;/code&gt;、&lt;code&gt;list-style-type&lt;/code&gt;に新しい属性値の追加など。&lt;br&gt;
JavaScriptのTop-Level &lt;code&gt;await&lt;/code&gt;、Error Cause、Private class methodsの対応。&lt;br&gt;
また、WebGL 2、Web Share API、1秒以内の制限付きで&lt;code&gt;requestAnimationFrame&lt;/code&gt;を間に入れたユーザージェスチャが伝搬するようになるなど。&lt;br&gt;
その他には、iPadでのVP9/WebMのハードウェアアクセラレーション対応、Private Click Measurementの更新、&lt;code&gt;autocomplete=one-time-code&lt;/code&gt;の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;core-web-vitals-checker-calibre&quot;&gt;Core Web Vitals Checker | Calibre&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calibreapp.com/tools/core-web-vitals-checker&quot; title=&quot;Core Web Vitals Checker | Calibre&quot;&gt;calibreapp.com/tools/core-web-vitals-checker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome User Experience Report (CrUX)のデータを元にWebVitalのスコアをチェックするツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unjs-unstorage-universal-storage-layer&quot;&gt;unjs/unstorage: 🌍 💾 Universal Storage Layer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/unjs/unstorage&quot; title=&quot;unjs/unstorage: 🌍 💾 Universal Storage Layer&quot;&gt;github.com/unjs/unstorage&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;localForageなどのようにdriverを切り替え可能なKVSライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/localForage/localForage&quot; title=&quot;localForage/localForage: 💾 Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using a simple but powerful API.&quot;&gt;localForage/localForage: 💾 Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using a simple but powerful API.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/kvs&quot; title=&quot;azu/kvs: Lightweight key-value storage library for Browser, Node.js, and In-Memory.&quot;&gt;azu/kvs: Lightweight key-value storage library for Browser, Node.js, and In-Memory.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gatsby-the-definitive-guide&quot;&gt;Gatsby: The Definitive Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/gatsby-the-definitive/9781492087502/&quot; title=&quot;Gatsby: The Definitive Guide&quot;&gt;learning.oreilly.com/library/view/gatsby-the-definitive/9781492087502/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Gatsbyの入門書&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-3-no-starch-pressress-amazon&quot;&gt;流麗なJavaScript 第3版 (no starch pressress) | マリン・ハーバーベーク, イノウ |本 | 通販 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4802613377/&quot; title=&quot;流麗なJavaScript 第3版 (no starch pressress) | マリン・ハーバーベーク, イノウ |本 | 通販 | Amazon&quot;&gt;www.amazon.co.jp/dp/4802613377/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Eloquent JavaScriptの翻訳本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 27 Oct 2021 11:19:56 +0900</pubDate>
        <link>https://jser.info/2021/10/27/yarn-3.1-node.js-16.13.0lts-next.js-12/</link>
        <guid isPermaLink="true">https://jser.info/2021/10/27/yarn-3.1-node.js-16.13.0lts-next.js-12/</guid>
        
        <category>Chrome</category>
        
        <category>React</category>
        
        <category>book</category>
        
        <category>browser</category>
        
        <category>performance</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-10-20のJS: Parcel v2、Node v17.0.0、Nuxt 3 beta</title>
        <description>&lt;p&gt;JSer.info #562 - ビルドツールのParcel v2がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/blog/v2/&quot;&gt;Announcing Parcel v2!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parcelは設定なしで動作することを目的にしているため、v1ではプラグインの仕組みは薄い形になっていました。&lt;br&gt;
Parcel v2ではプラグインの仕組みを刷新し、様々なケースに対応できるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/features/plugins/&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Tree Shakingをデフォルト化、&lt;a href=&quot;https://github.com/swc-project/swc&quot;&gt;SWC&lt;/a&gt;ベースのJavaScriptコンパイラに変更、ModernとLegacyビルドの出し分け、Image optimizerの追加されています。&lt;br&gt;
その他にも、bundleのインライン化、ライブラリ向けのビルドのサポート、C++やRustでコアモジュールの一部を書き直し、ビルドパフォーマンスの改善なども含まれています。&lt;/p&gt;

&lt;p&gt;Parcel v1からマイグレーションについてのドキュメントも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/getting-started/migration/&quot;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 17.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v17.0.0/&quot;&gt;Node v17.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-17-is-here-8dba1e14e382&quot;&gt;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nodeの奇数バージョンはLTSとはなりませんが、&lt;code&gt;Current&lt;/code&gt;バージョンが17.xとなります。&lt;br&gt;
現在のNodeのLTSは12と14ですが、2021-10-26にNode 16がLTSに追加されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 17では、&lt;code&gt;readline&lt;/code&gt;モジュールのPromise対応、OpenSSL 3.0へのアップデート、V8 9.5へアップデート、npm 8.0.0へのアップデート、スタックトレースにNodeバージョンを表示などの変更が含まれています。&lt;br&gt;
またウェブ標準の&lt;code&gt;strcturedClone()&lt;/code&gt;と&lt;code&gt;DOMException&lt;/code&gt;をサポートが追加されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/structuredClone&quot;&gt;structuredClone()&lt;/a&gt;は&lt;code&gt;postMessage&lt;/code&gt;などで内部的に使われていた(DOMを含む)オブジェクトの複製のメカニズムを関数として公開したメソッドです。&lt;br&gt;
最近、WHATWG HTMLの仕様に追加され、&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1722576&quot;&gt;Firefox&lt;/a&gt;や&lt;a href=&quot;https://deno.com/blog/v1.13#support-for-self.structuredclone()&quot;&gt;Deno&lt;/a&gt;で実装され、&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1233571&quot;&gt;Chrome&lt;/a&gt;、&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=228331&quot;&gt;Safari&lt;/a&gt;、&lt;a href=&quot;https://github.com/zloirock/core-js/issues/969&quot;&gt;core-js&lt;/a&gt;で実装が進められています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/html/pull/3414&quot;&gt;Expose structuredClone by surma · Pull Request #3414 · whatwg/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この&lt;code&gt;structuredClone()&lt;/code&gt;は&lt;code&gt;JSON.parse&lt;/code&gt;/&lt;code&gt;JSON.strinfigy&lt;/code&gt;がサポートしていないオブジェクト(MapやRegExpなど)もサポートしていため、DOM以外の部分でも有用です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/petamoriken/articles/ad1e943d8d113c&quot;&gt;構造化複製アルゴリズムを使ったオブジェクトのディープコピー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;structuredClone()&lt;/code&gt;で複製ができない場合は&lt;code&gt;DOMException&lt;/code&gt;を例外として投げる仕様であるため、&lt;code&gt;DOMException&lt;/code&gt;も合わせて実装されています。&lt;/p&gt;

&lt;p&gt;Node 17にはNode 16の変更点も含まれるので、その他の変更は次の記事を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/&quot;&gt;2021-04-27のJS: Node.js 16.0.0、Chrome 91 beta、Prisma(Ready for production) - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2021/10/20/114721&quot;&gt;Node.js v17 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-parcel-v2&quot;&gt;Announcing Parcel v2!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://parceljs.org/blog/v2/&quot; title=&quot;Announcing Parcel v2!&quot;&gt;parceljs.org/blog/v2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel v2リリース。&lt;br&gt;
プラグインの仕組みを刷新、Tree Shakingをデフォルト化、SWCベースのJavaScriptコンパイラに変更、ModernとLegacyビルドの出し分け、Image optimizerの追加。&lt;br&gt;
bundleのインライン化、ライブラリ向けのビルドのサポート、開発時はリクエストされたタイミングで遅延ビルドできるようになるなど。&lt;br&gt;
その他にもSource MapライブラリをRustで書き直してパフォーマンス改善やファイル監視の仕組みの改善などが含まれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/getting-started/migration/&quot; title=&quot;Migration&quot;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-15-release-notes-deno-blog&quot;&gt;Deno 1.15 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.15&quot; title=&quot;Deno 1.15 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.15&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.15リリース。&lt;br&gt;
Web Crypto APIの更新、FFIの改善、&lt;code&gt;deno uninstall&lt;/code&gt;コマンドの追加、&lt;code&gt;deno lint --watch&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;Deno.test&lt;/code&gt;がネストしたテストケースをサポート、V8 9.5へアップデート、Node.js互換のモジュールを利用できる&lt;code&gt;--compat&lt;/code&gt;フラグの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/uki00a/articles/node-compat-mode-introduced-in-deno-v1-15&quot; title=&quot;Deno v1.15で導入されたNode.js互換モードについて&quot;&gt;Deno v1.15で導入されたNode.js互換モードについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxt-introducing-nuxt-3-beta&quot;&gt;Nuxt - Introducing Nuxt 3 Beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nuxtjs.org/announcements/nuxt3-beta/&quot; title=&quot;Nuxt - Introducing Nuxt 3 Beta&quot;&gt;nuxtjs.org/announcements/nuxt3-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3 betaリリース。&lt;br&gt;
Vue 3とViteへの対応。&lt;br&gt;
新しいサーバエンジンのNitro Engineを導入することで、通常のNode.jsサーバ、Serverless、Service Workerなど様々な形でデプロイできるようになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github-advisory-database-now-powers-npm-audit-the-github-blog&quot;&gt;GitHub Advisory Database now powers npm audit | The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-10-07-github-advisory-database-now-powers-npm-audit/&quot; title=&quot;GitHub Advisory Database now powers npm audit | The GitHub Blog&quot;&gt;github.blog/2021-10-07-github-advisory-database-now-powers-npm-audit/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm audit&lt;/code&gt;がGitHub Advisory Databaseをみるようになった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-pinojs-pino&quot;&gt;Release v7.0.0 · pinojs/pino&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pinojs/pino/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · pinojs/pino&quot;&gt;github.com/pinojs/pino/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pino 7.0.0リリース。&lt;br&gt;
ログの処理を別Threadなどに渡せる&lt;code&gt;pino.transport()&lt;/code&gt;の追加、&lt;code&gt;pino.multistream()&lt;/code&gt;の追加、TypeScriptの型を同梱するようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nearform.com/blog/pino7-0-0-pino-transport-worker_thread-transport/&quot; title=&quot;Welcome to pino@7.0.0 - and the era of worker\_thread transport - NearForm&quot;&gt;Welcome to pino@7.0.0 - and the era of worker_thread transport - NearForm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v17-0-0-current-node-js&quot;&gt;Node v17.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v17.0.0/&quot; title=&quot;Node v17.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v17.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v17.0.0リリース。&lt;br&gt;
&lt;code&gt;readline&lt;/code&gt;モジュールのPromise対応、OpenSSL 3.0へのアップデート、V8 9.5へアップデート、npm 8.0.0へのアップデート、スタックトレースにNodeバージョンを表示など。&lt;br&gt;
またウェブ標準の&lt;code&gt;strcturedClone()&lt;/code&gt;と&lt;code&gt;DOMException&lt;/code&gt;をサポート&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-17-is-here-8dba1e14e382&quot; title=&quot;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&quot;&gt;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · npm/cli&quot;&gt;Release v8.0.0 · npm/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-visual-guide-to-react-rendering-cheat-sheet-alex-sidorenko&quot;&gt;A Visual Guide to React Rendering - Cheat Sheet | Alex Sidorenko&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://alexsidorenko.com/blog/react-render-cheat-sheet/&quot; title=&quot;A Visual Guide to React Rendering - Cheat Sheet | Alex Sidorenko&quot;&gt;alexsidorenko.com/blog/react-render-cheat-sheet/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cheatsheet&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのレンダリングのビジュアライズ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rf21-naman-goel-rethinking-css-introducing-stylex-youtube&quot;&gt;RF21 – Naman Goel – Rethinking CSS - Introducing Stylex - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ur-sGzUWId4&quot; title=&quot;RF21 – Naman Goel – Rethinking CSS - Introducing Stylex - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;ur-sGzUWId4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FacebookのAtomic CSSの実装であるStylexについての動画。&lt;br&gt;
StylexはReact-Nativeライクなスタイルの書き方をするツールキット、Atomic CSSによって線形的に増えるCSSの量を非線形にできる。&lt;br&gt;
2021年末にベータ版をリリースする予定。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2021/10/facebook-css-js-stylex/&quot; title=&quot;Facebook CSS-in-JS Solution Stylex Introduced at React Finland 2021&quot;&gt;Facebook CSS-in-JS Solution Stylex Introduced at React Finland 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-finland-2021-talks-youtube&quot;&gt;React Finland 2021 - Talks - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL-a9lBflNu2opNHeISTnlHgGVlI7oGLXi&quot; title=&quot;React Finland 2021 - Talks - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL-a9lBflNu2opNHeISTnlHgGVlI7oGLXi&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Finland 2021の動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL-a9lBflNu2rhk1vr3yr4mdRzzUb_nj5P&quot; title=&quot;React Finland 2021 - Sessions - YouTube&quot;&gt;React Finland 2021 - Sessions - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;privacytests-org-open-source-tests-of-web-browser-privacy&quot;&gt;PrivacyTests.org: open-source tests of web browser privacy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://privacytests.org/&quot; title=&quot;PrivacyTests.org: open-source tests of web browser privacy&quot;&gt;privacytests.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザごとのFinger PrintingやTracking対策などのPrivacy機能をまとめたサイト。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oslabs-beta-sapling-sapling-a-convenient-way-to-traverse-your-react-app-in-vs-code&quot;&gt;oslabs-beta/sapling: Sapling - A convenient way to traverse your React app in VS Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oslabs-beta/sapling&quot; title=&quot;oslabs-beta/sapling: Sapling - A convenient way to traverse your React app in VS Code&quot;&gt;github.com/oslabs-beta/sapling&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのコンポーネントツリーをエディタのサイドパネルに表示するVSCode拡張。&lt;br&gt;
Rootとなるコンポーネントを含むファイルを選ぶと、そのコンポーネントが含むコンポーネントをツリーとして表示してくれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=team-sapling.sapling&quot; title=&quot;Sapling - Visual Studio Marketplace&quot;&gt;Sapling - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://javascript.plainenglish.io/introducing-sapling-a-vs-code-extension-for-traversing-your-react-component-hierarchy-3ac94d95887e&quot; title=&quot;Introducing Sapling: a VS Code Extension for Traversing React Component Hierarchy | by Team Sapling | Oct, 2021 | JavaScript in Plain English&quot;&gt;Introducing Sapling: a VS Code Extension for Traversing React Component Hierarchy | by Team Sapling | Oct, 2021 | JavaScript in Plain English&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;practical-svelte-create-performant-applications-with-the-svelte-component-framework-alex-libby-apress&quot;&gt;Practical Svelte - Create Performant Applications with the Svelte Component Framework | Alex Libby | Apress&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apress.com/gp/book/9781484273739&quot; title=&quot;Practical Svelte - Create Performant Applications with the Svelte Component Framework | Alex Libby | Apress&quot;&gt;www.apress.com/gp/book/9781484273739&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Svelteを使ったウェブアプリケーション開発の入門書&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sairyss-domain-driven-hexagon-guide-on-domain-driven-design-hexagonal-architecture-best-practices-etc&quot;&gt;Sairyss/domain-driven-hexagon: Guide on Domain-Driven Design, Hexagonal architecture, best practices etc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Sairyss/domain-driven-hexagon&quot; title=&quot;Sairyss/domain-driven-hexagon: Guide on Domain-Driven Design, Hexagonal architecture, best practices etc.&quot;&gt;github.com/Sairyss/domain-driven-hexagon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ドメイン駆動設計(DDD)についてのガイド。&lt;br&gt;
主にDDDに関係する用語、設計、TypeScriptでのサンプルを用いた技術的な戦術についての解説をまとめたもの。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 20 Oct 2021 12:47:20 +0900</pubDate>
        <link>https://jser.info/2021/10/20/parcel-v2-node-v17.0.0-nuxt-3-beta/</link>
        <guid isPermaLink="true">https://jser.info/2021/10/20/parcel-v2-node-v17.0.0-nuxt-3-beta/</guid>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>video</category>
        
        <category>bundler</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-10-12のJS: npm 8.0.0(Node.js 16に同梱)、jQuery Mobileの非推奨化/jQuery UIはメンテナンスモードへ、ESLint 8</title>
        <description>&lt;p&gt;JSer.info #561 - npm 8.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot;&gt;Release v8.0.0 · npm/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 10のサポート終了、Node.jsモジュール(&lt;code&gt;require(&amp;quot;npm&amp;quot;)&lt;/code&gt;)として利用する方法がサポート終了となっています。&lt;/p&gt;

&lt;p&gt;既に&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.11.0/&quot;&gt;Node v16.11.0&lt;/a&gt;に含まれているため、2021-10-26にリリース予定のNode.js 16 LTSにnpm 8が含まれる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/40168&quot;&gt;deps: &lt;code&gt;npm@8&lt;/code&gt; · Issue #40168 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;jQuery UI 1.13.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&quot;&gt;jQuery UI 1.13.0 released | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQuery 1.7以下のサポートを終了し、1.8以降の最新のバージョンを含むjQueryに対応しています。&lt;/p&gt;

&lt;p&gt;このリリースをもって、jQuery UIはメンテナンスモードとなり、今後はバグ修正やセキュリティ修正などが中心となります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-maintainers-update-and-transition-jquery-ui-as-part-of-overall-modernization-efforts/&quot;&gt;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、同時にjQuery MobileはDeprecatedとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&quot;&gt;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ESLint 8.0.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更としてNode 10のサポート終了、&lt;code&gt;codeframe&lt;/code&gt;と&lt;code&gt;table&lt;/code&gt;のフォーマッターをコアから削除、&lt;code&gt;eslint:recommended&lt;/code&gt;の更新などが行われています。&lt;br&gt;
また、&lt;code&gt;ESLint&lt;/code&gt;クラスを追加し&lt;code&gt;CLIEngine&lt;/code&gt;クラスを削除、&lt;code&gt;eslint/lib&lt;/code&gt;のエントリーポイントの削除、プラグインでも一部変更が含まれています。&lt;br&gt;
そのため、一部の外部ルールがESLint 8では動かなくなっている可能性はありそうです。&lt;/p&gt;

&lt;p&gt;機能追加としてES2020のサポート、使われていない&lt;code&gt;eslint-disable&lt;/code&gt;コメントを削除できるようになっています。&lt;/p&gt;

&lt;p&gt;マイグレーションガイドは、次のページに公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-8.0.0&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-npm-cli&quot;&gt;Release v8.0.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 8.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了、Node.jsモジュール(&lt;code&gt;require(&amp;quot;npm&amp;quot;)&lt;/code&gt;)としてのサポートを終了など。&lt;br&gt;
2021-10-26にリリース予定のNode.js 16 LTSに含まれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/40168&quot; title=&quot;deps: \&amp;amp;#x60;npm@8\&amp;amp;#x60; · Issue #40168 · nodejs/node&quot;&gt;deps: `npm@8` · Issue #40168 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-immutable-js-immutable-js&quot;&gt;Release v4.0.0 · immutable-js/immutable-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/immutable-js/immutable-js/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · immutable-js/immutable-js&quot;&gt;github.com/immutable-js/immutable-js/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;immutable-js v4.0.0リリース。&lt;br&gt;
MITライセンスへ変更、TypeScriptとFlowの型を改善、ドキュメントの更新。&lt;br&gt;
破壊的な変更として、&lt;code&gt;merge&lt;/code&gt;と&lt;code&gt;mergeDeep&lt;/code&gt;の挙動変更、&lt;code&gt;Iterable&lt;/code&gt;をCollectionにリネーム、APIの削除や追加などが含まれる。&lt;br&gt;
また、CollectionがECMAScriptのIterable protocolの実装となるように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-11-0-current-node-js&quot;&gt;Node v16.11.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.11.0/&quot; title=&quot;Node v16.11.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.11.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js v16.11.0リリース。&lt;br&gt;
npm 8.0.0を同梱するように。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lots-to-see-in-firefox-93-mozilla-hacks-the-web-developer-blog&quot;&gt;Lots to see in Firefox 93! - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/10/lots-to-see-in-firefox-93/&quot; title=&quot;Lots to see in Firefox 93! - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/10/lots-to-see-in-firefox-93/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 93リリース。&lt;br&gt;
AVIFのサポート、ECMAScript Proposal Stage 4のStatic initialization blocksのサポート。&lt;br&gt;
&lt;code&gt;ElementInternals.shadowRoot&lt;/code&gt;と &lt;code&gt;HTMLElement.attachInternals&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/93&quot; title=&quot;Firefox 93 for developers - Mozilla | MDN&quot;&gt;Firefox 93 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/93.0/releasenotes/&quot; title=&quot;Firefox 93.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 93.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1-13-0-released-jquery-ui-blog&quot;&gt;jQuery UI 1.13.0 released | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&quot; title=&quot;jQuery UI 1.13.0 released | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.13.0リリース&lt;br&gt;
jQuery 1.7以下のサポートを終了し、1.8以降の最新のバージョンを含むjQueryに対応。&lt;br&gt;
このリリースをもってjQuery UIはメンテナンスモードとなり、今後はセキュリティやバグ修正のみとなる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-maintainers-update-and-transition-jquery-ui-as-part-of-overall-modernization-efforts/&quot; title=&quot;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&quot;&gt;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-maintainers-continue-modernization-initiative-with-deprecation-of-jquery-mobile-openjs-foundation&quot;&gt;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&quot; title=&quot;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&quot;&gt;openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery Mobileは2021-10-07をもってDeprecatedとなった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-39-0-nvm-sh-nvm&quot;&gt;Release v0.39.0 · nvm-sh/nvm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm/releases/tag/v0.39.0&quot; title=&quot;Release v0.39.0 · nvm-sh/nvm&quot;&gt;github.com/nvm-sh/nvm/releases/tag/v0.39.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nodeバージョン管理ツールのnvm 0.39.0リリース。&lt;br&gt;
WSL/MSYS/Cygwin環境のWindowsをサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v8-0-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot; title=&quot;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2021/10/eslint-v8.0.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint v8.0.0リリース。&lt;br&gt;
破壊的な変更としてNode 10のサポート終了&lt;br&gt;
、&lt;code&gt;codeframe&lt;/code&gt;と&lt;code&gt;table&lt;/code&gt;のフォーマッターをコアから削除、&lt;code&gt;eslint:recommended&lt;/code&gt;の更新。&lt;br&gt;
また、&lt;code&gt;ESLint&lt;/code&gt;クラスを追加し&lt;code&gt;CLIEngine&lt;/code&gt;クラスを削除、&lt;code&gt;eslint/lib&lt;/code&gt;のエントリーポイントの削除など。&lt;br&gt;
機能追加としてES2020のサポート、使われていない&lt;code&gt;eslint-disable&lt;/code&gt;コメントを削除できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-8.0.0&quot; title=&quot;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-typescript-eslint-typescript-eslint&quot;&gt;Release v5.0.0 · typescript-eslint/typescript-eslint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · typescript-eslint/typescript-eslint&quot;&gt;github.com/typescript-eslint/typescript-eslint/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript ESLint 5.0.0リリース。&lt;br&gt;
ESLint 8へアップデート、Node 10のサポート終了。&lt;br&gt;
&lt;code&gt;eslint-recommended&lt;/code&gt;のルールを更新、ルールの変更、ASTの更新など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot; title=&quot;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safe-dom-manipulation-with-the-sanitizer-api&quot;&gt;Safe DOM manipulation with the Sanitizer API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/sanitizer/&quot; title=&quot;Safe DOM manipulation with the Sanitizer API&quot;&gt;web.dev/sanitizer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sanitizer APIのProposalについて。&lt;br&gt;
HTML文字列をサニタイズするAPIと&lt;code&gt;Element#setHTML&lt;/code&gt;での設定方法について。&lt;br&gt;
DomPurifyなどとは異なりサニタイズしたHTML文字列ではなく、HTMLElementを返すAPIを持つ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-streams-everywhere-and-fetch-for-node-js-css-tricks&quot;&gt;Web Streams Everywhere (and Fetch for Node.js) | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/web-streams-everywhere-and-fetch-for-node-js/&quot; title=&quot;Web Streams Everywhere (and Fetch for Node.js) | CSS-Tricks&quot;&gt;css-tricks.com/web-streams-everywhere-and-fetch-for-node-js/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Streams APIについて。&lt;br&gt;
基本的な使い方、Node 17から利用できるNode.js Streamからの変換について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;have-single-page-apps-ruined-the-web-transitional-apps-with-rich-harris-nytimes-youtube&quot;&gt;Have Single-Page Apps Ruined the Web? | Transitional Apps with Rich Harris, NYTimes - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=860d8usGC0o&quot; title=&quot;Have Single-Page Apps Ruined the Web? | Transitional Apps with Rich Harris, NYTimes - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;860d8usGC0o&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SPAとMPAについて。&lt;br&gt;
SPAにはパフォーマンスなどの欠点があるが、MPAにはナビゲーションやステートなどの欠点がある。&lt;br&gt;
アプリケーションはSPAとMPAで二分されるものではなく、Next.jsやSvelteKitなどは両方の長所をとるアプローチをしていて、それをTransitionalAppsと呼ぼう的な話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/Rich_Harris/status/1446601175197880325&quot; title=&quot;Rich Harris on Twitter: &amp;amp;amp;amp;quot;i recorded a talk for https://t.co/aMw9AtvdSC — https://t.co/GETYZ6JW47 — about whether you should build multi-page apps (MPAs) or single-page apps (SPAs). spoiler: the answer is &amp;amp;amp;#039;neither&amp;amp;amp;#039;. or &amp;amp;amp;#039;both&amp;amp;amp;#039;, depending on your definitions. here&amp;amp;amp;#039;s the condensed tweet thread version:&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Rich Harris on Twitter: &amp;amp;quot;i recorded a talk for https://t.co/aMw9AtvdSC — https://t.co/GETYZ6JW47 — about whether you should build multi-page apps (MPAs) or single-page apps (SPAs). spoiler: the answer is &amp;#039;neither&amp;#039;. or &amp;#039;both&amp;#039;, depending on your definitions. here&amp;#039;s the condensed tweet thread version:&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukeed-tsm-typescript-module-loader&quot;&gt;lukeed/tsm: TypeScript Module Loader&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukeed/tsm&quot; title=&quot;lukeed/tsm: TypeScript Module Loader&quot;&gt;github.com/lukeed/tsm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;--loader&lt;/code&gt;や&lt;code&gt;--require&lt;/code&gt;に対応したTypeScriptのloaderライブラリ。&lt;br&gt;
ts-nodeのように扱える。内部的にはesbuildを使っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;core-manipulation-add-basic-trustedhtml-support-by-mgol-pull-request-4927-jquery-jquery&quot;&gt;Core:Manipulation: Add basic TrustedHTML support by mgol · Pull Request #4927 · jquery/jquery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/jquery/pull/4927&quot; title=&quot;Core:Manipulation: Add basic TrustedHTML support by mgol · Pull Request #4927 · jquery/jquery&quot;&gt;github.com/jquery/jquery/pull/4927&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryにTrusted Typesのサポートが実装された。&lt;br&gt;
jQuery 4.0に含まれる予定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues/4409&quot; title=&quot;Have Trusted Types API built directly into the jQuery Core Files · Issue #4409 · jquery/jquery&quot;&gt;Have Trusted Types API built directly into the jQuery Core Files · Issue #4409 · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-safevalues&quot;&gt;google/safevalues&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/safevalues&quot; title=&quot;google/safevalues&quot;&gt;github.com/google/safevalues&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Trutsted TypesベースのHTML、JavaScript、URLの文字列処理をするヘルパーライブラリ&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Oct 2021 12:42:43 +0900</pubDate>
        <link>https://jser.info/2021/10/12/npm-8.0.0node.js-16-jquery-mobilejquery-ui-eslint-8/</link>
        <guid isPermaLink="true">https://jser.info/2021/10/12/npm-8.0.0node.js-16-jquery-mobilejquery-ui-eslint-8/</guid>
        
        <category>jQuery</category>
        
        <category>security</category>
        
        <category>TypeScript</category>
        
        <category>Tools</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-10-04のJS: Vite 2.6.0、Safari Technology Preview 133、TypeScript 4.5 Beta</title>
        <description>&lt;p&gt;JSer.info #560 - Vite 2.6.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;デフォルトのminifyを&lt;a href=&quot;https://github.com/vitejs/vite/pull/5041&quot;&gt;terserからesbuildに変更&lt;/a&gt;、&lt;a href=&quot;https://github.com/vitejs/vite/pull/4864&quot;&gt;script要素の&lt;code&gt;async&lt;/code&gt;属性のサポート&lt;/a&gt;。&lt;br&gt;
静的サイトジェネレーターである&lt;a href=&quot;https://astro.build/&quot;&gt;Astro&lt;/a&gt;のコンポーネントファイル(&lt;code&gt;.astro&lt;/code&gt;)のサポート。&lt;br&gt;
また、importしているファイルが別のファイルをimportするように連鎖しているケースで、連鎖的にimportされるファイルを事前にtransformすることでコンパイルの待ち時間を減らす最適化などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5037&quot; title=&quot;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&quot;&gt;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、Vite用のReactプラグインが&lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot;&gt;@vitejs/plugin-react&lt;/a&gt;へと統合されています。&lt;br&gt;
もともとesbuildを使った&lt;a href=&quot;https://www.npmjs.com/package/@vitejs/plugin-react-refresh&quot;&gt;@vitejs/plugin-react-refresh&lt;/a&gt;とBabelを使った&lt;a href=&quot;https://github.com/alloc/vite-react-jsx&quot;&gt;vite-react-jsx&lt;/a&gt;がありましたが、&lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot;&gt;@vitejs/plugin-react&lt;/a&gt;が推奨へと変更されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Safari Technology Preview 133がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&quot;&gt;Release Notes for Safari Technology Preview 133 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSSの&lt;code&gt;calc()&lt;/code&gt;内で&lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;のサポートが追加されています。&lt;br&gt;
CSSの詳細度解決の前段にレイヤーを追加する&lt;a href=&quot;https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&quot;&gt;CSS Cascade Layers&lt;/a&gt;を実験的にサポート、ES Proposal Stage3の&lt;code&gt;Temporal&lt;/code&gt;をフラグ付きで実装しています。&lt;br&gt;
その他にも&lt;code&gt;BroadcastChannel&lt;/code&gt;の有効化、COOPとCOEPヘッダーをサポートし&lt;a href=&quot;https://web.dev/coop-coep/&quot;&gt;&lt;code&gt;self.crossOriginIsolated&lt;/code&gt;時に&lt;code&gt;SharedArrayBuffer&lt;/code&gt;を利用できるように&lt;/a&gt;なるなどの変更も含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.5 Betaがリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&quot;&gt;Announcing TypeScript 4.5 Beta - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScript 4.5 BetaではNode.jsのESMサポートに関する更新が行われています。&lt;br&gt;
&lt;code&gt;module: node12&lt;/code&gt;でのESMサポート、&lt;code&gt;.mjs&lt;/code&gt;と&lt;code&gt;.cjs&lt;/code&gt;に対応する拡張子として&lt;code&gt;.mts&lt;/code&gt;と&lt;code&gt;.cts&lt;/code&gt;の追加、&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;exports&lt;/code&gt;フィールドへの対応が含まれています。&lt;/p&gt;

&lt;p&gt;また、TypeScriptがビルトインで持つ&lt;a href=&quot;https://www.typescriptlang.org/tsconfig#lib&quot;&gt;lib&lt;/a&gt;の型定義を&lt;code&gt;dependencies&lt;/code&gt;としてバージョンをロックしたり、&lt;a href=&quot;https://github.com/npm/rfcs/blob/main/implemented/0001-package-aliases.md&quot;&gt;Package Aliases&lt;/a&gt;機能を使うことで別の型定義へと差し替えできるようになっています。&lt;/p&gt;

&lt;p&gt;例えば、次のように&lt;code&gt;tsconfig.json&lt;/code&gt;の&lt;code&gt;lib&lt;/code&gt;で&lt;code&gt;dom&lt;/code&gt;を指定しているとします。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dom&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この設定時に、&lt;code&gt;@typescript/lib-dom&lt;/code&gt;というパッケージが&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;dependencies&lt;/code&gt;にある場合、TypeScriptはそのパッケージの型定義を利用して型チェックを行います。&lt;br&gt;
今までの&lt;code&gt;lib&lt;/code&gt;はTypeScriptに同梱されていた型定義であったため、TypeScriptのバージョンを上げると型定義に破壊的な変更が発生していました。&lt;br&gt;
この&lt;code&gt;@typescript/lib-*&lt;/code&gt;での差し替えの仕組みを使うことで、&lt;code&gt;lib&lt;/code&gt;の型定義だけを特定のバージョンに固定できるようになっています。&lt;/p&gt;

&lt;p&gt;また、次のようにnpm/yarn/pnpmでサポートされているpackage aliasの機能を使うことで、&lt;code&gt;@typescript/lib-dom&lt;/code&gt;を別の型定義へと差し替えできます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@typescript/lib-dom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm:@types/web&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/56134857/how-to-install-npm-package-under-alias-or-different-name&quot;&gt;How to install NPM package under alias or different name - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他にも&lt;code&gt;Awaited&lt;/code&gt;型の追加、Top-Level awaitに対応した&lt;code&gt;module: es2022&lt;/code&gt;のサポート、Condition Typesにおいて一部末尾最適化、import名に対する&lt;code&gt;type&lt;/code&gt; modifierのサポートが追加されています。&lt;br&gt;
また、ECMAScript ProposalのPrivate Field Presence Checks、Import Assertionsのサポートが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vite-changelog-md-at-main-vitejs-vite&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&quot; title=&quot;vite/CHANGELOG.md at main · vitejs/vite&quot;&gt;github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite 2.6.0リリース。&lt;br&gt;
デフォルトのminifyをterserからesbuildに変更、script要素の&lt;code&gt;async&lt;/code&gt;属性のサポート、&lt;br&gt;
&lt;code&gt;.astro&lt;/code&gt;のサポート。&lt;br&gt;
また、importしているファイルが別のファイルをimportするように連鎖しているケースで、連鎖的にimportされるファイルを事前にtransformする仕組みの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5041&quot; title=&quot;feat: default build.minify to esbuild by yyx990803 · Pull Request #5041 · vitejs/vite&quot;&gt;feat: default build.minify to esbuild by yyx990803 · Pull Request #5041 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/4864&quot; title=&quot;feat: async script module support, close #3163 by patak-js · Pull Request #4864 · vitejs/vite&quot;&gt;feat: async script module support, close #3163 by patak-js · Pull Request #4864 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5038&quot; title=&quot;feat: support .astro files by drwpow · Pull Request #5038 · vitejs/vite&quot;&gt;feat: support .astro files by drwpow · Pull Request #5038 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5037&quot; title=&quot;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&quot;&gt;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-133-webkit&quot;&gt;Release Notes for Safari Technology Preview 133 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&quot; title=&quot;Release Notes for Safari Technology Preview 133 | WebKit&quot;&gt;webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 133リリース。&lt;br&gt;
CSSの&lt;code&gt;calc()&lt;/code&gt;内で&lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;のサポート。&lt;br&gt;
CSS Cascade Layersを実験的にサポート、ES Proposal Stage3の&lt;code&gt;Temporal&lt;/code&gt;をフラグ付きで実装。&lt;br&gt;
&lt;code&gt;BroadcastChannel&lt;/code&gt;の有効化、COOPとCOEPヘッダーをサポートし&lt;code&gt;self.crossOriginIsolated&lt;/code&gt;時に&lt;code&gt;SharedArrayBuffer&lt;/code&gt;を利用できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-5-beta-typescript&quot;&gt;Announcing TypeScript 4.5 Beta - TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&quot; title=&quot;Announcing TypeScript 4.5 Beta - TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.5 Betaリリース。&lt;br&gt;
&lt;code&gt;module: node12&lt;/code&gt;でのESMサポート、&lt;code&gt;.mjs&lt;/code&gt;と&lt;code&gt;.cjs&lt;/code&gt;に対応する拡張子として&lt;code&gt;.mts&lt;/code&gt;と&lt;code&gt;.cts&lt;/code&gt;の追加、&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;exports&lt;/code&gt;フィールドに対応。&lt;br&gt;
TypeScriptがビルトインで持つ&lt;code&gt;lib&lt;/code&gt;の型定義を&lt;code&gt;dependencies&lt;/code&gt;としてロックできるように。&lt;br&gt;
&lt;code&gt;Awaited&lt;/code&gt;型の追加、Top-Level awaitに対応した&lt;code&gt;module: es2022&lt;/code&gt;のサポート、Condition Typesにおいて一部末尾最適化するように。&lt;br&gt;
import名に対する&lt;code&gt;type&lt;/code&gt; modifierのサポート、ES ProposalのPrivate Field Presence Checks、Import Assertionsのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;passport-changelog-md-at-master-jaredhanson-passport&quot;&gt;passport/CHANGELOG.md at master · jaredhanson/passport&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jaredhanson/passport/blob/master/CHANGELOG.md#050---2021-09-23&quot; title=&quot;passport/CHANGELOG.md at master · jaredhanson/passport&quot;&gt;github.com/jaredhanson/passport/blob/master/CHANGELOG.md#050---2021-09-23&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Passport 0.5リリース。&lt;br&gt;
破壊的な変更として&lt;code&gt;IncomingMessage&lt;/code&gt;をprototype拡張して&lt;code&gt;login()&lt;/code&gt;などを追加するmonkey patchが削除された。&lt;br&gt;
代わりに&lt;code&gt;app.use(passport.initialize())&lt;/code&gt;のようにmiddlewareとして拡張するように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaredhanson/passport/compare/v0.4.1...v0.5.0&quot; title=&quot;Comparing v0.4.1...v0.5.0 · jaredhanson/passport&quot;&gt;Comparing v0.4.1...v0.5.0 · jaredhanson/passport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-66-react-native&quot;&gt;Announcing React Native 0.66 · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/10/01/version-066&quot; title=&quot;Announcing React Native 0.66 · React Native&quot;&gt;reactnative.dev/blog/2021/10/01/version-066&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Native&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.66リリース。&lt;br&gt;
Androidの新しいBluetooth権限に対応、M1 macのサポート改善、Hermes 0.9.0へのアップデート。&lt;br&gt;
Nightlyビルドが&lt;code&gt;@nightly&lt;/code&gt;のdist-tagで公開されるようになり&lt;code&gt;yarn upgrade react-native@nightly&lt;/code&gt;でインストールができるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-user-device-characteristics-report-chrome-developers&quot;&gt;Chrome user device characteristics report - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/en/blog/device-characteristics/&quot; title=&quot;Chrome user device characteristics report - Chrome Developers&quot;&gt;developer.chrome.com/en/blog/device-characteristics/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの使用統計データから、RAM、コア数、ネットワークの接続種類、WebGLのハードウェアサポートについてのデータを国ごとにまとめたレポート。&lt;br&gt;
Android、Windows、ChromeOSにおいての統計データがまとめられている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1BPz0UnQGotX0dACmJbHbbXFJa38jxmKhhNQ2RLj5Gms/edit&quot; title=&quot;Chrome User Device Characteristics - Google ドキュメント&quot;&gt;Chrome User Device Characteristics - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;explore-javascript-dependencies-with-lighthouse-treemap&quot;&gt;Explore JavaScript Dependencies With Lighthouse Treemap&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sia.codes/posts/lighthouse-treemap/&quot; title=&quot;Explore JavaScript Dependencies With Lighthouse Treemap&quot;&gt;sia.codes/posts/lighthouse-treemap/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse v7.5.0で追加されたLighthouse Treemapについて。&lt;br&gt;
Source Mapを使ってページのファイルサイズを一覧できる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · GoogleChrome/lighthouse&quot;&gt;Release v7.5.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;guidelines-for-choosing-a-node-js-framework-simon-plenderleith&quot;&gt;Guidelines for choosing a Node.js framework - Simon Plenderleith&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://simonplend.com/guidelines-for-choosing-a-node-js-framework/&quot; title=&quot;Guidelines for choosing a Node.js framework - Simon Plenderleith&quot;&gt;simonplend.com/guidelines-for-choosing-a-node-js-framework/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのフレームワークを選ぶときに考えること、見るべきポイントについて。&lt;br&gt;
どのフレームワークを選ぶべきかコンテキストによって異なる。&lt;br&gt;
そのため、ユースケース、フレームワークの書き方、Promiseの対応、ドキュメント、コミュニティ、プロジェクトの健全性などの見方について書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-rules-for-migrating-projects-from-commonjs-to-esm&quot;&gt;ESLint rules for migrating projects from CommonJS to ESM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/Jaid/164668c0151ae09d2bc81be78a203dd5&quot; title=&quot;ESLint rules for migrating projects from CommonJS to ESM&quot;&gt;gist.github.com/Jaid/164668c0151ae09d2bc81be78a203dd5&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CommonJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CommonJSではなくECMAScript Modulesを使うときに関係するESLintルールと設定まとめ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-write-about-web-performance-read-the-tea-leaves&quot;&gt;How to write about web performance | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2021/09/12/how-to-write-about-web-performance/&quot; title=&quot;How to write about web performance | Read the Tea Leaves&quot;&gt;nolanlawson.com/2021/09/12/how-to-write-about-web-performance/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブパフォーマンスの記事の難しさとベンチマークについて。&lt;br&gt;
ブラウザのパフォーマンスについて書くときに、どのような点に気をつけて書くと良いのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;accessible-palette-create-color-systems-with-consistent-lightness-and-contrast&quot;&gt;Accessible Palette: Create color systems with consistent lightness and contrast&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://accessiblepalette.com/&quot; title=&quot;Accessible Palette: Create color systems with consistent lightness and contrast&quot;&gt;accessiblepalette.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コントラスト比などのアクセシビリティに考慮した色を選ぶカラーパレットツール。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wildbit.com/blog/2021/09/16/accessible-palette-stop-using-hsl-for-color-systems&quot; title=&quot;Accessible Palette: stop using HSL for color systems | Wildbit&quot;&gt;Accessible Palette: stop using HSL for color systems | Wildbit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dolanmiu-docx-easily-generate-docx-files-with-js-ts-with-a-nice-declarative-api-works-for-node-and-on-the-browser&quot;&gt;dolanmiu/docx: Easily generate .docx files with JS/TS with a nice declarative API. Works for Node and on the Browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dolanmiu/docx&quot; title=&quot;dolanmiu/docx: Easily generate .docx files with JS/TS with a nice declarative API. Works for Node and on the Browser.&quot;&gt;github.com/dolanmiu/docx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでdocxファイルを生成するライブラリ。&lt;br&gt;
ビルダー関数で組み立ててコンテンツを作成できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;can-i-include-a-tag-to-a-tag-based-on-html-spec-whatwg&quot;&gt;Can I include a tag to a tag? Based on HTML Spec WHATWG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://caninclude.glitch.me/&quot; title=&quot;Can I include a tag to a tag? Based on HTML Spec WHATWG&quot;&gt;caninclude.glitch.me/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLの要素同士の入れ子関係が許容されているかをチェックできるツール。&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Oct 2021 21:21:35 +0900</pubDate>
        <link>https://jser.info/2021/10/04/vite-2.6.0-safari-technology-preview-133-typescript-4.5-beta/</link>
        <guid isPermaLink="true">https://jser.info/2021/10/04/vite-2.6.0-safari-technology-preview-133-typescript-4.5-beta/</guid>
        
        <category>Chrome</category>
        
        <category>performance</category>
        
        <category>node.js</category>
        
        <category>opinion</category>
        
        <category>Tools</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-28のJS: Lit 2、Gatsby 4 beta、Partytown(Third-Party Script into Worker)</title>
        <description>&lt;p&gt;JSer.info #559 - Web Componentsを扱うライブラリであるLit 2がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lit.dev/blog/2021-09-21-announcing-lit-2/&quot;&gt;Announcing Lit 2 stable release – Lit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nfb779XIhsU&quot;&gt;Lit 2.0 Release Livestream - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lit 2は今までLitElement 2.xとlit-html 1.xという別々のパッケージになったものを統合していて、&lt;code&gt;lit&lt;/code&gt;という新しいパッケージ担っています。&lt;/p&gt;

&lt;p&gt;classベースのDirectives API、非同期Directives、Reactive Controllersの追加されています。&lt;br&gt;
要素全体に対して影響を与えられるElement expressions、タグ名などに変数を使えるStatic expressionsなども追加されています。&lt;br&gt;
また、実験的にSSRのサポートなども追加されています。&lt;/p&gt;

&lt;p&gt;LitElement 2.xとlit-html 1.xからアップグレードガイドも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lit.dev/docs/releases/upgrade/&quot;&gt;Upgrade guide – Lit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Gatsby 4のベータ版がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/gatsby-4/&quot;&gt;Introducing Gatsby 4 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/conceptual/rendering-options/&quot;&gt;rendering mode&lt;/a&gt;として、HTMLの生成を実際にアクセスするときまで遅延するDeferred Static Generation(DSG)のサポート、SSRのサポートが追加されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/&quot;&gt;Deferred Static Generation&lt;/a&gt;(DSG)はNext.jsの&lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching#incremental-static-regeneration&quot;&gt;Incremental Static Regeneration&lt;/a&gt;(ISR)と似ていて、初回のリクエストがきた段階で始めてビルドを開始することで、めったにアクセスされないコンテンツを含むようなサイトでのデプロイにかかるビルド時間を短縮する仕組みです。&lt;br&gt;
DSGではデプロイ時にデータのスナップショットを作り、リクエスト時にスナップショットからコンテンツであるHTMLを生成して返します。そのため、DSGはISRとは、リクエスト時に異なりサーバから外部リソースを再取得するのではなく、あくまでデプロイ時に作成されたスナップショットを参照してビルドするようになっています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;While DSG may look similar on the surface, what Gatsby does is that it takes a snapshot of the data at initial build time and creates lightweight render engines that are capable of building a page on demand. However, all data was already sourced at initial build time!&lt;/p&gt;&amp;mdash; Sid (@chatsidhartha) &lt;a href=&quot;https://twitter.com/chatsidhartha/status/1442352346441281540?ref_src=twsrc%5Etfw&quot;&gt;September 27, 2021&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; 

&lt;p&gt;その他にはparallel queryでのビルド時間の改善なども含まれています。&lt;br&gt;
あわせてv3からのマイグレーションガイドも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/&quot;&gt;Migrating from v3 to v4 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;PartytownはサードパーティスクリプトをWebWorkerで動かし、サードパーティスクリプトによるメインスレッドのブロッキングを避ける目的のライブラリです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BuilderIO/partytown&quot;&gt;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebWorkerにはDOM APIなどがないため、そのままサードパーティスクリプトをWorkerで動かすとエラーとなります。&lt;br&gt;
そのため、次のような仕組みでDOM APIなどを含むサードパーティスクリプトをWorker内で動かしています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Worker内でのDOM操作を&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy&lt;/a&gt;する&lt;/li&gt;
&lt;li&gt;DOM操作をコマンドにして同期XHRで通信(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests#example_synchronous_http_request_from_a_worker&quot;&gt;Worker内では同期XHRが利用&lt;/a&gt;できます)&lt;/li&gt;
&lt;li&gt;この通信をService Workerでインターセプトしてコマンドを取得&lt;/li&gt;
&lt;li&gt;コマンドを元にService Workerとメインスレッドで非同期にやりとりしてDOM操作の結果を取得&lt;/li&gt;
&lt;li&gt;DOM操作の結果を元のWorkerに返す&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これによって、Worker内で動作しているサードパーティスクリプトから見れば同期的にAPIを使えているように見えるため、コードの変更なしに動作しています。&lt;/p&gt;

&lt;p&gt;詳しい仕組みについては記事も公開されているので、こちらを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp&quot;&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-lit-2-stable-release-lit&quot;&gt;Announcing Lit 2 stable release – Lit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lit.dev/blog/2021-09-21-announcing-lit-2/&quot; title=&quot;Announcing Lit 2 stable release – Lit&quot;&gt;lit.dev/blog/2021-09-21-announcing-lit-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lit 2リリース。&lt;br&gt;
classベースのDirectives API、非同期Directives、Reactive Controllersの追加。&lt;br&gt;
要素全体に対して影響を与えられるElement expressions、タグ名などに変数を使えるStatic expressionsの追加。&lt;br&gt;
また、実験的にSSRのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-10-0-current-node-js&quot;&gt;Node v16.10.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.10.0/&quot; title=&quot;Node v16.10.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.10.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.10.0リリース。&lt;br&gt;
コネクションごとに最大のリクエスト数を制限する&lt;code&gt;server.maxRequestsPerSocket&lt;/code&gt;オプションの追加。&lt;br&gt;
&lt;code&gt;$HOME/.node_modules&lt;/code&gt;などを探索しない&lt;code&gt;--no-global-search-paths&lt;/code&gt;フラグの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-15-0-0-electron&quot;&gt;Electron 15.0.0 | Electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-15-0/&quot; title=&quot;Electron 15.0.0 | Electron&quot;&gt;www.electronjs.org/blog/electron-15-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 15.0.0リリース。&lt;br&gt;
Electron 15から8週間ごとのメジャーアップデートとなる。&lt;br&gt;
Chromium 94、Node.js 16.5.0、V8 9.4へアップデート、&lt;code&gt;nativeWindowOpen&lt;/code&gt;のデフォルト値を&lt;code&gt;true&lt;/code&gt;へ変更、&lt;code&gt;safeStorage&lt;/code&gt; APIの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v15.0.0&quot; title=&quot;Release electron v15.0.0 · electron/electron&quot;&gt;Release electron v15.0.0 · electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/docs/latest/api/safe-storage/&quot; title=&quot;safeStorage | Electron&quot;&gt;safeStorage | Electron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-95-beta-secure-payment-confirmation-webassembly-exception-handling-and-more&quot;&gt;Chromium Blog: Chrome 95 Beta: Secure Payment Confirmation, WebAssembly Exception Handling and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/chrome-95-beta-secure-payment.html&quot; title=&quot;Chromium Blog: Chrome 95 Beta: Secure Payment Confirmation, WebAssembly Exception Handling and More&quot;&gt;blog.chromium.org/2021/09/chrome-95-beta-secure-payment.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95 betaリリース。&lt;br&gt;
Origin TrialとしてAccess HandleをFile System Access APIに追加。&lt;br&gt;
Performance Observerに&lt;code&gt;droppedEntriesCount&lt;/code&gt;の追加、EyeDropper APIの追加、&lt;code&gt;self.reportError()&lt;/code&gt;の追加、&lt;code&gt;URLPattern&lt;/code&gt;の追加など。&lt;br&gt;
また、FTP URLのサポート終了、数字で終わるIPv4アドレスではないホスト名のサポートを廃止など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;miniflare-is-now-an-official-part-of-the-workers-ecosystem-cloudflare-miniflare-e1cb97f&quot;&gt;Miniflare is now an official part of the Workers ecosystem 🎉 · cloudflare/miniflare@e1cb97f&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cloudflare/miniflare/commit/e1cb97f9891b2818f4be5715ee467668a39f7f80&quot; title=&quot;Miniflare is now an official part of the Workers ecosystem 🎉 · cloudflare/miniflare@e1cb97f&quot;&gt;github.com/cloudflare/miniflare/commit/e1cb97f9891b2818f4be5715ee467668a39f7f80&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare WorkersのsimulatorであるMiniflareがCloudflare公式となった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es-module-shims-changelog-md-at-1-0-0-guybedford-es-module-shims&quot;&gt;es-module-shims/CHANGELOG.md at 1.0.0 · guybedford/es-module-shims&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-shims/blob/1.0.0/CHANGELOG.md&quot; title=&quot;es-module-shims/CHANGELOG.md at 1.0.0 · guybedford/es-module-shims&quot;&gt;github.com/guybedford/es-module-shims/blob/1.0.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Module Shims 1.0.0リリース。&lt;br&gt;
lexerがWasmを利用していたため&lt;code&gt;unsafe-eval&lt;/code&gt;のCSP設定が必要となっていたが、asm.jsビルドを使いデフォルトでCSPに対応した。&lt;br&gt;
また、パフォーマンスについてはほぼ同等で、Safariに関してはasm.js版の方が早くなっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-shims/pull/193&quot; title=&quot;feat: make the CSP asm.js build the main entry by guybedford · Pull Request #193 · guybedford/es-module-shims&quot;&gt;feat: make the CSP asm.js build the main entry by guybedford · Pull Request #193 · guybedford/es-module-shims&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-lexer/pull/86&quot; title=&quot;feat: asm.js build by guybedford · Pull Request #86 · guybedford/es-module-lexer&quot;&gt;feat: asm.js build by guybedford · Pull Request #86 · guybedford/es-module-lexer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/content-security-policy/blob/master/proposals/CSP.md&quot; title=&quot;content-security-policy/CSP.md at master · WebAssembly/content-security-policy&quot;&gt;content-security-policy/CSP.md at master · WebAssembly/content-security-policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manifest-v2-support-timeline-chrome-developers&quot;&gt;Manifest V2 support timeline - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/docs/extensions/mv3/mv2-sunset/&quot; title=&quot;Manifest V2 support timeline - Chrome Developers&quot;&gt;developer.chrome.com/docs/extensions/mv3/mv2-sunset/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome拡張のmanifest v3のロードマップ。&lt;br&gt;
2022年1月17日に新しくmanifest v2の拡張は申請できなくなる。&lt;br&gt;
2023年1月に既存のv2拡張は更新もできなくなる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v8-0-0-rc-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v8.0.0-rc.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2021/09/eslint-v8.0.0-rc.0-released&quot; title=&quot;ESLint v8.0.0-rc.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2021/09/eslint-v8.0.0-rc.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint v8.0.0-rc.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/8.0.0/user-guide/migrating-to-8.0.0&quot; title=&quot;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stimulus-3&quot;&gt;Stimulus 3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://world.hey.com/hotwired/stimulus-3-c438d432&quot; title=&quot;Stimulus 3&quot;&gt;world.hey.com/hotwired/stimulus-3-c438d432&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Stimulus 3 リリース。&lt;br&gt;
パッケージ名が&lt;code&gt;stimulus&lt;/code&gt;から&lt;code&gt;@hotwired/stimulus&lt;/code&gt;へと変更された。&lt;br&gt;
Action Parametersのサポート、デフォルト値のサポート、&lt;code&gt;debug&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hotwired/stimulus/compare/v2.0.0...v3.0.0&quot; title=&quot;Comparing v2.0.0...v3.0.0 · hotwired/stimulus&quot;&gt;Comparing v2.0.0...v3.0.0 · hotwired/stimulus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-gatsby-4-gatsby&quot;&gt;Introducing Gatsby 4 | Gatsby&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/gatsby-4/&quot; title=&quot;Introducing Gatsby 4 | Gatsby&quot;&gt;www.gatsbyjs.com/gatsby-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Gatsby 4ベータリリース。&lt;br&gt;
HTMLの生成を実際にアクセスするときまで遅延するDeferred Static Generation(DSG)のサポート、SSRのサポート、parallel queryでのビルド時間の改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/matfrana/status/1442225069158248449&quot; title=&quot;Matteo Frana on Twitter: &amp;amp;amp;amp;quot;@chatsidhartha Can you explain me briefly the differences between Gatsby DSG and ISR? Thank you! I&amp;amp;amp;#039;m looking forward to testing Gatsby 4.&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Matteo Frana on Twitter: &amp;amp;quot;@chatsidhartha Can you explain me briefly the differences between Gatsby DSG and ISR? Thank you! I&amp;#039;m looking forward to testing Gatsby 4.&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/blog/2021/09/16/run-gatsby-4-with-dsg-and-ssr-on-netlify-today/&quot; title=&quot;Run Gatsby 4 with DSG and SSR on Netlify today | Netlify&quot;&gt;Run Gatsby 4 with DSG and SSR on Netlify today | Netlify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blazor-developers-can-now-create-custom-elements-render-components-from-javascript-visual-studio-magazine&quot;&gt;Blazor Developers Can Now Create Custom Elements, Render Components from JavaScript -- Visual Studio Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://visualstudiomagazine.com/articles/2021/09/16/aspnet-core-updates.aspx&quot; title=&quot;Blazor Developers Can Now Create Custom Elements, Render Components from JavaScript -- Visual Studio Magazine&quot;&gt;visualstudiomagazine.com/articles/2021/09/16/aspnet-core-updates.aspx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;.net&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C#&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;.NET 6 RC1でBlazorがCustom Elementをサポートし、BlazorコンポーネントをCustom Elementとして利用できるようになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-6-release-candidate-1/&quot; title=&quot;Announcing .NET 6 Release Candidate 1 - .NET Blog&quot;&gt;Announcing .NET 6 Release Candidate 1 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aspnet/AspLabs/tree/main/src/BlazorCustomElements&quot; title=&quot;AspLabs/src/BlazorCustomElements at main · aspnet/AspLabs&quot;&gt;AspLabs/src/BlazorCustomElements at main · aspnet/AspLabs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fullstack-app-with-typescript-next-js-prisma-graphql&quot;&gt;Fullstack app with TypeScript, Next.js, Prisma &amp;amp; GraphQL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.prisma.io/blog/fullstack-nextjs-graphql-prisma-oklidw1rhw&quot; title=&quot;Fullstack app with TypeScript, Next.js, Prisma &amp;amp;amp; GraphQL&quot;&gt;www.prisma.io/blog/fullstack-nextjs-graphql-prisma-oklidw1rhw&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js/Prisma/GraphQLを使ったアプリケーション開発についてのチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-react-18-yagmur-cetin-tas&quot;&gt;What&amp;#039;s new in React 18? | Yagmur Cetin Tas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yagmurcetintas.com/journal/whats-new-in-react-18&quot; title=&quot;What&amp;amp;#039;s new in React 18? | Yagmur Cetin Tas&quot;&gt;yagmurcetintas.com/journal/whats-new-in-react-18&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 18で予定されている変更の概要をまとめた記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;get-your-head-straight-speaker-deck&quot;&gt;Get Your Head Straight - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/csswizardry/get-your-head-straight&quot; title=&quot;Get Your Head Straight - Speaker Deck&quot;&gt;speakerdeck.com/csswizardry/get-your-head-straight&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;パフォーマンスの問題を見つけるために&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;の中身を表示するct.cssについてのスライド。&lt;br&gt;
&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;や&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;について3rd partyであるかやブロッキングしてるかなどを可視化してくれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://csswizardry.com/ct/&quot; title=&quot;🧠 ct.css – Let’s take a look inside your &amp;amp;amp;lt;head&amp;amp;amp;gt;&quot;&gt;🧠 ct.css – Let’s take a look inside your &amp;lt;head&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vite-packages-plugin-react-at-main-vitejs-vite&quot;&gt;vite/packages/plugin-react at main · vitejs/vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot; title=&quot;vite/packages/plugin-react at main · vitejs/vite&quot;&gt;github.com/vitejs/vite/tree/main/packages/plugin-react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ViteのReact Plugin。&lt;br&gt;
&lt;code&gt;@vitejs/plugin-react-refresh&lt;/code&gt;を置き換えるプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;builderio-partytown-relocate-resource-intensive-third-party-scripts-off-of-the-main-thread-and-into-a-web-worker&quot;&gt;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/BuilderIO/partytown&quot; title=&quot;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&quot;&gt;github.com/BuilderIO/partytown&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;サードパーティスクリプトをWorker内で動かしてメインスレッドのブロッキングを防ぐライブラリ。&lt;br&gt;
Worker内でのDOM操作をProxyして、同期XHRで通信し、その通信をService Workerでインターセプトしてメインスレッドと非同期でやり取りした結果をWorkerに返している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp&quot; title=&quot;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&quot;&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gvergnaud-ts-pattern-the-exhaustive-pattern-matching-library-for-typescript-with-smart-type-inference&quot;&gt;gvergnaud/ts-pattern: 🎨 The exhaustive Pattern Matching library for TypeScript, with smart type inference.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gvergnaud/ts-pattern&quot; title=&quot;gvergnaud/ts-pattern: 🎨 The exhaustive Pattern Matching library for TypeScript, with smart type inference.&quot;&gt;github.com/gvergnaud/ts-pattern&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptでのパターンマッチライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cesanta-elk-a-low-footprint-javascript-engine-for-embedded-systems&quot;&gt;cesanta/elk: A low footprint JavaScript engine for embedded systems&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cesanta/elk&quot; title=&quot;cesanta/elk: A low footprint JavaScript engine for embedded systems&quot;&gt;github.com/cesanta/elk&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;組み込み向けの小さなJavaScriptエンジン&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 27 Sep 2021 23:10:06 +0900</pubDate>
        <link>https://jser.info/2021/09/27/lit-2-gatsby-4-beta-partytownthird-party-script-into-worker/</link>
        <guid isPermaLink="true">https://jser.info/2021/09/27/lit-2-gatsby-4-beta-partytownthird-party-script-into-worker/</guid>
        
        <category>React</category>
        
        <category>WebComponents</category>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-21のJS: Deno 1.14リリース、ChromeのUser-Agent文字列削減スケジュール、Vue 2からVue 3への移行</title>
        <description>&lt;p&gt;JSer.info #558 - Deno 1.14がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/v1.14&quot;&gt;Deno 1.14 Release Notes | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-14-0&quot;&gt;Deno 1.14.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;deno lint&lt;/code&gt;と&lt;code&gt;deno fmt&lt;/code&gt;がオプションをサポートしてquoteやindentなどの設定ができるようになっています。&lt;br&gt;
&lt;code&gt;URLPattern&lt;/code&gt;のサポート。&lt;code&gt;fetch&lt;/code&gt;がMutual TLSをサポートなども追加されています。&lt;br&gt;
また、unstableな機能としてFile locking APIsのサポートが追加されています。&lt;br&gt;
その他にはURL parsingや&lt;code&gt;std/http&lt;/code&gt;モジュールのパフォーマンス改善などが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ChromeのUser-Agent文字列削減のスケジュールが改めて公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&quot;&gt;Chromium Blog: User-Agent Reduction Origin Trial and Dates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;navigator.userAgent&lt;/code&gt;、&lt;code&gt;@navigator.appVersion&lt;/code&gt;、 &lt;code&gt;navigator.platform&lt;/code&gt;などの情報量を減らす/固定化することでfinger printingなどのリスクを減らすことが目的です。これらのAPIは非推奨となり、代替として&lt;a href=&quot;https://github.com/WICG/ua-client-hints&quot;&gt;User Agent Client Hints&lt;/a&gt;が実装されています。&lt;/p&gt;

&lt;p&gt;UA文字列の削減などは、次のようなスケジュールで展開していく予定となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome 92:  コンソールに警告の追加&lt;/li&gt;
&lt;li&gt;Chrome 95 から 100: Origin Trialの実施&lt;/li&gt;
&lt;li&gt;Chrome 100: Reverse Origin Trialの実施&lt;/li&gt;
&lt;li&gt;Chrome 101から110: 削減を段階的に実施&lt;/li&gt;
&lt;li&gt;Chrome 113: 完了&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&quot;&gt;Vue2のプロジェクトをVue3へマイグレーションする&lt;/a&gt;という記事では、&lt;code&gt;@vue/compat&lt;/code&gt;を使いつつVue2で書かれたアプリケーションをVue3へマイグレーションしていく方法について書かれています。&lt;/p&gt;

&lt;p&gt;Vue2のアプリケーションに&lt;code&gt;@vue/compat&lt;/code&gt;と&lt;code&gt;eslint-plugin-vue&lt;/code&gt;を導入し、警告メッセージなどを見ながらVue3へマイグレーションしていき、最終的に&lt;code&gt;@vue/compat&lt;/code&gt;を取り除くまでの流れを紹介しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v3.ja.vuejs.org/guide/migration/migration-build.html#%E6%A6%82%E8%A6%81&quot;&gt;移行ビルド | Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;material-ui-is-now-mui-mui&quot;&gt;Material-UI is now MUI! - MUI&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mui.com/blog/material-ui-is-now-mui/&quot; title=&quot;Material-UI is now MUI! - MUI&quot;&gt;mui.com/blog/material-ui-is-now-mui/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;マテリアルデザインのReact実装として開始したMaterial-UIがMUIへとリネームされた。&lt;br&gt;
これに伴ってパッケージが&lt;code&gt;@material-ui&lt;/code&gt;から&lt;code&gt;@mui&lt;/code&gt;へと変更され、ウェブサイトもリニューアルされた。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;is-nuxt-3-ready&quot;&gt;Is Nuxt 3 Ready?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nuxtjs.org/v3/&quot; title=&quot;Is Nuxt 3 Ready?&quot;&gt;nuxtjs.org/v3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3は2021年10月12日にリリース予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-14-release-notes-deno-blog&quot;&gt;Deno 1.14 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.14&quot; title=&quot;Deno 1.14 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.14&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.14リリース。&lt;br&gt;
&lt;code&gt;deno lint&lt;/code&gt;と&lt;code&gt;deno fmt&lt;/code&gt;がオプションをサポート、&lt;code&gt;URLPattern&lt;/code&gt;のサポート。&lt;code&gt;fetch&lt;/code&gt;がMutual TLSをサポートなど。&lt;br&gt;
また、unstableな機能としてFile locking APIsのサポート、URL parsingや&lt;code&gt;std/http&lt;/code&gt;モジュールのパフォーマンス改善など。&lt;br&gt;
その他には、TypeScript 44、V8 9.4へのアップデートなども含まれる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-14-0&quot; title=&quot;Deno 1.14.0 がリリースされたので新機能や変更点の紹介&quot;&gt;Deno 1.14.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-user-agent-reduction-origin-trial-and-dates&quot;&gt;Chromium Blog: User-Agent Reduction Origin Trial and Dates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&quot; title=&quot;Chromium Blog: User-Agent Reduction Origin Trial and Dates&quot;&gt;blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ChromeのUser-Agent変更のスケジュール。&lt;br&gt;
Chrome 95からOrigin Trialを使ったオプトインで導入、Chrome 100から徐々に削減していき、からChrome 113でUAと関連APIのデータの削減が完了する予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-cybozu-inside-out&quot;&gt;フロントエンド刷新のために DevTools を作って開発を捗らせる - Cybozu Inside Out | サイボウズエンジニアのブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cybozu.io/entry/2021/09/13/080000&quot; title=&quot;フロントエンド刷新のために DevTools を作って開発を捗らせる - Cybozu Inside Out | サイボウズエンジニアのブログ&quot;&gt;blog.cybozu.io/entry/2021/09/13/080000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Closure Tools向けのDevToolsについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-chrome&quot;&gt;Vueの再描画されたコンポーネントをハイライトするChrome拡張を作った&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/yuichkun/articles/e4e8c7e633439c&quot; title=&quot;Vueの再描画されたコンポーネントをハイライトするChrome拡張を作った&quot;&gt;zenn.dev/yuichkun/articles/e4e8c7e633439c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React DevToolsのように描画された要素をハイライトするVue向けのデバッグ拡張について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yuichkun/vue-devtool-flash-updates&quot; title=&quot;yuichkun/vue-devtool-flash-updates: A handy tool that highlights re-rendered components.&quot;&gt;yuichkun/vue-devtool-flash-updates: A handy tool that highlights re-rendered components.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue2-vue3&quot;&gt;Vue2のプロジェクトをVue3へマイグレーションする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&quot; title=&quot;Vue2のプロジェクトをVue3へマイグレーションする&quot;&gt;zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;vue-cliを使っているプロジェクトをVue2からVue3へのマイグレーションするチュートリアル。&lt;br&gt;
&lt;code&gt;@vue/compat&lt;/code&gt;、&lt;code&gt;eslint-plugin-vue&lt;/code&gt;導入し、それぞれのAPIの変更に対応し、&lt;code&gt;@vue/comat&lt;/code&gt;を取り除くまでの流れを解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-future-of-css-cascade-layers-css-layer-bram-us&quot;&gt;The Future of CSS: Cascade Layers (CSS @layer) – Bram.us&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&quot; title=&quot;The Future of CSS: Cascade Layers (CSS @layer) – Bram.us&quot;&gt;www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;@layer&lt;/code&gt;について。&lt;br&gt;
CSSの詳細度解決の前段としてレイヤーを作成して、スタイルの定義ができるCascade Layersの仕様。&lt;br&gt;
レイヤーが詳細度より優先されるため、意図しないスタイルの上書きなどを制御しやすくなる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;small-bundles-fast-pages-what-to-do-with-too-much-javascript-calibre&quot;&gt;Small Bundles, Fast Pages: What To Do With Too Much JavaScript | Calibre&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calibreapp.com/blog/bundle-size-optimization&quot; title=&quot;Small Bundles, Fast Pages: What To Do With Too Much JavaScript | Calibre&quot;&gt;calibreapp.com/blog/bundle-size-optimization&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのbundle sizeを小さく保つにどうするかについての記事。&lt;br&gt;
bundle sizeとパフォーマンスへの影響、bundle sizeの可視化、特定のパッケージの利用をESLintで禁止する方法、遅延ロード、Modern Browser向けのビルド分離などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-95-chrome-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 95) - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-devtools-95/&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 95) - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-devtools-95/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95の開発者ツールの変更点について。&lt;br&gt;
CSS Unitの選択UIの追加、Isssuesタブの改善、Lighthouse 8.4のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;iframe-sandbox-speaker-deck&quot;&gt;iframe sandboxでユーザー入力スクリプトを実行する - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/syumai/iframe-sandboxdeyuzaru-li-sukuriputowoshi-xing-suru&quot; title=&quot;iframe sandboxでユーザー入力スクリプトを実行する - Speaker Deck&quot;&gt;speakerdeck.com/syumai/iframe-sandboxdeyuzaru-li-sukuriputowoshi-xing-suru&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;iframeを使ったユーザー入力のスクリプト実行についてのスライド。&lt;br&gt;
Cross OriginでのWindow Objectを使ってコードを実行して、postMessageでその結果を取得する方法について。&lt;br&gt;
またpostMessageのoriginとsourceチェックについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-almanac-css-tricks&quot;&gt;CSS Almanac | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/almanac/&quot; title=&quot;CSS Almanac | CSS-Tricks&quot;&gt;css-tricks.com/almanac/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのリファレンス。&lt;br&gt;
CSSのセレクタ、プロパティごと解説がまとまっている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;intro-to-d3-js&quot;&gt;Intro to D3.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yangdanny97.github.io/intro-to-d3/&quot; title=&quot;Intro to D3.js&quot;&gt;yangdanny97.github.io/intro-to-d3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3 v5+に対応したチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typicode-xv-a-simple-fast-and-small-test-runner-with-native-esm-support&quot;&gt;typicode/xv: A simple, fast and small test runner with native ESM support&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typicode/xv&quot; title=&quot;typicode/xv: A simple, fast and small test runner with native ESM support&quot;&gt;github.com/typicode/xv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESMを扱うテストフレームワーク。&lt;br&gt;
各テストケースを&lt;code&gt;export&lt;/code&gt;構文でexportして、そのテストケースを実行した結果を表示するCLIを提供する&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 21 Sep 2021 11:25:53 +0900</pubDate>
        <link>https://jser.info/2021/09/21/deno-1.14-chromeuser-agent-vue-2vue-3/</link>
        <guid isPermaLink="true">https://jser.info/2021/09/21/deno-1.14-chromeuser-agent-vue-2vue-3/</guid>
        
        <category>debug</category>
        
        <category>Vue</category>
        
        <category>Chrome</category>
        
        <category>tutorial</category>
        
        <category>CSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-14のJS: Node v16.9.0(Corepack)、Spook.js(Same-Siteでのサイドチャネル攻撃)</title>
        <description>&lt;p&gt;JSer.info #557 - Node.js 16.9.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.9.0/&quot;&gt;Node v16.9.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プロジェクトごとにnpm/yarn/pnpmなどのパッケージマネージャを切り替えて利用できるCorepackのサポートが実験的に追加されています。Corepackが有効時は、どのパッケージマネージャを使うかを&lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;packageManager&lt;/code&gt; フィールドで指定して、透過的にインストールや実行できるようになります。&lt;/p&gt;

&lt;p&gt;また実験的であるため、利用するには&lt;code&gt;corepack enable yarn&lt;/code&gt;などのコマンドがオプトインで必要となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/dist/latest-v16.x/docs/api/corepack.html&quot; title=&quot;Corepack | Node.js v16.9.0 Documentation&quot;&gt;Corepack | Node.js v16.9.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/teppeis/articles/2021-05-corepack&quot;&gt;corepack is 何?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、V8 9.3へアップデートし&lt;code&gt;Object.hasOwn&lt;/code&gt;とError Causeをサポート、&lt;code&gt;stream.compose&lt;/code&gt;の追加などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-93&quot; title=&quot;V8 release v9.3 · V8&quot;&gt;V8 release v9.3 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;という、投機的実行を利用したsame-siteでのサイドチャネル攻撃についての論文が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/agektmr/articles/f8dcd345a88c97&quot;&gt;same-site/cross-site, same-origin/cross-originをちゃんと理解する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前、Googleが&lt;a href=&quot;https://blog.google/products/google-cloud/answering-your-questions-about-meltdown-and-spectre/&quot;&gt;Spectre&lt;/a&gt;の概念を説明するものとして&lt;a href=&quot;https://leaky.page/&quot;&gt;https://leaky.page/&lt;/a&gt;というサイトを公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot;&gt;Google Online Security Blog: A Spectre proof-of-concept for a Spectre-proof web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;は、これをより実践的に検証した論文で、BitbucketやTumblrなどのユーザーコンテンツがサブドメインにあるサイト同士でのデモ、Google Chromeの拡張機能同士でのデモといったeTLD+1が一致するsame-siteでのサイドチャネル攻撃について書かれています。&lt;/p&gt;

&lt;p&gt;詳細は論文にかかれていますが、Chromeではそれぞれのサイトをプロセス分離することでプロセス間のサイドチャネル攻撃を防ぐようになっています。一方でメモリが圧迫されている際にeTLD+1が一致するSame-Siteを開いた場合に、サイト分離はしないため、このケースにおいてサイト間でのサイドチャネル攻撃ができるという話になっています。&lt;/p&gt;

&lt;p&gt;Same-Siteかどうかは&lt;a href=&quot;https://publicsuffix.org/&quot;&gt;Public Suffix List&lt;/a&gt;を元に決めるため、Bitbucket(bitbucket.io)に関してはPublic Suffix Listに加えることでCross-Siteと認識させることで、この問題を防いでいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/publicsuffix/list/pull/1374&quot;&gt;Adding bitbucket.io pages which render user generated content by andyortlieb-atlassian · Pull Request #1374 · publicsuffix/list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また拡張機能のPage(&lt;code&gt;chrome-extension://&lt;/code&gt;)における問題は、Chrome 92で拡張同士はSame-Siteなどの条件とは関係なくプロセスを共有しないことで、この問題が修正されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/07/protecting-more-with-site-isolation.html&quot;&gt;Google Online Security Blog: Protecting more with Site Isolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;は、投機的実行を扱ったサイドチャネル攻撃について詳しく書かれているので興味がある人は読んでみるとよさそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-9-0-current-node-js&quot;&gt;Node v16.9.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.9.0/&quot; title=&quot;Node v16.9.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.9.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.9.0リリース。&lt;br&gt;
プロジェクトごとにnpm/yarn/pnpmなどのパッケージマネージャを切り替えてインストールできるCorepackのサポート。&lt;br&gt;
V8 9.3へアップデートし&lt;code&gt;Object.hasOwn&lt;/code&gt;とError Causeをサポート、&lt;code&gt;stream.compose&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/dist/latest-v16.x/docs/api/corepack.html&quot; title=&quot;Corepack | Node.js v16.9.0 Documentation&quot;&gt;Corepack | Node.js v16.9.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-93&quot; title=&quot;V8 release v9.3 · V8&quot;&gt;V8 release v9.3 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-0-1-prisma-prisma&quot;&gt;Release 3.0.1 · prisma/prisma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prisma/prisma/releases/tag/3.0.1&quot; title=&quot;Release 3.0.1 · prisma/prisma&quot;&gt;github.com/prisma/prisma/releases/tag/3.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prisma 3.0.1リリース。3からSemverにそったリリースとなった。&lt;br&gt;
Referential Actions、Named Constraints、Microsoft SQL/Azure SQL、Node-APIなどがGAとなった。&lt;br&gt;
破壊的な変更として&lt;code&gt;prisma db seed&lt;/code&gt;の仕組みの変更、&lt;code&gt;null&lt;/code&gt;をクエリに指定できなくして&lt;code&gt;JsonNull&lt;/code&gt;/&lt;code&gt;DbNull&lt;/code&gt;/&lt;code&gt;AnyNull&lt;/code&gt;のいずれかを使うようにする変更も含まれる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-3-28-and-4-0-beta-released&quot;&gt;Ember 3.28 and 4.0 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.emberjs.com/ember-3-28-released/&quot; title=&quot;Ember 3.28 and 4.0 Beta Released&quot;&gt;blog.emberjs.com/ember-3-28-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.28 and 4.0 Betaリリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-2-4-new-bracketsameline-option-and-typescript-4-4-support-prettier&quot;&gt;Prettier 2.4: new bracketSameLine option and TypeScript 4.4 support! · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2021/09/09/2.4.0.html&quot; title=&quot;Prettier 2.4: new bracketSameLine option and TypeScript 4.4 support! · Prettier&quot;&gt;prettier.io/blog/2021/09/09/2.4.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 2.4リリース。&lt;br&gt;
TypeScript 4.4サポート、&lt;code&gt;jsxBracketSameLine&lt;/code&gt;オプションを&lt;code&gt;bracketSameLine&lt;/code&gt;オプションに置き換えなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nightwatch-v2-0-alpha-is-released-nightwatch-js-blog&quot;&gt;Nightwatch v2.0-alpha is Released | Nightwatch.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nightwatchjs.org/blog/nightwatch-v2-alpha-is-released.html&quot; title=&quot;Nightwatch v2.0-alpha is Released | Nightwatch.js Blog&quot;&gt;nightwatchjs.org/blog/nightwatch-v2-alpha-is-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nightwatch v2.0-alphaリリース。&lt;br&gt;
&lt;code&gt;selenium-webdriver&lt;/code&gt;を利用するように、WebDriver Actions APIのサポート、Chrome Dev Tools Protocolのサポート。&lt;br&gt;
&lt;code&gt;.ensure&lt;/code&gt; assertionの追加、&lt;code&gt;perform()&lt;/code&gt;などでWebDriver objectを直接扱えるように、Async/Awaitの対応改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;time-for-a-review-of-firefox-92-mozilla-hacks-the-web-developer-blog&quot;&gt;Time for a review of Firefox 92 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/09/time-for-a-review-of-firefox-92/&quot; title=&quot;Time for a review of Firefox 92 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/09/time-for-a-review-of-firefox-92/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 92リリース。&lt;br&gt;
CSSの&lt;code&gt;accent-color&lt;/code&gt;と&lt;code&gt;size-adjust&lt;/code&gt;をサポート、Stage 4 &lt;code&gt;Object.hasOwn&lt;/code&gt;のサポートなど。&lt;br&gt;
また、&lt;code&gt;selectionchange&lt;/code&gt;イベントで&lt;code&gt;input&lt;/code&gt;や&lt;code&gt;textarea&lt;/code&gt;内の選択範囲の変更も検知するようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/92&quot; title=&quot;Firefox 92 for developers - Mozilla | MDN&quot;&gt;Firefox 92 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/92.0/releasenotes/&quot; title=&quot;Firefox 92.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 92.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-workbox-v6-3-0-googlechrome-workbox&quot;&gt;Release Workbox v6.3.0 · GoogleChrome/workbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/workbox/releases/tag/v6.3.0&quot; title=&quot;Release Workbox v6.3.0 · GoogleChrome/workbox&quot;&gt;github.com/GoogleChrome/workbox/releases/tag/v6.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Workbox 6.3.0リリース。&lt;br&gt;
&lt;code&gt;integrity&lt;/code&gt;属性が指定されているリソースに対するprecachingの修正、IDBの書き込みに&lt;code&gt;{ durability: &amp;#39;relaxed&amp;#39; }&lt;/code&gt;を使うように。&lt;br&gt;
BroadcastCacheUpdateに&lt;code&gt;notifyAllClients&lt;/code&gt;オプションの追加、&lt;code&gt;Vary:&lt;/code&gt;ヘッダに対するデバッグログを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-s-new-with-devtools-cross-browser-edition-smashing-magazine&quot;&gt;What’s New With DevTools: Cross-Browser Edition — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/09/devtools-cross-browser-edition/&quot; title=&quot;What’s New With DevTools: Cross-Browser Edition — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/09/devtools-cross-browser-edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザごとの開発者ツールの機能紹介記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-notions-marketing-site-to-next-js&quot;&gt;Migrating Notion&amp;#039;s marketing site to Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.notion.so/blog/migrating-notion-marketing-to-next-js&quot; title=&quot;Migrating Notion&amp;amp;#039;s marketing site to Next.js&quot;&gt;www.notion.so/blog/migrating-notion-marketing-to-next-js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Notion マーケティングサイトをNext.jsへ移行した話。&lt;br&gt;
Reactで書かれたアプリケーションのコードとマーケティングサイトのコードを共有することで組み込みのデモがうごかせるようになった話。&lt;br&gt;
ルーティングでの切り替えとテスト、CSSの対応などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-eventing-deep-dive&quot;&gt;JavaScript Eventing Deep Dive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/eventing-deepdive/&quot; title=&quot;JavaScript Eventing Deep Dive&quot;&gt;web.dev/eventing-deepdive/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Event Capturing/Event Bubbling phaseの動きについての記事。&lt;br&gt;
それぞれphaseにおいてEventの流れを止める&lt;code&gt;stopPropagation()&lt;/code&gt;、&lt;code&gt;stopImmediatePropagation()&lt;/code&gt;、&lt;code&gt;preventDefault()&lt;/code&gt;の動作についての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;journey-with-icons-continues&quot;&gt;Journey with Icons Continues&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://antfu.me/posts/journey-with-icons-continues&quot; title=&quot;Journey with Icons Continues&quot;&gt;antfu.me/posts/journey-with-icons-continues&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Viteでアイコンコンポーネントをオンデマンドでビルドして利用できるunplugin-iconsについて。&lt;br&gt;
アイコンのデータにはIconifyを使い、アイコンコンポーネントをロードした際にVite側でSVGベースのアイコンコンポーネントを作成して返す仕組みについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://iconify.design/&quot; title=&quot;Iconify - Unified icons framework&quot;&gt;Iconify - Unified icons framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/antfu/unplugin-icons&quot; title=&quot;antfu/unplugin-icons: 🤹 Access thousands of icons as components on-demand universally.&quot;&gt;antfu/unplugin-icons: 🤹 Access thousands of icons as components on-demand universally.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-flow-enums-as-announced-in-an-earlier-post-flow-by-george-zahariev-flow-sep-2021-medium&quot;&gt;Introducing Flow Enums. As announced in an earlier post, Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/flow-type/introducing-flow-enums-16d4239b3180&quot; title=&quot;Introducing Flow Enums. As announced in an earlier post, Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&quot;&gt;medium.com/flow-type/introducing-flow-enums-16d4239b3180&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FlowTypeに導入された&lt;code&gt;enum&lt;/code&gt;について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flow-type/typescript-enums-vs-flow-enums-83da2ca4a9b4&quot; title=&quot;TypeScript Enums vs. Flow Enums. The Flow team recently announced Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&quot;&gt;TypeScript Enums vs. Flow Enums. The Flow team recently announced Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postd&quot;&gt;フロントエンドのテストは皆のためのもの | POSTD&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://postd.cc/frontend-testing-is-for-everyone/&quot; title=&quot;フロントエンドのテストは皆のためのもの | POSTD&quot;&gt;postd.cc/frontend-testing-is-for-everyone/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Front-End Testing is For Everyoneの翻訳記事。&lt;br&gt;
テストがチェックする範囲とチェックするツールについてまとめたもの。&lt;br&gt;
ユニットテスト、結合テスト、E2Eテスト、アクセシビリティテスト、ビジュアルリグレッションテスト、パフォーマンステストについて書かれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/front-end-testing-is-for-everyone/&quot; title=&quot;Front-End Testing is For Everyone | CSS-Tricks&quot;&gt;Front-End Testing is For Everyone | CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spook-js&quot;&gt;Spook.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot; title=&quot;Spook.js&quot;&gt;www.spookjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;paper&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;leaky.page が同じページ内での話だったの対して、ウェブサイト間や拡張機能間まで話を広げたSpectreについての論文。&lt;br&gt;
Chromeはメモリを圧迫するとeTLD+1の範囲でプロセスがまとまる。まとまったプロセス内でV8の癖を使って投機的実行攻撃して別サイトのメモリデータを読み込むという話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers-jp.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot; title=&quot;Google Developers Japan: Spectre の影響を受けないウェブを作るための概念実証について&quot;&gt;Google Developers Japan: Spectre の影響を受けないウェブを作るための概念実証について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wizardpisces-tiny-sass-compiler-another-sass-compiler-write-from-scatch-runnable-on-both-node-and-browser&quot;&gt;wizardpisces/tiny-sass-compiler: Another sass compiler write from scatch，runnable on both node and browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wizardpisces/tiny-sass-compiler&quot; title=&quot;wizardpisces/tiny-sass-compiler: Another sass compiler write from scatch，runnable on both node and browser&quot;&gt;github.com/wizardpisces/tiny-sass-compiler&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれたSassコンパイル。&lt;br&gt;
ブラウザとNode.jsで動作する。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-kindle-amazon&quot;&gt;TypeScriptハンズオン | 掌田津耶乃 | 工学 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B09D76MB7B/&quot; title=&quot;TypeScriptハンズオン | 掌田津耶乃 | 工学 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B09D76MB7B/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ハンズオン形式のTypeScript入門書&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.shuwasystem.co.jp/book/9784798065335.html&quot; title=&quot;TypeScriptハンズオン - 秀和システム あなたの学びをサポート！&quot;&gt;TypeScriptハンズオン - 秀和システム あなたの学びをサポート！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 Sep 2021 10:00:58 +0900</pubDate>
        <link>https://jser.info/2021/09/14/node-v16.9.0corepack-spook.jssame-site/</link>
        <guid isPermaLink="true">https://jser.info/2021/09/14/node-v16.9.0corepack-spook.jssame-site/</guid>
        
        <category>Tools</category>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>database</category>
        
        <category>Ember</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-07のJS: Electron 14.0.0、node-fetch 3.0.0、replace-jquery</title>
        <description>&lt;p&gt;JSer.info #556 - Electron 14.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-14-0&quot;&gt;Electron 14.0.0 | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;依存がそれぞれChromium 93、Node.js 14.17.0、V8 9.3へとアップデートされています。&lt;br&gt;
破壊的な変更として&lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt;オプションの削除、&lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt;オプションを削除(&lt;code&gt;true&lt;/code&gt;がデフォルト)されています。&lt;/p&gt;

&lt;p&gt;また、Electron 12でDeprecatedとなっていた&lt;code&gt;remote&lt;/code&gt;モジュールを削除し、&lt;a href=&quot;https://www.npmjs.com/package/@electron/remote&quot;&gt;@electron/remote&lt;/a&gt;という外部モジュールへと変更されています。&lt;br&gt;
RendererとMain(Node.js)のやり取りには、基本的には&lt;a href=&quot;https://www.electronjs.org/docs/api/context-bridge&quot;&gt;contextBridge&lt;/a&gt;を使っていく方向になっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/hibara/items/c59fb6924610fc22a9db&quot;&gt;Electron（v.14.0.0 現在）の IPC 通信入門 - よりセキュアな方法への変遷 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.jsでの&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;のpolyfillライブラリであるnode-fetch 3.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/releases/tag/v3.0.0&quot;&gt;Release v3.0.0 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更として、Node.jsのESMのサポート、Node.js 12未満のサポート終了されています。&lt;br&gt;
また、AbortControllerのサポートによって非標準な&lt;code&gt;timeout&lt;/code&gt;オプションは不要となったため削除されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/issues/523&quot;&gt;Should we deprecate timeout in favor of AbortController? · Issue #523 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一方で、非標準な&lt;code&gt;highWaterMark&lt;/code&gt;オプションの追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/issues/386&quot;&gt;When users clone(), automatically create streams with custom highWaterMark · Issue #386 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sachinchoolur/replace-jquery&quot;&gt;replace-jQuery&lt;/a&gt;は、jQueryのメソッドに対応するUtilityコード(完全互換ではないです)を生成するツールです。&lt;/p&gt;

&lt;p&gt;デフォルトではコード中で利用してるjQueryメソッドに対応するメソッドをもつUtilityコードを生成します。また、特定のメソッドのみを指定して生成することもできるようです。&lt;/p&gt;

&lt;p&gt;元コードにある&lt;code&gt;$&lt;/code&gt;や&lt;code&gt;jQuery&lt;/code&gt;自体は自動で書き換えるわけではありませんが、利用してるjQueryメソッドをUtilityに置き換えることで、jQueryへの依存をなくすことを目的にしたツールです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-14-0-0-electron-blog&quot;&gt;Electron 14.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-14-0&quot; title=&quot;Electron 14.0.0 | Electron Blog&quot;&gt;www.electronjs.org/blog/electron-14-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 14.0.0リリース。&lt;br&gt;
Chromium 93、Node.js 14.17.0、V8 9.3にアップデート。&lt;br&gt;
破壊的な変更として&lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt;オプションの削除、&lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt;オプションを削除してデフォルト化。&lt;br&gt;
&lt;code&gt;remote&lt;/code&gt;モジュールを削除し、&lt;code&gt;@electron/remote&lt;/code&gt;という外部モジュール化など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;august-31-2021-security-releases-node-js&quot;&gt;August 31 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases2/&quot; title=&quot;August 31 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/aug-2021-security-releases2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
OpenSSLとnpm 6.x系の脆弱性の修正が含まれていて、Node.js v12.22.6 (LTS)とNode.js v14.17.6 (LTS)がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yamory.io/blog/cve-2021-32804-node-tar-reproduce/&quot; title=&quot;npmにも影響があるnode-tarのパストラバーサルの脆弱性 CVE-2021-32804 | yamory Blog&quot;&gt;npmにも影響があるnode-tarのパストラバーサルの脆弱性 CVE-2021-32804 | yamory Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-selenium-4-0-0-rc-1-seleniumhq-selenium&quot;&gt;Release Selenium 4.0.0 RC 1 · SeleniumHQ/selenium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/releases/tag/selenium-4.0.0-rc-1&quot; title=&quot;Release Selenium 4.0.0 RC 1 · SeleniumHQ/selenium&quot;&gt;github.com/SeleniumHQ/selenium/releases/tag/selenium-4.0.0-rc-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Selenium 4.0.0 RC 1リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-0-0-node-fetch-node-fetch&quot;&gt;Release v3.0.0 · node-fetch/node-fetch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/releases/tag/v3.0.0&quot; title=&quot;Release v3.0.0 · node-fetch/node-fetch&quot;&gt;github.com/node-fetch/node-fetch/releases/tag/v3.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;node-fetch 3.0.0リリース。&lt;br&gt;
ESMのサポート、Node.js 12未満のサポート終了、&lt;code&gt;timeout&lt;/code&gt;オプションの削除、&lt;code&gt;highWaterMark&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1-13-0-rc-2-released-jquery-ui-blog&quot;&gt;jQuery UI 1.13.0-rc.2 released | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/09/jquery-ui-1-13-0-rc-2-released/&quot; title=&quot;jQuery UI 1.13.0-rc.2 released | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2021/09/jquery-ui-1-13-0-rc-2-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.13.0-rc.2リリース。&lt;br&gt;
5年ぶりとなるリリース。&lt;br&gt;
最近jQueryとの互換性を改善する目的のリリースであるため、非互換な変更は含まない。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stitches-1-0-0-stitches&quot;&gt;Stitches 1.0.0 — Stitches&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stitches.dev/blog/stitches-1.0.0&quot; title=&quot;Stitches 1.0.0 — Stitches&quot;&gt;stitches.dev/blog/stitches-1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JSフレームワークであるStitches 1.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/modulz/stitches/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · modulz/stitches&quot;&gt;Release v1.0.0 · modulz/stitches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-08-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-08 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/09/04/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-08 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/09/04/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年8月のTC39ミーティングでのECMAScript Proposalの変更まとめ。&lt;br&gt;
Class Static Block、&lt;code&gt;hasOwn&lt;/code&gt;、&lt;code&gt;.at()&lt;/code&gt;がそれぞれStage 4となり、ES2022に入ることが決まった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-iterator-generator&quot;&gt;JavaScriptのIterator / Generatorの整理&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/qnighy/articles/112af47edfda96&quot; title=&quot;JavaScriptのIterator / Generatorの整理&quot;&gt;zenn.dev/qnighy/articles/112af47edfda96&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;IteratorとGeneratorについての解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ss2021-jssst-sigppl-special-interest-group-on-programming-and-programming-languages&quot;&gt;ss2021 - 日本ソフトウェア科学会 プログラミング論研究会 (JSSST-SIGPPL) (Special Interest Group on Programming and Programming Languages)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ppl.jssst.or.jp/index.php?ss2021&quot; title=&quot;ss2021 - 日本ソフトウェア科学会 プログラミング論研究会 (JSSST-SIGPPL) (Special Interest Group on Programming and Programming Languages)&quot;&gt;ppl.jssst.or.jp/index.php?ss2021&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;blink&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;「JavaScript処理系とChromeブラウザの実装技術」についてのスライドまとめ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bundle-a-quick-npm-package-size-checker&quot;&gt;bundle - a quick npm package size checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bundle.js.org/&quot; title=&quot;bundle - a quick npm package size checker&quot;&gt;bundle.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザ上でskypack.devとesbuild-wasmを使ってコードをbundleして、bundle sizeをチェックするツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-schema-dts-json-ld-typescript-types-for-schema-org-vocabulary&quot;&gt;google/schema-dts: JSON-LD TypeScript types for Schema.org vocabulary&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/schema-dts&quot; title=&quot;google/schema-dts: JSON-LD TypeScript types for Schema.org vocabulary&quot;&gt;github.com/google/schema-dts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Schema.orgのvocabularyに対応したJSON-LDのTypeScript型定義ライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://json-ld.org/&quot; title=&quot;JSON-LD - JSON for Linking Data&quot;&gt;JSON-LD - JSON for Linking Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;asmcss-assembler-a-modern-ui-framework&quot;&gt;asmcss/assembler: A modern UI framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/asmcss/assembler&quot; title=&quot;asmcss/assembler: A modern UI framework&quot;&gt;github.com/asmcss/assembler&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x-style&lt;/code&gt;という仮想プロパティをスタイルとして展開するUtility-firstなUIフレームワーク。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;niksy-isomorphic-timers-promises-timers-promises-for-client-and-server&quot;&gt;niksy/isomorphic-timers-promises: `timers/promises` for client and server.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/niksy/isomorphic-timers-promises&quot; title=&quot;niksy/isomorphic-timers-promises: \`timers/promises\` for client and server.&quot;&gt;github.com/niksy/isomorphic-timers-promises&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;timers/promises&lt;/code&gt; polyfillライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-ts-gyb-generating-native-code-interfaces-from-typescript&quot;&gt;microsoft/ts-gyb: Generating native code interfaces from TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/ts-gyb&quot; title=&quot;microsoft/ts-gyb: Generating native code interfaces from TypeScript&quot;&gt;github.com/microsoft/ts-gyb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのinterfaceからmustache templatesを使ってコード生成するツール。&lt;br&gt;
TypeScriptのinterfaceから別の言語のboilerplateを生成する目的のツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sachinchoolur-replace-jquery-automatically-finds-jquery-methods-from-existing-projects-and-generates-vanilla-js-alternatives&quot;&gt;sachinchoolur/replace-jquery: Automatically finds jQuery methods from existing projects and generates vanilla js alternatives.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sachinchoolur/replace-jquery&quot; title=&quot;sachinchoolur/replace-jquery: Automatically finds jQuery methods from existing projects and generates vanilla js alternatives.&quot;&gt;github.com/sachinchoolur/replace-jquery&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryに依存したコードから、利用しているjQueryのメソッドの代替コードを生成するツール。&lt;br&gt;
指定したjQueryのメソッドのみを含んだutilityコードを生成できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-cookbook&quot;&gt;React Cookbook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/react-cookbook/9781492085836/&quot; title=&quot;React Cookbook&quot;&gt;learning.oreilly.com/library/view/react-cookbook/9781492085836/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactについての書籍。&lt;br&gt;
ルータ、ステート、GraphQL、UI、セキュリティ、テスト、アクセシビリティ、パフォーマンスなどのトピックごとに書かれたクックブック&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Sep 2021 10:36:56 +0900</pubDate>
        <link>https://jser.info/2021/09/07/electron-14.0.0-node-fetch-3.0.0-replace-jquery/</link>
        <guid isPermaLink="true">https://jser.info/2021/09/07/electron-14.0.0-node-fetch-3.0.0-replace-jquery/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>CSS</category>
        
        <category>UI</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-08-31のJS: TypeScript 4.4、PageSpeed InsightsのLab/Field data、Packemon(ライブラリ向けビルドツール)</title>
        <description>&lt;p&gt;JSer.info #555 - TypeScript 4.4が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/&quot;&gt;Announcing TypeScript 4.4 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Control Flow Analysisの改善、Index SignaturesにSymbolやTemplate Stringを利用できるようになっています。&lt;br&gt;
また、Catch節のデフォルトを&lt;code&gt;unknown&lt;/code&gt;型にする&lt;code&gt;useUnknownInCatchVariables&lt;/code&gt;オプションと&lt;br&gt;
optionalと&lt;code&gt;undefined&lt;/code&gt;値の区別をする&lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt;オプションの追加されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useUnknownInCatchVariables&lt;/code&gt;は&lt;code&gt;strict&lt;/code&gt;オプションが有効の場合は自動的にONとなります。&lt;br&gt;
一方で、&lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt;は&lt;code&gt;strict&lt;/code&gt;オプションとは別途設定が必要になります。&lt;/p&gt;

&lt;p&gt;また、ES Proposal Stage 3の&lt;a href=&quot;https://github.com/tc39/proposal-class-static-block#ecmascript-class-static-initialization-blocks&quot;&gt;class static block&lt;/a&gt;がサポートされています。&lt;br&gt;
その他には、&lt;code&gt;tsc --help&lt;/code&gt;の表示を改善、ビルドパフォーマンスの改善も含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/lab-and-field-data-differences/&quot;&gt;Why lab and field data can be different (and what to do about it)&lt;/a&gt;という記事では、&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;PageSpeed Insights&lt;/a&gt;などに表示される&amp;quot;lab data&amp;quot;と&amp;quot;field data&amp;quot;の違いについて解説しています。&lt;/p&gt;

&lt;p&gt;Lab dataは、ネットワークは実行環境を固定したSynthetic モニタリングのデータとなっています。&lt;br&gt;
一方のField dataは、&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot;&gt;Chrome User Experience Report&lt;/a&gt;で収集されたChromeユーザーのRUMデータを元にしています。&lt;/p&gt;

&lt;p&gt;この2つのデータの違い、どのようなケースで値に違いがでるかなどを解説しています。&lt;br&gt;
実際のユーザーの体験に近いのはField dataであるため、まずはField dataをみることや、2つのデータに違いがある場合には最適化の余地があることを示していることなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://packemon.dev/&quot;&gt;Packemon&lt;/a&gt;はnpmで公開するパッケージ向けのビルドツールです。&lt;/p&gt;

&lt;p&gt;Node.js(mjs,cjs)、ブラウザ(ESM、UMD)向けのビルドを一括でできるようになっています。&lt;/p&gt;

&lt;p&gt;Node.js 12+からサポートされたECMAScript Modules(ESM)では、利用できないNode.jsのAPIやimport時のファイル拡張子が必須となるなどのCommonJSとの違いがあります。ビルド時に、&lt;a href=&quot;https://github.com/milesj/packemon/tree/master/packages/babel-plugin-cjs-esm-interop&quot;&gt;Babelを使ったESM向けのコード変換&lt;/a&gt;やESMで利用できない機能をビルド時にチェックなども行います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/azu/scraps/8251dab75562c8&quot;&gt;Node.jsライブラリ/ツールをESMに移行する[Node.js 12+]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c&quot;&gt;Pure ESM package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には&lt;code&gt;packemon validate&lt;/code&gt;といったパッケージのメタデータのバリデーションなどができるコマンドなども持っています。&lt;br&gt;
似たツールとしては&lt;a href=&quot;https://github.com/developit/microbundle&quot;&gt;Microbundle&lt;/a&gt;がありますが、packemonはパッケージ公開を補助するツールも持つといった違いがあります。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-8-0-current-node-js&quot;&gt;Node v16.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.8.0/&quot; title=&quot;Node v16.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 16.8.0リリース。&lt;br&gt;
&lt;code&gt;stream.Duplex.from&lt;/code&gt;、 &lt;code&gt;stream.Readable.isDisturbed(stream)&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;util&lt;/code&gt;モジュールに&lt;code&gt;toUSVString&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-4-typescript&quot;&gt;Announcing TypeScript 4.4 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/&quot; title=&quot;Announcing TypeScript 4.4 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.4リリース。&lt;br&gt;
Control Flow Analysisの改善、Index SignaturesにSymbolやTemplate Stringを利用できるように。&lt;br&gt;
Catch節のデフォルトを&lt;code&gt;unknown&lt;/code&gt;型にする&lt;code&gt;useUnknownInCatchVariables&lt;/code&gt;オプションの追加。&lt;br&gt;
optionalと&lt;code&gt;undefined&lt;/code&gt;値の区別をする&lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt;オプションの追加。&lt;br&gt;
また、ES Proposal Stage 3のclass static blockをサポート。&lt;br&gt;
&lt;code&gt;tsc --help&lt;/code&gt;の表示を改善、ビルドパフォーマンスの改善も含まれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-94-beta-webcodecs-webgpu-scheduling-and-more&quot;&gt;Chromium Blog: Chrome 94 Beta: WebCodecs, WebGPU, Scheduling, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/08/chrome-94-beta-webcodecs-webgpu.html&quot; title=&quot;Chromium Blog: Chrome 94 Beta: WebCodecs, WebGPU, Scheduling, and More&quot;&gt;blog.chromium.org/2021/08/chrome-94-beta-webcodecs-webgpu.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 94 Betaリリース。&lt;br&gt;
Origin Trialとして、HTTP status code 103 Early Hintsを実験的にサポート。&lt;br&gt;
WebCodecs、&lt;code&gt;scheduler.postTask()&lt;/code&gt;、&lt;code&gt;MediaStreamTrackGenerator&lt;/code&gt;/&lt;code&gt;MediaStreamTrackProcessor&lt;/code&gt;のサポート。&lt;br&gt;
Self Profiling APIのサポートなど。&lt;br&gt;
また、WebSQLがサードパーティコンテキストでは非推奨となり、&lt;code&gt;navigator.plugins&lt;/code&gt;/ &lt;code&gt;navigator.mimeTypes&lt;/code&gt;は固定された値を返すように変更されるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-swr-1-0-swr&quot;&gt;Announcing SWR 1.0 – SWR&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://swr.vercel.app/blog/swr-v1&quot; title=&quot;Announcing SWR 1.0 – SWR&quot;&gt;swr.vercel.app/blog/swr-v1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;データ取得するReact HooksライブラリのSWR 1.0リリース。&lt;br&gt;
&lt;code&gt;fallback&lt;/code&gt;オプションの追加、Immutable Modeの追加、&lt;code&gt;provider&lt;/code&gt;オプションの追加、&lt;code&gt;useSWRConfig&lt;/code&gt;の追加。&lt;br&gt;
また、Middlewareの対応、一部APIの変更、デフォルトの&lt;code&gt;fetcher&lt;/code&gt;を定義しなくなるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-27-1-0-facebook-jest&quot;&gt;Release 27.1.0 · facebook/jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jest/releases/tag/v27.1.0&quot; title=&quot;Release 27.1.0 · facebook/jest&quot;&gt;github.com/facebook/jest/releases/tag/v27.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 27.1.0リリース。&lt;br&gt;
&lt;code&gt;snapshotFormat&lt;/code&gt;オプションの追加、Node.js 16で追加された&lt;code&gt;node:&lt;/code&gt; prefixのモジュールをサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_core_modules&quot; title=&quot;Modules: CommonJS modules | Node.js v16.8.0 Documentation&quot;&gt;Modules: CommonJS modules | Node.js v16.8.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mongoose-changelog-md-at-master-automattic-mongoose&quot;&gt;mongoose/CHANGELOG.md at master · Automattic/mongoose&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md#600--2021-08-24&quot; title=&quot;mongoose/CHANGELOG.md at master · Automattic/mongoose&quot;&gt;github.com/Automattic/mongoose/blob/master/CHANGELOG.md#600--2021-08-24&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MongoDB&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mongoose 6.0リリース。&lt;br&gt;
MongoDB Driver 4.0サポート、&lt;code&gt;sanitizeFilter&lt;/code&gt;と&lt;code&gt;Trusted()&lt;/code&gt;メソッドの追加、&lt;code&gt;default&lt;/code&gt;に関数を渡せるように、Documentの変更をProxyで検知できるように。&lt;br&gt;
破壊的な変更として、&lt;code&gt;createConnection(uri)&lt;/code&gt;がthenableではなくなる、同じQueryを再実行はエラーにになる,&lt;code&gt;strictQuery&lt;/code&gt;オプションを&lt;code&gt;strict&lt;/code&gt;にリネーム。&lt;br&gt;
また、デフォルトの挙動を変更に関連して不要となったオプションの削除やTypeScriptの型定義の変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mongoosejs.com/docs/migrating_to_6.html&quot; title=&quot;Mongoose v6.0.2: Migrating to Mongoose 6&quot;&gt;Mongoose v6.0.2: Migrating to Mongoose 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://thecodebarbarian.com/introducing-mongoose-6.html&quot; title=&quot;Introducing Mongoose 6.0.0 | www.thecodebarbarian.com&quot;&gt;Introducing Mongoose 6.0.0 | www.thecodebarbarian.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;private-network-access-update-introducing-a-deprecation-trial-chrome-developers&quot;&gt;Private Network Access update: Introducing a deprecation trial - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/private-network-access-update/&quot; title=&quot;Private Network Access update: Introducing a deprecation trial - Chrome Developers&quot;&gt;developer.chrome.com/blog/private-network-access-update/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeでのnon-secureなウェブサイトからPrivate Network Accessを制限するロードマップについて。&lt;br&gt;
Chrome 94でnon-secureなPublicウェブサイトからPrivate Networkへのリクエストを送れなくなり、逆Origin Trialを開始している。&lt;br&gt;
Chrome 102で逆Origin Trialを終了し、完全に制限される。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-portal-windows-for-electron&quot;&gt;Introducing Portal Windows for Electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tandem.chat/portal-windows/&quot; title=&quot;Introducing Portal Windows for Electron&quot;&gt;blog.tandem.chat/portal-windows/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tandemで利用しているElectronで他のウィンドウをミラーリングするライブラリについて。&lt;br&gt;
他のアプリのウィンドウをReactコンポーネントとして描画、スクリーンシェアなどに利用できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cryptagon/portal-windows&quot; title=&quot;cryptagon/portal-windows: Render and position native windows as simply as you render and position tooltips in your React app.&quot;&gt;cryptagon/portal-windows: Render and position native windows as simply as you render and position tooltips in your React app.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-lab-and-field-data-can-be-different-and-what-to-do-about-it&quot;&gt;Why lab and field data can be different (and what to do about it)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/lab-and-field-data-differences/&quot; title=&quot;Why lab and field data can be different (and what to do about it)&quot;&gt;web.dev/lab-and-field-data-differences/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PageSpeed Insightsなどに表示されている定点観測データであるLab dataとRUMであるField dataについて。&lt;br&gt;
それぞれのデータの違い、計測方法、キャッシュの状態、AMP/SXG、BFCacheなどの影響について。&lt;br&gt;
LabとFieldがどちらもある場合は、Field dataがよりユーザーの体験に近いことについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-client-side-routing-the-app-history-api&quot;&gt;Modern client-side routing: the App History API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/app-history-api/&quot; title=&quot;Modern client-side routing: the App History API&quot;&gt;web.dev/app-history-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95にてフラグ付きで実装されたApp History APIについて。&lt;br&gt;
問題のあるHistory APIを置き換えるAPI。&lt;br&gt;
&lt;code&gt;navigation&lt;/code&gt;イベントでのナビゲーションの検知、&lt;code&gt;transitionWhile(promise)&lt;/code&gt;での遷移中/成功/失敗の表現、ナビゲーションエラー時のロールバックなどの具体例について。&lt;br&gt;
また、Historyの管理、状態の管理、FormのSubmitにおけるナビゲーションを扱える点についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/app-history&quot; title=&quot;WICG/app-history: The app history API provides a web application-focused way of managing same-origin same-frame history entries and navigations.&quot;&gt;WICG/app-history: The app history API provides a web application-focused way of managing same-origin same-frame history entries and navigations.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nan-to-node-api-migration-a-short-story-nodesource&quot;&gt;NAN to Node-API Migration: A Short Story - NodeSource&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodesource.com/blog/NAN-to-Node-API-migration-a-short-story&quot; title=&quot;NAN to Node-API Migration: A Short Story - NodeSource&quot;&gt;nodesource.com/blog/NAN-to-Node-API-migration-a-short-story&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C++&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのnative addonを開発時に利用するNANとNode-API(N-API)について。&lt;br&gt;
Node-APIはV8に依存しないnative addon開発のために追加され、NANからNode-APIに移行しながら、Node-APIの使い方について見ていく記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-projectvisbug-firebug-for-designers-edit-any-webpage-in-any-state-https-a-nerdy-dev-gimme-visbug&quot;&gt;GoogleChromeLabs/ProjectVisBug: FireBug for designers › Edit any webpage, in any state &lt;a href=&quot;https://a.nerdy.dev/gimme-visbug&quot;&gt;https://a.nerdy.dev/gimme-visbug&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/ProjectVisBug&quot; title=&quot;GoogleChromeLabs/ProjectVisBug: FireBug for designers › Edit any webpage, in any state https://a.nerdy.dev/gimme-visbug&quot;&gt;github.com/GoogleChromeLabs/ProjectVisBug&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Design&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;デザイナー向けのDevTools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://visbug.web.app/&quot; title=&quot;VisBug&quot;&gt;VisBug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gotta-pack-em-all-packemon&quot;&gt;Gotta pack &amp;#039;em all! | Packemon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://packemon.dev/&quot; title=&quot;Gotta pack &amp;amp;#039;em all! | Packemon&quot;&gt;packemon.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ライブラリ向けのビルドツール。&lt;br&gt;
Node.js(mjs,cjs)、ブラウザ(ESM、UMD)向けのビルドを一括でできる。&lt;br&gt;
また、設定に応じたpackage.jsonの書き換え、Babelを使ったESM向けのコード変換、mjsで利用できない機能をビルド時にチェック、パッケージのメタデータのバリデーションなどができる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/packemon-demo&quot; title=&quot;azu/packemon-demo: Packemon demo package&quot;&gt;azu/packemon-demo: Packemon demo package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;5alidz-tiny-schema-validator-json-schema-validator&quot;&gt;5alidz/tiny-schema-validator: JSON schema validator&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/5alidz/tiny-schema-validator&quot; title=&quot;5alidz/tiny-schema-validator: JSON schema validator&quot;&gt;github.com/5alidz/tiny-schema-validator&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Schemaを定義してバリデーションができるbuilderライブラリ。&lt;br&gt;
作成したSchemaオブジェクトはTypeScriptの型としても利用できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unjs-unplugin-unified-plugin-system-for-vite-rollup-and-webpack&quot;&gt;unjs/unplugin: Unified plugin system for Vite, Rollup, and Webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/unjs/unplugin&quot; title=&quot;unjs/unplugin: Unified plugin system for Vite, Rollup, and Webpack&quot;&gt;github.com/unjs/unplugin&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rollup&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite/Rollup/webpack pluginを同じコードから作成するライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 31 Aug 2021 07:46:59 +0900</pubDate>
        <link>https://jser.info/2021/08/31/typescript-4.4-pagespeed-insightslabfield-data-packemon/</link>
        <guid isPermaLink="true">https://jser.info/2021/08/31/typescript-4.4-pagespeed-insightslabfield-data-packemon/</guid>
        
        <category>node.js</category>
        
        <category>Chrome</category>
        
        <category>TypeScript</category>
        
        <category>browser</category>
        
        <category>React</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-08-25のJS: browser-compat-dataにDenoを追加、Mobile First and Desktop First、create-react-appからNext.jsに移行</title>
        <description>&lt;p&gt;JSer.info #554 - MDNなどが利用するブラウザ実装の互換データを管理している &lt;code&gt;@mdn/browser-compat-data&lt;/code&gt; 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/releases/tag/v4.0.0&quot;&gt;Release v4.0.0 · mdn/browser-compat-data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;互換リストにDenoのデータが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/deno-on-mdn&quot;&gt;Deno on MDN | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;スキーマに&lt;code&gt;preview&lt;/code&gt;と&lt;code&gt;accepts_flags&lt;/code&gt;の追加、XPathとXSLTのデータが不完全であるため削除などの変更も含まれています・&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&quot;&gt;The State Of Mobile First and Desktop First - Ahmad Shadeed&lt;/a&gt;という記事では、CSSを書くときにMobileとDesktop向けのどちらを先に書くかについて書かれています。&lt;/p&gt;

&lt;p&gt;MobileとDesktopのどちらかを先に書いて、もう一方をMedia Queryで上書きしたときのコード量や拡張性の違いについて比較しています。&lt;br&gt;
また、ベースに加えてMobileとDesktopの対応をそれぞれ書いた場合の難しい点についても書かれています。&lt;br&gt;
発展としてFlexboxやCSS Grid、Container Queriesなどの新しいCSS機能を使うことでより簡単に書けるようになっている話なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://kittygiraudel.com/2021/08/24/from-cra-to-next/&quot;&gt;From Create-React-App to Next | Kitty Giraudel&lt;/a&gt;という記事では&lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;(CRA)から&lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;への移行をどのようにしたかについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;やスタイリングなどの項目ごとに、CRAからNext.jsにどのように移植したのかが書かれています。&lt;br&gt;
また移行後に&lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt;以外はどちらの環境でも実行できたため、移行の動作確認として両方の環境で動かしてテストする方法についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-65-react-native&quot;&gt;Announcing React Native 0.65 · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/08/17/version-065&quot; title=&quot;Announcing React Native 0.65 · React Native&quot;&gt;reactnative.dev/blog/2021/08/17/version-065&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.65リリース。&lt;br&gt;
Hermes 0.8にアップグレードし、Hadesというガベージコレクタの実装、ECMAScript i18n APIのサポート、Apple M1のサポートなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v9-1-0-mochajs-mocha&quot;&gt;Release v9.1.0 · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v9.1.0&quot; title=&quot;Release v9.1.0 · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/releases/tag/v9.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mocha 9.1.0リリース。&lt;br&gt;
&lt;code&gt;--fail-zero&lt;/code&gt;、&lt;code&gt;--node-option&lt;/code&gt;のサポート、&lt;code&gt;JSON&lt;/code&gt;レポーターの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-130-webkit&quot;&gt;Release Notes for Safari Technology Preview 130 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11958/release-notes-for-safari-technology-preview-130/&quot; title=&quot;Release Notes for Safari Technology Preview 130 | WebKit&quot;&gt;webkit.org/blog/11958/release-notes-for-safari-technology-preview-130/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フラグ付きで&lt;code&gt;Array.prototype.findLast&lt;/code&gt;と&lt;code&gt;Array.prototype.findLastIndex&lt;/code&gt;のサポート、WebAudioでWebM/Opusコンテナのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-mdn-browser-compat-data&quot;&gt;Release v4.0.0 · mdn/browser-compat-data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · mdn/browser-compat-data&quot;&gt;github.com/mdn/browser-compat-data/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNなどで使われるウェブ技術の互換性リストであるbrowser-compat-data 4.0.0リリース。&lt;br&gt;
スキーマに&lt;code&gt;preview&lt;/code&gt;と&lt;code&gt;accepts_flags&lt;/code&gt;の追加、Denoを追加、XPathとXSLTのデータが不完全であるため削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/deno-on-mdn&quot; title=&quot;Deno on MDN | Deno Blog&quot;&gt;Deno on MDN | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-registry-is-deprecating-tls-1-0-and-tls-1-1-the-github-blog&quot;&gt;The npm registry is deprecating TLS 1.0 and TLS 1.1 | The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-08-23-npm-registry-deprecating-tls-1-0-tls-1-1/&quot; title=&quot;The npm registry is deprecating TLS 1.0 and TLS 1.1 | The GitHub Blog&quot;&gt;github.blog/2021-08-23-npm-registry-deprecating-tls-1-0-tls-1-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm registryでTLS 1.0とTLS 1.1を非推奨化し、2021年9月29日でサポートを終了する予定。&lt;br&gt;
Node.js 0.10.0未満のバージョンを使っているケースやカスタムしたバイナリを使っているケースが対象となるがすでに99%はTLS 1.2を利用しているとのこと。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-mobile-first-and-desktop-first-ahmad-shadeed&quot;&gt;The State Of Mobile First and Desktop First - Ahmad Shadeed&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&quot; title=&quot;The State Of Mobile First and Desktop First - Ahmad Shadeed&quot;&gt;ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを書くときにMobileとDesktop向けのどちらを先に書くかについて。&lt;br&gt;
MobileとDesktopのどちらかを先に書いて、もう一方をMedia Queryで上書きしたときのコード量や拡張性の違いについて。&lt;br&gt;
また、ベースとそれぞれを書いた場合やFlexboxやContainer Queryといった最近の機能を使って書いた場合についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mouseover-dom-blog-jxck-io&quot;&gt;mouseover 中に表示される DOM のデバッグ | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2021-08-20/how-to-debug-mouseover.html&quot; title=&quot;mouseover 中に表示される DOM のデバッグ | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2021-08-20/how-to-debug-mouseover.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mouseover中に表示されるDOM要素を開発者ツールでデバッグする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;return-await-promise-vs-return-promise-in-javascript&quot;&gt;&amp;#039;return await promise&amp;#039; vs &amp;#039;return promise&amp;#039; in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/return-await-promise-javascript/&quot; title=&quot;&amp;amp;#039;return await promise&amp;amp;#039; vs &amp;amp;#039;return promise&amp;amp;#039; in JavaScript&quot;&gt;dmitripavlutin.com/return-await-promise-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;return await promise&lt;/code&gt;と&lt;code&gt;return promise&lt;/code&gt;で動作が異なるケースについて。&lt;br&gt;
&lt;code&gt;try...catch&lt;/code&gt;で囲まれている場合には、&lt;code&gt;await&lt;/code&gt;によってthrowされると結果が異なる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-prettier-livesense-engineer-blog&quot;&gt;複数リポジトリ間におけるeslint・prettierの設定共通化 - LIVESENSE ENGINEER BLOG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://made.livesense.co.jp/entry/2021/08/24/083000&quot; title=&quot;複数リポジトリ間におけるeslint・prettierの設定共通化 - LIVESENSE ENGINEER BLOG&quot;&gt;made.livesense.co.jp/entry/2021/08/24/083000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLintの設定を社内で共有管理するために、scoped packagesとして公開して利用方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-wasm-is-not-the-future-of-babylon-js-by-babylon-js-aug-2021-medium&quot;&gt;Why WASM is not the future of Babylon.js | by Babylon.js | Aug, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babylonjs.medium.com/why-wasm-is-not-the-future-of-babylon-js-5832b09c9b10&quot; title=&quot;Why WASM is not the future of Babylon.js | by Babylon.js | Aug, 2021 | Medium&quot;&gt;babylonjs.medium.com/why-wasm-is-not-the-future-of-babylon-js-5832b09c9b10&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyはC++などのネイティブな言語をコンパイルして利用するのが目的であるため、TypeScriptで書かれたBabylon.jsをWasmにする正当な理由がまだないという話。&lt;br&gt;
WasmとJS間のコミュニケーションコストやデバッグが難しい、メモリ管理なども含むためサイズが大きくなるなどの問題点について。&lt;br&gt;
また、Babylon.jsの物理エンジンなどの一部領域ではWasmをすでに利用していることなどについても書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-create-react-app-to-next-kitty-giraudel&quot;&gt;From Create-React-App to Next | Kitty Giraudel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kittygiraudel.com/2021/08/24/from-cra-to-next/&quot; title=&quot;From Create-React-App to Next | Kitty Giraudel&quot;&gt;kittygiraudel.com/2021/08/24/from-cra-to-next/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Create-React-Appで書かれていたアプリをNext.jsに移行した話。&lt;br&gt;
ボイラープレート、&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;、ルーティング、コンポーネントのDynamic Import、Styling、CSR/SSR、Lintなどについて。&lt;br&gt;
また&lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt;以外はどちらの環境でも実行できたため、移行の動作確認として両方の環境で動かしてテストする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speedvitals-optimize-your-website-for-web-vitals&quot;&gt;SpeedVitals - Optimize your Website for Web Vitals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speedvitals.com/&quot; title=&quot;SpeedVitals - Optimize your Website for Web Vitals&quot;&gt;speedvitals.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブサイトのパフォーマンス計測をしてCore Web Vitalsの改善方法を提示するウェブサービス。&lt;br&gt;
計測結果からLCPのスコアの改善方法、レイアウトシフトの視覚化など改善に関する情報を提示する&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.speedvitals.com/introducing-speedvitals/#more-20&quot; title=&quot;Introducing SpeedVitals Alpha Version! - SpeedVitals&quot;&gt;Introducing SpeedVitals Alpha Version! - SpeedVitals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-wc-semantic-dom-diff-npm&quot;&gt;@open-wc/semantic-dom-diff - npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/@open-wc/semantic-dom-diff&quot; title=&quot;@open-wc/semantic-dom-diff - npm&quot;&gt;www.npmjs.com/package/@open-wc/semantic-dom-diff&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DOM/HTMLのassertionライブラリ。&lt;br&gt;
HTML文字列を比較したテストができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-next-js&quot;&gt;Testing | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/docs/testing&quot; title=&quot;Testing | Next.js&quot;&gt;nextjs.org/docs/testing&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.jsにおけるテストについてのドキュメント。&lt;br&gt;
Cypressを使ったE2EテストとJest + React Testing Libraryを使ったテストの方法について紹介している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/delba_oliveira/status/1427307677709967362&quot; title=&quot;Delba de Oliveira on Twitter: &amp;amp;amp;amp;quot;We&amp;amp;amp;#039;ve just released the first iteration of the Next.js Testing Docs: https://t.co/jhe7zSigt3 🧪 We wanted to provide a starting point for those looking to set up Next.js with 3 commonly used testing tools: @cypress\_io, @fbjest and React @TestingLib.&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Delba de Oliveira on Twitter: &amp;amp;quot;We&amp;#039;ve just released the first iteration of the Next.js Testing Docs: https://t.co/jhe7zSigt3 🧪 We wanted to provide a starting point for those looking to set up Next.js with 3 commonly used testing tools: @cypress_io, @fbjest and React @TestingLib.&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;geist-org-react-modern-and-minimalist-react-ui-library&quot;&gt;geist-org/react: Modern and minimalist React UI library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/geist-org/react&quot; title=&quot;geist-org/react: Modern and minimalist React UI library.&quot;&gt;github.com/geist-org/react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;VercelのデザインをインスパイアしたReactのUIフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;johnsoncodehk-volar-fast-vue-language-support-extension&quot;&gt;johnsoncodehk/volar: ⚡ Fast Vue Language Support Extension&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/johnsoncodehk/volar&quot; title=&quot;johnsoncodehk/volar: ⚡ Fast Vue Language Support Extension&quot;&gt;github.com/johnsoncodehk/volar&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3をサポートするVSCode向けの拡張機能。&lt;br&gt;
&lt;code&gt;.vue&lt;/code&gt;ファイルのTypeScriptの型チェックやテンプレートのlanguage serverを提供する&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 25 Aug 2021 11:44:57 +0900</pubDate>
        <link>https://jser.info/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/</link>
        <guid isPermaLink="true">https://jser.info/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/</guid>
        
        <category>React</category>
        
        <category>testing</category>
        
        <category>DOM</category>
        
        <category>Next.js</category>
        
        <category>webservice</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
