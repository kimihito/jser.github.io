<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/ko/</link>
    <atom:link href="https://jser.info/ko/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 27 Oct 2021 13:19:49 +0900</pubDate>
    <lastBuildDate>Wed, 27 Oct 2021 13:19:49 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-10-20: Parcel v2, Node v17.0.0, Nuxt 3 beta</title>
        <description>&lt;p&gt;JSer.info #562 - 빌드 도구 Parcel v2 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/blog/v2/&quot;&gt;Announcing Parcel v2!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parcel은 특별한 설정 없이(zero configuration) 실행하는 것을 목표로 했기 때문에 v1에서 플러그인 구조가 매우 얇은 형태로 돼 있었다.&lt;br&gt;
Parcel v2에서는 플러그인 구조를 개편하고, 다양한 경우에 대응할 수 있도록 개선됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/features/plugins/&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, Tree Shaking을 기본적으로 활성화, &lt;a href=&quot;https://github.com/swc-project/swc&quot;&gt;SWC&lt;/a&gt; 기반의 JavaScript 컴파일러 채택, Modern과 Legacy 분리 빌드, Image optimizer 등이 추가 됐다.&lt;br&gt;
그 외에도 bundle 인라인화, 라이브러리 용 빌드 모드 지원, C++이나 Rust로 코어 모듈 일부를 수정하여 빌드 성능을 개선했다.&lt;/p&gt;

&lt;p&gt;Parcel v1에서 마이그레이션 하는 방법은 공식 문서를 참고한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/getting-started/migration/&quot;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 17.0.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v17.0.0/&quot;&gt;Node v17.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-17-is-here-8dba1e14e382&quot;&gt;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node의 홀수 버전은 LTS가 아니며 &lt;code&gt;Current&lt;/code&gt; 버전이다.&lt;br&gt;
현재 Node의 LTS는 12와 14 이며 2021년 10월 26일에 Node 16이 LTS로 추가된다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 17에서는 &lt;code&gt;readline&lt;/code&gt; 모듈의 Promise 대응, OpenSSL 3.0으로 갱신, V8 9.5으로 갱신, npm 8.0.0으로 갱신 됐고, 스택 트레이스에 Node 버전을 포함하도록 변경됐다.&lt;br&gt;
또 웹 표준의 &lt;code&gt;strcturedClone()&lt;/code&gt;과 &lt;code&gt;DOMException&lt;/code&gt;도 지원한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/structuredClone&quot;&gt;structuredClone()&lt;/a&gt;은 &lt;code&gt;postMessage&lt;/code&gt; 등에서 내부적으로 사용하고 있던 (DOM을 포함하여) 객체의 복제 메커니즘을 함수로 공개한 메서드다.&lt;br&gt;
최근에 WHATWG HTML 사양에 추가되어 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1722576&quot;&gt;Firefox&lt;/a&gt;와 &lt;a href=&quot;https://deno.com/blog/v1.13#support-for-self.structuredclone()&quot;&gt;Deno&lt;/a&gt;에서 구현됐으며 &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1233571&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=228331&quot;&gt;Safari&lt;/a&gt;, &lt;a href=&quot;https://github.com/zloirock/core-js/issues/969&quot;&gt;core-js&lt;/a&gt;에서는 구현이 진행되고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/html/pull/3414&quot;&gt;Expose structuredClone by surma · Pull Request #3414 · whatwg/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;structuredClone()&lt;/code&gt;는 &lt;code&gt;JSON.parse&lt;/code&gt; / &lt;code&gt;JSON.strinfigy&lt;/code&gt;가 지원하지 않는 객체(Map이나 RegExp 등)의 복제도 지원하므로 DOM 외를 다룰 때에도 유용하게 사용할 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/petamoriken/articles/ad1e943d8d113c&quot;&gt;구조화 복제 알고리즘(the structured clone algorithm)을 사용한 객체 깊은 복사&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;structuredClone()&lt;/code&gt;로 복제할 수 없는 경우에는 &lt;code&gt;DOMException&lt;/code&gt; 예외가 발생해야 하므로 &lt;code&gt;DOMException&lt;/code&gt;도 함께 구현됐다.&lt;/p&gt;

&lt;p&gt;Node 17에는 Node 16의 변경 사항도 포함되는 버전으로 자세한 내용은 다음 문서를 참고하길 바란다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/ko/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/&quot;&gt;2021-04-27: Node.js 16.0.0, Chrome 91 beta, Prisma(Ready for production) - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2021/10/20/114721&quot;&gt;Node.js v17의 주요 변경 사항 - 별로 힘들지 않은 블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-parcel-v2&quot;&gt;Announcing Parcel v2!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://parceljs.org/blog/v2/&quot; title=&quot;Announcing Parcel v2!&quot;&gt;parceljs.org/blog/v2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel v2 릴리스.&lt;br&gt;
플러그인 구조 개편, Tree Shaking을 기본적으로 활성화, SWC 기반의 JavaScript 컴파일러로 변경, Modern과 Legacy 빌드 분리 출력, Image optimizer 추가.&lt;br&gt;
bundle의 인라인화, 라이브러리 용 빌드 지원, 개발 시 요청 된 시점에 지연 빌드 할 수 있게 됐다.&lt;br&gt;
그 외로도 Source Map 라이브러리를 Rust로 재작성하여 성능과 파일 감시 시스템을 개선했다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://parceljs.org/getting-started/migration/&quot; title=&quot;Migration&quot;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-15-release-notes-deno-blog&quot;&gt;Deno 1.15 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.15&quot; title=&quot;Deno 1.15 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.15&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.15 릴리스.&lt;br&gt;
Web Crypto API 갱신, FFI 개선, &lt;code&gt;deno uninstall&lt;/code&gt; 커맨드 추가, &lt;code&gt;deno lint --watch&lt;/code&gt; 추가.&lt;br&gt;
&lt;code&gt;Deno.test&lt;/code&gt;가 들여쓰기 한 중첩된 테스트 케이스를 지원, V8 9.5로 갱신, Node.js 호환 모듈을 이용할 수 있는 &lt;code&gt;--compat&lt;/code&gt; 플러그 추가.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/uki00a/articles/node-compat-mode-introduced-in-deno-v1-15&quot; title=&quot;Deno v1.15에 도입된 Node.js 호환 모드 소개&quot;&gt;Deno v1.15에 도입된 Node.js 호환 모드 소개&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxt-introducing-nuxt-3-beta&quot;&gt;Nuxt - Introducing Nuxt 3 Beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nuxtjs.org/announcements/nuxt3-beta/&quot; title=&quot;Nuxt - Introducing Nuxt 3 Beta&quot;&gt;nuxtjs.org/announcements/nuxt3-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3 베타 릴리스.&lt;br&gt;
Vue 3와 Vite 대응.&lt;br&gt;
새로운 서버 엔진 Nitro Engine을 도입하여 Node.js 서버, Serverless, Service Worker 등 각각의 형태로 디플로이 가능하게 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github-advisory-database-now-powers-npm-audit-the-github-blog&quot;&gt;GitHub Advisory Database now powers npm audit | The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-10-07-github-advisory-database-now-powers-npm-audit/&quot; title=&quot;GitHub Advisory Database now powers npm audit | The GitHub Blog&quot;&gt;github.blog/2021-10-07-github-advisory-database-now-powers-npm-audit/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code&gt;npm audit&lt;/code&gt;은 GitHub Advisory Database를 기반으로 취약성 정보를 분석한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-0-pinojs-pino&quot;&gt;Release v7.0.0 · pinojs/pino&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pinojs/pino/releases/tag/v7.0.0&quot; title=&quot;Release v7.0.0 · pinojs/pino&quot;&gt;github.com/pinojs/pino/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pino 7.0.0 릴리스.&lt;br&gt;
로그 처리를 별도의 Thread 등에 전달하는 &lt;code&gt;pino.transport()&lt;/code&gt; 추가, &lt;code&gt;pino.multistream()&lt;/code&gt; 추가, TypeScript의 타입 선언을 패키지에 포함하도록 변경&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nearform.com/blog/pino7-0-0-pino-transport-worker_thread-transport/&quot; title=&quot;Welcome to pino@7.0.0 - and the era of worker\_thread transport - NearForm&quot;&gt;Welcome to pino@7.0.0 - and the era of worker_thread transport - NearForm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v17-0-0-current-node-js&quot;&gt;Node v17.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v17.0.0/&quot; title=&quot;Node v17.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v17.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v17.0.0 릴리스.&lt;br&gt;
&lt;code&gt;readline&lt;/code&gt; 모듈의 Promise 대응, OpenSSL 3.0으로 업데이트, V8 9.5로 업데이트, npm 8.0.0으로 업데이트, 스택 트레이스에 Node 버전을 표시한다.&lt;br&gt;
또, 웹 표준인 &lt;code&gt;strcturedClone()&lt;/code&gt;과 &lt;code&gt;DOMException&lt;/code&gt;을 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-17-is-here-8dba1e14e382&quot; title=&quot;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&quot;&gt;Node.js 17 is here!. This blog was written by Bethany… | by Node.js | Node.js Collection | Oct, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · npm/cli&quot;&gt;Release v8.0.0 · npm/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-visual-guide-to-react-rendering-cheat-sheet-alex-sidorenko&quot;&gt;A Visual Guide to React Rendering - Cheat Sheet | Alex Sidorenko&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://alexsidorenko.com/blog/react-render-cheat-sheet/&quot; title=&quot;A Visual Guide to React Rendering - Cheat Sheet | Alex Sidorenko&quot;&gt;alexsidorenko.com/blog/react-render-cheat-sheet/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cheatsheet&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;그림과 함께 React의 렌더링 케이스를 알기 쉽게 설명한 가이드 / 치트시트&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rf21-naman-goel-rethinking-css-introducing-stylex-youtube&quot;&gt;RF21 – Naman Goel – Rethinking CSS - Introducing Stylex - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ur-sGzUWId4&quot; title=&quot;RF21 – Naman Goel – Rethinking CSS - Introducing Stylex - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;ur-sGzUWId4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Facebook의 Atomic CSS 구현체인 Stylex 소개 영상.&lt;br&gt;
Stylex는 React-Native와 같이 스타일을 작성할 수 있는 툴킷으로 Atomic CSS에 의해 선형적으로 증가하는 CSS 양을 비선형적으로 관리할 수 있다.&lt;br&gt;
2021년 연말에 베타 버전을 릴리스 할 예정.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/news/2021/10/facebook-css-js-stylex/&quot; title=&quot;Facebook CSS-in-JS Solution Stylex Introduced at React Finland 2021&quot;&gt;Facebook CSS-in-JS Solution Stylex Introduced at React Finland 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-finland-2021-talks-youtube&quot;&gt;React Finland 2021 - Talks - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL-a9lBflNu2opNHeISTnlHgGVlI7oGLXi&quot; title=&quot;React Finland 2021 - Talks - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL-a9lBflNu2opNHeISTnlHgGVlI7oGLXi&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Finland 2021의 발표 영상 공개&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL-a9lBflNu2rhk1vr3yr4mdRzzUb_nj5P&quot; title=&quot;React Finland 2021 - Sessions - YouTube&quot;&gt;React Finland 2021 - Sessions - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;privacytests-org-open-source-tests-of-web-browser-privacy&quot;&gt;PrivacyTests.org: open-source tests of web browser privacy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://privacytests.org/&quot; title=&quot;PrivacyTests.org: open-source tests of web browser privacy&quot;&gt;privacytests.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;브라우저 별 Finger Printing이나 Tracking 관련 대책 등의 정책 기능을 정리한 사이트.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oslabs-beta-sapling-sapling-a-convenient-way-to-traverse-your-react-app-in-vs-code&quot;&gt;oslabs-beta/sapling: Sapling - A convenient way to traverse your React app in VS Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oslabs-beta/sapling&quot; title=&quot;oslabs-beta/sapling: Sapling - A convenient way to traverse your React app in VS Code&quot;&gt;github.com/oslabs-beta/sapling&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 컴포넌트 트리를 에디터의 사이드 패널에 표시하는 VSCode 확장.&lt;br&gt;
Root가 되는 컴포넌트를 포함하는 파일을 선택하면 그 컴포넌트가 갖고 있는 컴포넌트를 트리로 표시해준다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=team-sapling.sapling&quot; title=&quot;Sapling - Visual Studio Marketplace&quot;&gt;Sapling - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://javascript.plainenglish.io/introducing-sapling-a-vs-code-extension-for-traversing-your-react-component-hierarchy-3ac94d95887e&quot; title=&quot;Introducing Sapling: a VS Code Extension for Traversing React Component Hierarchy | by Team Sapling | Oct, 2021 | JavaScript in Plain English&quot;&gt;Introducing Sapling: a VS Code Extension for Traversing React Component Hierarchy | by Team Sapling | Oct, 2021 | JavaScript in Plain English&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;practical-svelte-create-performant-applications-with-the-svelte-component-framework-alex-libby-apress&quot;&gt;Practical Svelte - Create Performant Applications with the Svelte Component Framework | Alex Libby | Apress&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apress.com/gp/book/9781484273739&quot; title=&quot;Practical Svelte - Create Performant Applications with the Svelte Component Framework | Alex Libby | Apress&quot;&gt;www.apress.com/gp/book/9781484273739&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Svelte를 사용한 웹 애플리케이션 개발 입문서&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sairyss-domain-driven-hexagon-guide-on-domain-driven-design-hexagonal-architecture-best-practices-etc&quot;&gt;Sairyss/domain-driven-hexagon: Guide on Domain-Driven Design, Hexagonal architecture, best practices etc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Sairyss/domain-driven-hexagon&quot; title=&quot;Sairyss/domain-driven-hexagon: Guide on Domain-Driven Design, Hexagonal architecture, best practices etc.&quot;&gt;github.com/Sairyss/domain-driven-hexagon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;도메인 주도 개발(DDD) 가이드.&lt;br&gt;
DDD에 관한 용어, 설계 뿐 아니라 TypeScript 기반 예제를 이용한 기술적 전략에 대해서도 다룬다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 20 Oct 2021 12:47:20 +0900</pubDate>
        <link>https://jser.info/ko/2021/10/20/parcel-v2-node-v17.0.0-nuxt-3-beta/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/10/20/parcel-v2-node-v17.0.0-nuxt-3-beta/</guid>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>video</category>
        
        <category>bundler</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-10-12: npm 8.0.0(Node.js 16에 포함), jQuery Mobile 비권장 / jQuery UI는 유지 관리 모드로, ESLint 8</title>
        <description>&lt;p&gt;JSer.info #561 - npm 8.0.0이 릴리스됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot;&gt;Release v8.0.0 · npm/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 10 지원 종료, Node.js 모듈(&lt;code&gt;require(&amp;quot;npm&amp;quot;)&lt;/code&gt;)로 이용하는 방법 지원 종료됐다.&lt;/p&gt;

&lt;p&gt;이미 npm 8은 &lt;a href=&quot;https://nodejs.org/en/blog/release/v16.11.0/&quot;&gt;Node v16.11.0&lt;/a&gt;에 포함돼 있다. 따라서 2021-10-26에 릴리스 될 예정인 Node.js 16 LTS에도 포함될 예정.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/40168&quot;&gt;deps: &lt;code&gt;npm@8&lt;/code&gt; · Issue #40168 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;jQuery UI 1.13.0가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&quot;&gt;jQuery UI 1.13.0 released | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQuery 1.7 이하 지원 종료하고 1.8 이후 부터 최신 버전을 포함하여 jQuery에 대응.&lt;br&gt;
이 릴리스를 통해 jQuery UI는 유지 관리 모드로 전환 되며 이후로는 버그 수정이나 보안 수정만 주로 이뤄지게 된다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-maintainers-update-and-transition-jquery-ui-as-part-of-overall-modernization-efforts/&quot;&gt;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, 이와 동시에 jQuery Mobile는 Deprecated 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&quot;&gt;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ESLint 8.0.0이 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비호환 변경으로 Node 10 지원 종료, &lt;code&gt;codeframe&lt;/code&gt;과 &lt;code&gt;table&lt;/code&gt; 포메터를 코어에서 삭제, &lt;code&gt;eslint:recommended&lt;/code&gt; 갱신이 이뤄졌다.&lt;br&gt;
또, &lt;code&gt;ESLint&lt;/code&gt; 클래스를 추가하면서 &lt;code&gt;CLIEngine&lt;/code&gt; 클래스 삭제, &lt;code&gt;eslint/lib&lt;/code&gt; 엔트리 포인트 삭제, 플러그인 관련해서도 일부 내용이 변경됐다.&lt;br&gt;
따라서 일부 외부 규칙이 ESLint 8에서는 동작하지 않을 가능성이 있다.&lt;/p&gt;

&lt;p&gt;기능 추가로는 ES2020 지원, 사용되지 않는 &lt;code&gt;eslint-disable&lt;/code&gt; 주석을 삭제할 수 있게 됐다.&lt;/p&gt;

&lt;p&gt;마이그레이션 가이드는 아래 문서에 공게돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-8.0.0&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-npm-cli&quot;&gt;Release v8.0.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v8.0.0&quot; title=&quot;Release v8.0.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 8.0.0 릴리스.&lt;br&gt;
Node.js 10 지원 종료, Node.js 모듈(&lt;code&gt;require(&amp;quot;npm&amp;quot;)&lt;/code&gt;)로의 접근 지원 종료.&lt;br&gt;
2021-10-26에 릴리스 예정인 Node.js 16 LTS에 포함된다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/40168&quot; title=&quot;deps: \&amp;amp;#x60;npm@8\&amp;amp;#x60; · Issue #40168 · nodejs/node&quot;&gt;deps: `npm@8` · Issue #40168 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-immutable-js-immutable-js&quot;&gt;Release v4.0.0 · immutable-js/immutable-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/immutable-js/immutable-js/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · immutable-js/immutable-js&quot;&gt;github.com/immutable-js/immutable-js/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;immutable-js v4.0.0 릴리스.&lt;br&gt;
MIT 라이센스로 변경, TypeScript와 Flow 타입 개선, 공식 문서 갱신.&lt;br&gt;
비호환 변경으로 &lt;code&gt;merge&lt;/code&gt;와 &lt;code&gt;mergeDeep&lt;/code&gt;의 동작 방식 변경, &lt;code&gt;Iterable&lt;/code&gt;을 Collection으로 이름 변경, 일부 API를 삭제하거나 추가 했다.&lt;br&gt;
또, Collection이 ECMAScript의 Iterable protocol을 구현하도록 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-11-0-current-node-js&quot;&gt;Node v16.11.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.11.0/&quot; title=&quot;Node v16.11.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.11.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js v16.11.0 릴리스.&lt;br&gt;
npm 8.0.0를 내포하는 버전.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lots-to-see-in-firefox-93-mozilla-hacks-the-web-developer-blog&quot;&gt;Lots to see in Firefox 93! - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/10/lots-to-see-in-firefox-93/&quot; title=&quot;Lots to see in Firefox 93! - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/10/lots-to-see-in-firefox-93/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 93릴리스.&lt;br&gt;
AVIF 지원, ECMAScript Proposal Stage 4의 Static initialization blocks 지원.&lt;br&gt;
&lt;code&gt;ElementInternals.shadowRoot&lt;/code&gt;와 &lt;code&gt;HTMLElement.attachInternals&lt;/code&gt; 지원.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/93&quot; title=&quot;Firefox 93 for developers - Mozilla | MDN&quot;&gt;Firefox 93 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/93.0/releasenotes/&quot; title=&quot;Firefox 93.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 93.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1-13-0-released-jquery-ui-blog&quot;&gt;jQuery UI 1.13.0 released | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&quot; title=&quot;jQuery UI 1.13.0 released | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2021/10/jquery-ui-1-13-0-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.13.0 릴리스.&lt;br&gt;
jQuery 1.7 이하 지원 종료하고 1.8 이후 부터 최신 버전을 포함하여 jQuery에 대응.&lt;br&gt;
이 릴리스를 통해 jQuery UI는 유지 관리 모드가 되며 향후에는 보안이나 버그 수정만 이뤄진다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/10/jquery-maintainers-update-and-transition-jquery-ui-as-part-of-overall-modernization-efforts/&quot; title=&quot;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&quot;&gt;jQuery maintainers update and transition jQuery UI as part of overall modernization efforts | jQuery UI Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-maintainers-continue-modernization-initiative-with-deprecation-of-jquery-mobile-openjs-foundation&quot;&gt;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&quot; title=&quot;jQuery maintainers continue modernization initiative with deprecation of jQuery Mobile - OpenJS Foundation&quot;&gt;openjsf.org/blog/2021/10/07/deprecation-of-jquery-mobile/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery Mobile은 2021-10-07을 들어 Deprecated 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-39-0-nvm-sh-nvm&quot;&gt;Release v0.39.0 · nvm-sh/nvm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm/releases/tag/v0.39.0&quot; title=&quot;Release v0.39.0 · nvm-sh/nvm&quot;&gt;github.com/nvm-sh/nvm/releases/tag/v0.39.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node 버전 관리 도구 nvm 0.39.0 릴리스.&lt;br&gt;
WSL / MSYS / Cygwin 환경의 Windows를 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v8-0-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot; title=&quot;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2021/10/eslint-v8.0.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint v8.0.0 릴리스.&lt;br&gt;
비호환 변경으로 Node 10 지원 종료, &lt;code&gt;codeframe&lt;/code&gt;과 &lt;code&gt;table&lt;/code&gt; 포메터를 코어에서 삭제, &lt;code&gt;eslint:recommended&lt;/code&gt; 갱신.&lt;br&gt;
또, &lt;code&gt;ESLint&lt;/code&gt; 클래스를 추가하면서 &lt;code&gt;CLIEngine&lt;/code&gt; 클래스를 삭제, &lt;code&gt;eslint/lib&lt;/code&gt;의 엔트리 포인트도 삭제.&lt;br&gt;
추가된 기능으로는 ES2020 지원, 사용되지 않는 &lt;code&gt;eslint-disable&lt;/code&gt; 주석을 삭제할 수 있게 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-8.0.0&quot; title=&quot;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-typescript-eslint-typescript-eslint&quot;&gt;Release v5.0.0 · typescript-eslint/typescript-eslint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · typescript-eslint/typescript-eslint&quot;&gt;github.com/typescript-eslint/typescript-eslint/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript ESLint 5.0.0 릴리스.&lt;br&gt;
ESLint 8로 업데이트, Node 10 지원 종료.&lt;br&gt;
&lt;code&gt;eslint-recommended&lt;/code&gt; 규칙 갱신, 일부 규칙 변경, AST 갱신 등이 이뤄졌다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2021/10/eslint-v8.0.0-released&quot; title=&quot;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;ESLint v8.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safe-dom-manipulation-with-the-sanitizer-api&quot;&gt;Safe DOM manipulation with the Sanitizer API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/sanitizer/&quot; title=&quot;Safe DOM manipulation with the Sanitizer API&quot;&gt;web.dev/sanitizer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sanitizer API 제안(Proposal)을 소개.&lt;br&gt;
HTML 문자열을 새니타이즈 하는 API와 &lt;code&gt;Element#setHTML&lt;/code&gt;에서 설정하는 방법.&lt;br&gt;
DomPurify 등과는 다르게 새니타이즈한 HTML 문자열 자체가 아닌 HTMLElement을 반환하는 API로 설계돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-streams-everywhere-and-fetch-for-node-js-css-tricks&quot;&gt;Web Streams Everywhere (and Fetch for Node.js) | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/web-streams-everywhere-and-fetch-for-node-js/&quot; title=&quot;Web Streams Everywhere (and Fetch for Node.js) | CSS-Tricks&quot;&gt;css-tricks.com/web-streams-everywhere-and-fetch-for-node-js/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Streams API 소개.&lt;br&gt;
기본적인 사용 방법, Node 17부터 이용할 수 있는 Node.js Stream에서 변경하는 방법.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;have-single-page-apps-ruined-the-web-transitional-apps-with-rich-harris-nytimes-youtube&quot;&gt;Have Single-Page Apps Ruined the Web? | Transitional Apps with Rich Harris, NYTimes - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=860d8usGC0o&quot; title=&quot;Have Single-Page Apps Ruined the Web? | Transitional Apps with Rich Harris, NYTimes - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;860d8usGC0o&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SPA와 MPA에 대한 이야기.&lt;br&gt;
SPA에는 성능 등의 단점이 있고, MPA에는 네비게이션, 상태 관리 등에 단점이 있다.&lt;br&gt;
애플리케이션은 SPA와 MPA로 따로 분리할 수 있는게 아니며, Next.js나 SvelteKit 등은 양쪽의 장점을 취하는 접근법을 갖고 있다. 이러한 것을 TransitionalApps라고 부르자는 이야기.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/Rich_Harris/status/1446601175197880325&quot; title=&quot;Rich Harris on Twitter: &amp;amp;amp;amp;quot;i recorded a talk for https://t.co/aMw9AtvdSC — https://t.co/GETYZ6JW47 — about whether you should build multi-page apps (MPAs) or single-page apps (SPAs). spoiler: the answer is &amp;amp;amp;#039;neither&amp;amp;amp;#039;. or &amp;amp;amp;#039;both&amp;amp;amp;#039;, depending on your definitions. here&amp;amp;amp;#039;s the condensed tweet thread version:&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Rich Harris on Twitter: &amp;amp;quot;i recorded a talk for https://t.co/aMw9AtvdSC — https://t.co/GETYZ6JW47 — about whether you should build multi-page apps (MPAs) or single-page apps (SPAs). spoiler: the answer is &amp;#039;neither&amp;#039;. or &amp;#039;both&amp;#039;, depending on your definitions. here&amp;#039;s the condensed tweet thread version:&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukeed-tsm-typescript-module-loader&quot;&gt;lukeed/tsm: TypeScript Module Loader&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukeed/tsm&quot; title=&quot;lukeed/tsm: TypeScript Module Loader&quot;&gt;github.com/lukeed/tsm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js의 &lt;code&gt;--loader&lt;/code&gt;나 &lt;code&gt;--require&lt;/code&gt;에 대응한 TypeScript loader 라이브러리(ts-node는 지원 안하는가 봄?).&lt;br&gt;
ts-node와 같이 다룰 수 있는 도구. 내부에서는 esbuild를 사용하고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;core-manipulation-add-basic-trustedhtml-support-by-mgol-pull-request-4927-jquery-jquery&quot;&gt;Core:Manipulation: Add basic TrustedHTML support by mgol · Pull Request #4927 · jquery/jquery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/jquery/pull/4927&quot; title=&quot;Core:Manipulation: Add basic TrustedHTML support by mgol · Pull Request #4927 · jquery/jquery&quot;&gt;github.com/jquery/jquery/pull/4927&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery에 Trusted Types 지원이 구현됐다.&lt;br&gt;
jQuery 4.0에 포함될 예정.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues/4409&quot; title=&quot;Have Trusted Types API built directly into the jQuery Core Files · Issue #4409 · jquery/jquery&quot;&gt;Have Trusted Types API built directly into the jQuery Core Files · Issue #4409 · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-safevalues&quot;&gt;google/safevalues&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/safevalues&quot; title=&quot;google/safevalues&quot;&gt;github.com/google/safevalues&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Trutsted Types 기반으로 HTML, JavaScript, URL 문자열을 처리하는 헬퍼 라이브러리.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Oct 2021 12:42:43 +0900</pubDate>
        <link>https://jser.info/ko/2021/10/12/npm-8.0.0node.js-16-jquery-mobilejquery-ui-eslint-8/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/10/12/npm-8.0.0node.js-16-jquery-mobilejquery-ui-eslint-8/</guid>
        
        <category>jQuery</category>
        
        <category>security</category>
        
        <category>TypeScript</category>
        
        <category>Tools</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-10-04: Vite 2.6.0, Safari Technology Preview 133, TypeScript 4.5 Beta</title>
        <description>&lt;p&gt;JSer.info #560 - Vite 2.6.0가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본 minify 엔진을 &lt;a href=&quot;https://github.com/vitejs/vite/pull/5041&quot;&gt;terser에서 esbuild로 변경&lt;/a&gt;, &lt;a href=&quot;https://github.com/vitejs/vite/pull/4864&quot;&gt;script 요소의 &lt;code&gt;async&lt;/code&gt; 속성 지원&lt;/a&gt;.&lt;br&gt;
정적 사이트 제너에티어인 &lt;a href=&quot;https://astro.build/&quot;&gt;Astro&lt;/a&gt;의 컴포넌트 파일(&lt;code&gt;.astro&lt;/code&gt;) 지원.&lt;br&gt;
또, import 하고 있는 파일이 또 다른 파일을 import 하는 연쇄적인 경우에 이를 사전에 transform 하여 컴파일 대기 시간을 줄이는 최적화도 포함됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5037&quot; title=&quot;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&quot;&gt;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로 Vite 용 React 라이브러리가 &lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot;&gt;@vitejs/plugin-react&lt;/a&gt;으로 통합됐다.&lt;br&gt;
원래는 esbuild 기반의 &lt;a href=&quot;https://www.npmjs.com/package/@vitejs/plugin-react-refresh&quot;&gt;@vitejs/plugin-react-refresh&lt;/a&gt;와 Babel 기반의 &lt;a href=&quot;https://github.com/alloc/vite-react-jsx&quot;&gt;vite-react-jsx&lt;/a&gt;가 있었지만 이제는 &lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot;&gt;@vitejs/plugin-react&lt;/a&gt;를 사용하도록 권장한다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Safari Technology Preview 133가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&quot;&gt;Release Notes for Safari Technology Preview 133 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSS &lt;code&gt;calc()&lt;/code&gt; 내에서 &lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;를 지원한다.&lt;br&gt;
Specificity와 Order Of Appearance 전에 Layer를 평가하는 &lt;a href=&quot;https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&quot;&gt;CSS Cascade Layers&lt;/a&gt;를 실험적으로 지원, ES Proposal Stage3의 &lt;code&gt;Temporal&lt;/code&gt;를 플래그 붙여 구현하고 있다.&lt;br&gt;
그 외로 &lt;code&gt;BroadcastChannel&lt;/code&gt; 활성화, COOP와 COEP 헤더를 지원하며 &lt;a href=&quot;https://web.dev/coop-coep/&quot;&gt;&lt;code&gt;self.crossOriginIsolated&lt;/code&gt; 시에 &lt;code&gt;SharedArrayBuffer&lt;/code&gt;를 사용할 수 있도록&lt;/a&gt; 변경 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.5 Beta가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&quot;&gt;Announcing TypeScript 4.5 Beta - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScript 4.5 Beta에는 Node.js ESM 지원과 관련한 개선 사항이 대거 포함됐다.&lt;br&gt;
&lt;code&gt;module: node12&lt;/code&gt; 또는 &lt;code&gt;nodenext&lt;/code&gt; 설정 시 ESM 지원, &lt;code&gt;.mjs&lt;/code&gt;와 &lt;code&gt;.cjs&lt;/code&gt;에 대응하는 확장자로 &lt;code&gt;.mts&lt;/code&gt;와 &lt;code&gt;.cts&lt;/code&gt; 추가, &lt;code&gt;package.json&lt;/code&gt;의 &lt;code&gt;exports&lt;/code&gt; 필드에 대응한다.&lt;/p&gt;

&lt;p&gt;또, TypeScript가 빌트인으로 갖고 있는 lib의 타입 정의를 특정 버전의 dependencies로 잠그거나 &lt;a href=&quot;https://github.com/npm/rfcs/blob/main/implemented/0001-package-aliases.md&quot;&gt;Package Aliases&lt;/a&gt; 기능을 사용하여 별도의 타입 정의로 교체할 수 있도록 개선 됐다.&lt;/p&gt;

&lt;p&gt;예를 들어 다음과 같이 &lt;code&gt;tsconfig.json&lt;/code&gt;의 &lt;code&gt;lib&lt;/code&gt;로 &lt;code&gt;dom&lt;/code&gt;을 지정할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dom&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 경우 &lt;code&gt;@typescript/lib-dom&lt;/code&gt;라는 패키지가 &lt;code&gt;package.json&lt;/code&gt;의 &lt;code&gt;dependencies&lt;/code&gt;에 있는 경우 TypeScript는 해당 패키지의 타입 정의를 이용해 타입 체크를 시행한다.&lt;br&gt;
지금까지 &lt;code&gt;lib&lt;/code&gt;는 TypeScript에 포함돼 있던 타입 정의 였기 때문에 TypeScript의 버전을 갱신하면 타입 정의와 관련한 비호환 이슈가 발생했다.&lt;br&gt;
이제 &lt;code&gt;@typescript/lib-*&lt;/code&gt;의 교체 구조를 사용해 &lt;code&gt;lib&lt;/code&gt; 타입 정의를 특정 버전으로 고정할 수 있게 됐다.&lt;/p&gt;

&lt;p&gt;또, 다음과 같이  npm / yarn / pnpm에서 지원하고 있는 package alias 기능을 사용하여 &lt;code&gt;@typescript/lib-dom&lt;/code&gt;을 다른 타입 정의로 교체할 수도 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@typescript/lib-dom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm:@types/web&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/56134857/how-to-install-npm-package-under-alias-or-different-name&quot;&gt;How to install NPM package under alias or different name - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로 &lt;code&gt;Awaited&lt;/code&gt; 타입 추가, Top-Level await에 대응한 &lt;code&gt;module: es2022&lt;/code&gt; 지원, Condition Types에서 꼬리 재귀 최적화하도록 개선, import 명에 대한 &lt;code&gt;type&lt;/code&gt; modifier를 지원한다.&lt;br&gt;
또, ECMAScript Proposal의 Private Field Presence Checks, Import Assertions 지원도 추가됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vite-changelog-md-at-main-vitejs-vite&quot;&gt;vite/CHANGELOG.md at main · vitejs/vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&quot; title=&quot;vite/CHANGELOG.md at main · vitejs/vite&quot;&gt;github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#260-2021-09-29&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite 2.6.0 릴리스.&lt;br&gt;
기본 minify 엔진을 terser에서 esbuild로 변경, script 요소의 &lt;code&gt;async&lt;/code&gt; 속성 지원, &lt;code&gt;.astro&lt;/code&gt; 지원.&lt;br&gt;
또, import 하고 있는 파일이 또 다른 파일을 import 하는 연쇄적인 경우에 이를 사전에 transform 할 수 있는 구조도 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5041&quot; title=&quot;feat: default build.minify to esbuild by yyx990803 · Pull Request #5041 · vitejs/vite&quot;&gt;feat: default build.minify to esbuild by yyx990803 · Pull Request #5041 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/4864&quot; title=&quot;feat: async script module support, close #3163 by patak-js · Pull Request #4864 · vitejs/vite&quot;&gt;feat: async script module support, close #3163 by patak-js · Pull Request #4864 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5038&quot; title=&quot;feat: support .astro files by drwpow · Pull Request #5038 · vitejs/vite&quot;&gt;feat: support .astro files by drwpow · Pull Request #5038 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vitejs/vite/pull/5037&quot; title=&quot;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&quot;&gt;feat: pre transform direct imports before requests hit the server by yyx990803 · Pull Request #5037 · vitejs/vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-133-webkit&quot;&gt;Release Notes for Safari Technology Preview 133 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&quot; title=&quot;Release Notes for Safari Technology Preview 133 | WebKit&quot;&gt;webkit.org/blog/11975/release-notes-for-safari-technology-preview-133/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 133 릴리스.&lt;br&gt;
CSS의 &lt;code&gt;calc()&lt;/code&gt; 내에서 &lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt; 지원.&lt;br&gt;
CSS Cascade Layers를 실험적으로 지원, ES Proposal Stage3의 &lt;code&gt;Temporal&lt;/code&gt;를 플래그 붙여 구현.&lt;br&gt;
&lt;code&gt;BroadcastChannel&lt;/code&gt; 활성화, COOP와 COEP 헤더를 지원하며, &lt;code&gt;self.crossOriginIsolated&lt;/code&gt; 시에 &lt;code&gt;SharedArrayBuffer&lt;/code&gt;를 사용할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-5-beta-typescript&quot;&gt;Announcing TypeScript 4.5 Beta - TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&quot; title=&quot;Announcing TypeScript 4.5 Beta - TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.5 Beta 릴리스.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;module: node12&lt;/code&gt; 또는 &lt;code&gt;nodenext&lt;/code&gt; 설정 시 ESM 지원, &lt;code&gt;.mjs&lt;/code&gt;와 &lt;code&gt;.cjs&lt;/code&gt;에 대응하는 확장자로 &lt;code&gt;.mts&lt;/code&gt;와 &lt;code&gt;.cts&lt;/code&gt; 추가, &lt;code&gt;package.json&lt;/code&gt;의 &lt;code&gt;exports&lt;/code&gt; 필드에 대응.&lt;br&gt;
TypeScript가 빌트인으로 갖고 있는 &lt;code&gt;lib&lt;/code&gt;의 타입 정의를 특정 버전의 &lt;code&gt;dependencies&lt;/code&gt;로 락(lock)할 수 있도록 개선.&lt;br&gt;
&lt;code&gt;Awaited&lt;/code&gt; 타입 추가, Top-Level await에 대응한 &lt;code&gt;module: es2022&lt;/code&gt; 지원, Condition Types에서 꼬리 재귀 최적화하도록 개선.&lt;br&gt;
import 명에 대한 &lt;code&gt;type&lt;/code&gt; modifier 지원, ES Proposal의 Private Field Presence Checks, Import Assertions 지원&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;passport-changelog-md-at-master-jaredhanson-passport&quot;&gt;passport/CHANGELOG.md at master · jaredhanson/passport&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jaredhanson/passport/blob/master/CHANGELOG.md#050---2021-09-23&quot; title=&quot;passport/CHANGELOG.md at master · jaredhanson/passport&quot;&gt;github.com/jaredhanson/passport/blob/master/CHANGELOG.md#050---2021-09-23&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Passport 0.5 릴리스.&lt;br&gt;
비호환 변경 사항으로 &lt;code&gt;IncomingMessage&lt;/code&gt;를 prototype 확장하여 &lt;code&gt;login()&lt;/code&gt; 등을 추가했던 monkey patch가 삭제됐다.&lt;br&gt;
대신에 &lt;code&gt;app.use(passport.initialize())&lt;/code&gt; 처럼 middleware로 확장하도록 변경됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaredhanson/passport/compare/v0.4.1...v0.5.0&quot; title=&quot;Comparing v0.4.1...v0.5.0 · jaredhanson/passport&quot;&gt;Comparing v0.4.1...v0.5.0 · jaredhanson/passport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-66-react-native&quot;&gt;Announcing React Native 0.66 · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/10/01/version-066&quot; title=&quot;Announcing React Native 0.66 · React Native&quot;&gt;reactnative.dev/blog/2021/10/01/version-066&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Native&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.66 릴리스.&lt;br&gt;
Android의 새로운 Bluetooth 권한에 대응, M1 mac 지원 개선, Hermes 0.9.0로 갱신.&lt;br&gt;
Nightly 빌드가 &lt;code&gt;@nightly&lt;/code&gt;의 dist-tag로 공개 되도록 되었으며 &lt;code&gt;yarn upgrade react-native@nightly&lt;/code&gt;로 설치할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-user-device-characteristics-report-chrome-developers&quot;&gt;Chrome user device characteristics report - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/en/blog/device-characteristics/&quot; title=&quot;Chrome user device characteristics report - Chrome Developers&quot;&gt;developer.chrome.com/en/blog/device-characteristics/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 사용 통계 데이터로 부터 RAM, 코어 수, 네트워크 접속 종류, WebGL 하드웨어 지원 여부에 대한 데이터를 나라별로 정리 및 공개한 보고서. 국가 데이터로는 BR, DE, EG, GB, ID, IN, JP, NG, US, ZA을 제공한다.&lt;br&gt;
또, Android, Windows, ChromeOS 별 통계 데이터도 정리돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1BPz0UnQGotX0dACmJbHbbXFJa38jxmKhhNQ2RLj5Gms/edit&quot; title=&quot;Chrome User Device Characteristics - Google ドキュメント&quot;&gt;Chrome User Device Characteristics - Google 문서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;explore-javascript-dependencies-with-lighthouse-treemap&quot;&gt;Explore JavaScript Dependencies With Lighthouse Treemap&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sia.codes/posts/lighthouse-treemap/&quot; title=&quot;Explore JavaScript Dependencies With Lighthouse Treemap&quot;&gt;sia.codes/posts/lighthouse-treemap/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse v7.5.0에 추가된 Lighthouse Treemap 소개.&lt;br&gt;
Source Map을 기반으로 분석한 페이지의 파일 크기를 살펴볼 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · GoogleChrome/lighthouse&quot;&gt;Release v7.5.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;guidelines-for-choosing-a-node-js-framework-simon-plenderleith&quot;&gt;Guidelines for choosing a Node.js framework - Simon Plenderleith&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://simonplend.com/guidelines-for-choosing-a-node-js-framework/&quot; title=&quot;Guidelines for choosing a Node.js framework - Simon Plenderleith&quot;&gt;simonplend.com/guidelines-for-choosing-a-node-js-framework/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 프레임워크를 고를 때 생각하는 것, 살펴봐야 할 점 정리.&lt;br&gt;
어떤 프레임워크를 선택해야 하는지는 컨텍스트에 따라 다르다.&lt;br&gt;
때문에 유스케이스, 프레임워크 작성 방법, Promise 대응, 공식 문서, 커뮤니티, 프로젝트 건전성 등을 함께 살펴봐야 한다고 말하다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-rules-for-migrating-projects-from-commonjs-to-esm&quot;&gt;ESLint rules for migrating projects from CommonJS to ESM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/Jaid/164668c0151ae09d2bc81be78a203dd5&quot; title=&quot;ESLint rules for migrating projects from CommonJS to ESM&quot;&gt;gist.github.com/Jaid/164668c0151ae09d2bc81be78a203dd5&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CommonJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CommonJS가 아닌 ECMAScript Modules를 사용 할 때 관계있는 ESLint 규칙과 설정 정리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-write-about-web-performance-read-the-tea-leaves&quot;&gt;How to write about web performance | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2021/09/12/how-to-write-about-web-performance/&quot; title=&quot;How to write about web performance | Read the Tea Leaves&quot;&gt;nolanlawson.com/2021/09/12/how-to-write-about-web-performance/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;웹 퍼포먼스를 주제로 한 글쓰기의 어려움과 벤치마크에 대하여.&lt;br&gt;
브라우저의 퍼포먼스를 다룰 때 어떤 부분을 신경 쓰면서 작성하면 좋은지에 대해서 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;accessible-palette-create-color-systems-with-consistent-lightness-and-contrast&quot;&gt;Accessible Palette: Create color systems with consistent lightness and contrast&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://accessiblepalette.com/&quot; title=&quot;Accessible Palette: Create color systems with consistent lightness and contrast&quot;&gt;accessiblepalette.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;접근성을 고려하여 명암비 등의 색상을 선택할 수 있도록 도와주는 컬러 팔레트.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wildbit.com/blog/2021/09/16/accessible-palette-stop-using-hsl-for-color-systems&quot; title=&quot;Accessible Palette: stop using HSL for color systems | Wildbit&quot;&gt;Accessible Palette: stop using HSL for color systems | Wildbit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dolanmiu-docx-easily-generate-docx-files-with-js-ts-with-a-nice-declarative-api-works-for-node-and-on-the-browser&quot;&gt;dolanmiu/docx: Easily generate .docx files with JS/TS with a nice declarative API. Works for Node and on the Browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dolanmiu/docx&quot; title=&quot;dolanmiu/docx: Easily generate .docx files with JS/TS with a nice declarative API. Works for Node and on the Browser.&quot;&gt;github.com/dolanmiu/docx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript로 docx 파일을 생성할 수 있는 라이브러리.&lt;br&gt;
빌더 함수를 구성하는 방식으로 컨텐츠를 작성할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;can-i-include-a-tag-to-a-tag-based-on-html-spec-whatwg&quot;&gt;Can I include a tag to a tag? Based on HTML Spec WHATWG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://caninclude.glitch.me/&quot; title=&quot;Can I include a tag to a tag? Based on HTML Spec WHATWG&quot;&gt;caninclude.glitch.me/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML 요소 간 부모 / 자식 관계가 성립(허용)할 수 있는지 검사할 수 있는 도구.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Oct 2021 21:21:35 +0900</pubDate>
        <link>https://jser.info/ko/2021/10/04/vite-2.6.0-safari-technology-preview-133-typescript-4.5-beta/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/10/04/vite-2.6.0-safari-technology-preview-133-typescript-4.5-beta/</guid>
        
        <category>Chrome</category>
        
        <category>performance</category>
        
        <category>node.js</category>
        
        <category>opinion</category>
        
        <category>Tools</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-28: Lit 2, Gatsby 4 beta, Partytown(Third-Party Script into Worker)</title>
        <description>&lt;p&gt;JSer.info #559 - Web Components를 다루는 라이브러리인 Lit 2가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lit.dev/blog/2021-09-21-announcing-lit-2/&quot;&gt;Announcing Lit 2 stable release – Lit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nfb779XIhsU&quot;&gt;Lit 2.0 Release Livestream - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lit 2는 지금까지 별도 패키지로 존재한 LitElement 2.x와 lit-html 1.x을 통합하고 &lt;code&gt;lit&lt;/code&gt;이라는 새로운 패키지를 구성했다.&lt;/p&gt;

&lt;p&gt;class 기반의 Directives API, 비동기 Directives, Reactive Controllers가 추가됐다.&lt;br&gt;
요소 전체에 작용하는 기능을 표현할 수 있는 Element expressions, 변수를 이용해 태그 명 등으로 사용할 수 있는 Static expressions 등도 추가됐다.&lt;br&gt;
또, SSR을 실험적으로 지원한다.&lt;/p&gt;

&lt;p&gt;LitElement 2.x와 lit-html 1.x에서의 업그레이드 가이드도 공개돼 있으니 참고하길 바란다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lit.dev/docs/releases/upgrade/&quot;&gt;Upgrade guide – Lit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Gatsby 4 베타 버전이 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/gatsby-4/&quot;&gt;Introducing Gatsby 4 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/conceptual/rendering-options/&quot;&gt;rendering mode&lt;/a&gt;를 통해 HTML 생성을 실제 접근할 때 까지 미루는 Deferred Static Generation(DSG)와 Server Side Rendering(SSR)을 지원한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/&quot;&gt;Deferred Static Generation&lt;/a&gt;(DSG)는 Next.js의 &lt;a href=&quot;https://nextjs.org/docs/basic-features/data-fetching#incremental-static-regeneration&quot;&gt;Incremental Static Regeneration&lt;/a&gt;(ISR)와 비슷하게 첫 요청이 온 시점에 최초 빌드하여 접근 빈도가 낮은 컨텐츠를 포함하는 사이트의 배포(deploy)에 걸리는 시간을 단축하는데 목적이 있는 구조다.&lt;br&gt;
DSG에서는 배포 시에 데이터 스냅샷을 만들고 요청 시에 스냅샷을 토대로 HTML 컨텐츠를 생성하여 응답한다. 때문에 DSG는 ISR와는 요청 시 처리가 다르며 서버로 부터 외부 리소스를 다시 가져오는 게 아니라 어디까지나 배포 시 생성된 스냅샷을 참조하여 빌드하도록 돼 있다.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;While DSG may look similar on the surface, what Gatsby does is that it takes a snapshot of the data at initial build time and creates lightweight render engines that are capable of building a page on demand. However, all data was already sourced at initial build time!&lt;/p&gt;&amp;mdash; Sid (@chatsidhartha) &lt;a href=&quot;https://twitter.com/chatsidhartha/status/1442352346441281540?ref_src=twsrc%5Etfw&quot;&gt;September 27, 2021&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; 

&lt;p&gt;그 외로는 parallel query에서의 빌드 시간 개선이 포함됐다.&lt;br&gt;
이와 함께 v3에서의 마이그레이션 가이드도 공개됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v4.gatsbyjs.com/docs/reference/release-notes/migrating-from-v3-to-v4/&quot;&gt;Migrating from v3 to v4 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Partytown은 서드 파티 스크립트를 WebWorker로 동작 시켜 서드 파티 스크립트에 의한 메인 스레드 블로킹을 피할 수 있도록 고안된 라이브러리다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BuilderIO/partytown&quot;&gt;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebWorker에는 DOM API 등이 없기 때문에 특별한 처리 없이 서드 파티 라이브러리르 Worker로 동작 시키면 에러가 발생한다.&lt;br&gt;
따라서 라이브러리는 다음과 같은 구조로 DOM API 등을 포함하는 서드 파티 라이브러리를 Worker 내에서 실행한다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Worker 내에서 DOM 조작을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy&lt;/a&gt; 한다.&lt;/li&gt;
&lt;li&gt;DOM 조작을 커맨드 표현하여 동기 XHR로 통신(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests#example_synchronous_http_request_from_a_worker&quot;&gt;Worker 내에서 동기 XHR을 이용&lt;/a&gt;할 수 있다)&lt;/li&gt;
&lt;li&gt;이 통신을 Service Worker에서 가로채(intercept) 명령어를 가져온다.&lt;/li&gt;
&lt;li&gt;가져온 명령어를 Service Worker와 메인스레드 간 비동기적으로 주고받아 DOM 조작 결과를 가져온다.&lt;/li&gt;
&lt;li&gt;DOM 조작 결과를 요청의 시발점인 Worker에 반환한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위와 같은 구조로 Worker 내에서 동작하는 서드 파티 라이브러리 관점에서 동기적으로 DOM을 조작하는 것으로 보이기 때문에 코드 변경 없이 동작 가능하다.&lt;/p&gt;

&lt;p&gt;구조에 대한 자세한 내용은 다음 글에 소개돼 있으니 참고하길 바란다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp&quot;&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-lit-2-stable-release-lit&quot;&gt;Announcing Lit 2 stable release – Lit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lit.dev/blog/2021-09-21-announcing-lit-2/&quot; title=&quot;Announcing Lit 2 stable release – Lit&quot;&gt;lit.dev/blog/2021-09-21-announcing-lit-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lit 2 릴리스.&lt;br&gt;
class 기반 Directives API, 비동기 Directives, Reactive Controllers 추가.&lt;br&gt;
요소 전체에 작용하는 기능을 표현할 수 있는 Element expressions, 태그 명 등에 변수를 사용할 수 있도록 하는 Static expressions 추가.&lt;br&gt;
또, 실험적으로 SSR을 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-10-0-current-node-js&quot;&gt;Node v16.10.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.10.0/&quot; title=&quot;Node v16.10.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.10.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.10.0 릴리스.&lt;br&gt;
커넥션 별 최대 요청수를 제한하는 &lt;code&gt;server.maxRequestsPerSocket&lt;/code&gt; 옵션 추가.&lt;br&gt;
&lt;code&gt;$HOME/.node_modules&lt;/code&gt;등을 탐색하지 않는 &lt;code&gt;--no-global-search-paths&lt;/code&gt; 플래그 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-15-0-0-electron&quot;&gt;Electron 15.0.0 | Electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-15-0/&quot; title=&quot;Electron 15.0.0 | Electron&quot;&gt;www.electronjs.org/blog/electron-15-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 15.0.0 릴리스.&lt;br&gt;
Electron 15부터 8 주간 별 메이저 업데이트된다.&lt;br&gt;
Chromium 94, Node.js 16.5.0, V8 9.4로 각각 갱신.&lt;br&gt;
&lt;code&gt;nativeWindowOpen&lt;/code&gt;의 기본값을 &lt;code&gt;true&lt;/code&gt;로 변경, &lt;code&gt;safeStorage&lt;/code&gt; API 추가.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v15.0.0&quot; title=&quot;Release electron v15.0.0 · electron/electron&quot;&gt;Release electron v15.0.0 · electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/docs/latest/api/safe-storage/&quot; title=&quot;safeStorage | Electron&quot;&gt;safeStorage | Electron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-95-beta-secure-payment-confirmation-webassembly-exception-handling-and-more&quot;&gt;Chromium Blog: Chrome 95 Beta: Secure Payment Confirmation, WebAssembly Exception Handling and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/chrome-95-beta-secure-payment.html&quot; title=&quot;Chromium Blog: Chrome 95 Beta: Secure Payment Confirmation, WebAssembly Exception Handling and More&quot;&gt;blog.chromium.org/2021/09/chrome-95-beta-secure-payment.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95 beta 릴리스.&lt;br&gt;
Origin Trial로 Access Handle를 File System Access API에 추가.&lt;br&gt;
Performance Observer에 &lt;code&gt;droppedEntriesCount&lt;/code&gt; 추가, EyeDropper API 추가, &lt;code&gt;self.reportError()&lt;/code&gt; 추가, &lt;code&gt;URLPattern&lt;/code&gt; 추가.&lt;br&gt;
또, FTP URL 지원 종료, 숫자로 끝나는 IPv4 주소가 아닌 호스트명 지원을 폐지했다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;miniflare-is-now-an-official-part-of-the-workers-ecosystem-cloudflare-miniflare-e1cb97f&quot;&gt;Miniflare is now an official part of the Workers ecosystem 🎉 · cloudflare/miniflare@e1cb97f&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cloudflare/miniflare/commit/e1cb97f9891b2818f4be5715ee467668a39f7f80&quot; title=&quot;Miniflare is now an official part of the Workers ecosystem 🎉 · cloudflare/miniflare@e1cb97f&quot;&gt;github.com/cloudflare/miniflare/commit/e1cb97f9891b2818f4be5715ee467668a39f7f80&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Workers의 simulator인 Miniflare가 Cloudflare 공식 파트로 전환됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es-module-shims-changelog-md-at-1-0-0-guybedford-es-module-shims&quot;&gt;es-module-shims/CHANGELOG.md at 1.0.0 · guybedford/es-module-shims&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-shims/blob/1.0.0/CHANGELOG.md&quot; title=&quot;es-module-shims/CHANGELOG.md at 1.0.0 · guybedford/es-module-shims&quot;&gt;github.com/guybedford/es-module-shims/blob/1.0.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Module Shims 1.0.0 릴리스.&lt;br&gt;
lexer가 Wasm를 사용하고 있었기 때문에 &lt;code&gt;unsafe-eval&lt;/code&gt;의 CSP 설정이 필요했으나 asm.js 빌드를 사용해 기본적으로 CSP에 대응했다.&lt;br&gt;
성능 면에서는 크게 달라진 점은 없지만 Safari 환경에서는 asm.js 버전이 조금 더 빠르게 측정됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-shims/pull/193&quot; title=&quot;feat: make the CSP asm.js build the main entry by guybedford · Pull Request #193 · guybedford/es-module-shims&quot;&gt;feat: make the CSP asm.js build the main entry by guybedford · Pull Request #193 · guybedford/es-module-shims&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guybedford/es-module-lexer/pull/86&quot; title=&quot;feat: asm.js build by guybedford · Pull Request #86 · guybedford/es-module-lexer&quot;&gt;feat: asm.js build by guybedford · Pull Request #86 · guybedford/es-module-lexer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/content-security-policy/blob/master/proposals/CSP.md&quot; title=&quot;content-security-policy/CSP.md at master · WebAssembly/content-security-policy&quot;&gt;content-security-policy/CSP.md at master · WebAssembly/content-security-policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manifest-v2-support-timeline-chrome-developers&quot;&gt;Manifest V2 support timeline - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/docs/extensions/mv3/mv2-sunset/&quot; title=&quot;Manifest V2 support timeline - Chrome Developers&quot;&gt;developer.chrome.com/docs/extensions/mv3/mv2-sunset/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 확장 manifest v3 로드맵.&lt;br&gt;
2022년 1월 17일 부로 manifest v2 기반의 확장은 새롭게 등록 신청할 수 없다.&lt;br&gt;
2023년 1월 부로 기존 v2 확장을 갱신할 수도 없게 된다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v8-0-0-rc-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v8.0.0-rc.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2021/09/eslint-v8.0.0-rc.0-released&quot; title=&quot;ESLint v8.0.0-rc.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2021/09/eslint-v8.0.0-rc.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint v8.0.0-rc.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/8.0.0/user-guide/migrating-to-8.0.0&quot; title=&quot;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v8.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stimulus-3&quot;&gt;Stimulus 3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://world.hey.com/hotwired/stimulus-3-c438d432&quot; title=&quot;Stimulus 3&quot;&gt;world.hey.com/hotwired/stimulus-3-c438d432&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Stimulus 3 릴리스.&lt;br&gt;
패키지 명이 &lt;code&gt;stimulus&lt;/code&gt;에서 &lt;code&gt;@hotwired/stimulus&lt;/code&gt;로 변경됐다.&lt;br&gt;
Action Parameters 지원, 기본값 지원, &lt;code&gt;debug&lt;/code&gt; 옵션 추가.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hotwired/stimulus/compare/v2.0.0...v3.0.0&quot; title=&quot;Comparing v2.0.0...v3.0.0 · hotwired/stimulus&quot;&gt;Comparing v2.0.0...v3.0.0 · hotwired/stimulus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-gatsby-4-gatsby&quot;&gt;Introducing Gatsby 4 | Gatsby&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/gatsby-4/&quot; title=&quot;Introducing Gatsby 4 | Gatsby&quot;&gt;www.gatsbyjs.com/gatsby-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Gatsby 4 베타 릴리스.&lt;br&gt;
실제 요청이 있을 때 까지 HTML 생성을 지연시키는 Deferred Static Generation(DSG) 지원, Server Side Rendering(SSR) 지원, parallel query의 빌드 시간 개선&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/matfrana/status/1442225069158248449&quot; title=&quot;Matteo Frana on Twitter: &amp;amp;amp;amp;quot;@chatsidhartha Can you explain me briefly the differences between Gatsby DSG and ISR? Thank you! I&amp;amp;amp;#039;m looking forward to testing Gatsby 4.&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Matteo Frana on Twitter: &amp;amp;quot;@chatsidhartha Can you explain me briefly the differences between Gatsby DSG and ISR? Thank you! I&amp;#039;m looking forward to testing Gatsby 4.&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/blog/2021/09/16/run-gatsby-4-with-dsg-and-ssr-on-netlify-today/&quot; title=&quot;Run Gatsby 4 with DSG and SSR on Netlify today | Netlify&quot;&gt;Run Gatsby 4 with DSG and SSR on Netlify today | Netlify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blazor-developers-can-now-create-custom-elements-render-components-from-javascript-visual-studio-magazine&quot;&gt;Blazor Developers Can Now Create Custom Elements, Render Components from JavaScript -- Visual Studio Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://visualstudiomagazine.com/articles/2021/09/16/aspnet-core-updates.aspx&quot; title=&quot;Blazor Developers Can Now Create Custom Elements, Render Components from JavaScript -- Visual Studio Magazine&quot;&gt;visualstudiomagazine.com/articles/2021/09/16/aspnet-core-updates.aspx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;.net&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C#&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;.NET 6 RC1에서 Blazor가 Custom Element를 지원한다. 또, Blazor 컴포넌트를 Custom Element로도 사용할 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-6-release-candidate-1/&quot; title=&quot;Announcing .NET 6 Release Candidate 1 - .NET Blog&quot;&gt;Announcing .NET 6 Release Candidate 1 - .NET Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aspnet/AspLabs/tree/main/src/BlazorCustomElements&quot; title=&quot;AspLabs/src/BlazorCustomElements at main · aspnet/AspLabs&quot;&gt;AspLabs/src/BlazorCustomElements at main · aspnet/AspLabs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fullstack-app-with-typescript-next-js-prisma-graphql&quot;&gt;Fullstack app with TypeScript, Next.js, Prisma &amp;amp; GraphQL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.prisma.io/blog/fullstack-nextjs-graphql-prisma-oklidw1rhw&quot; title=&quot;Fullstack app with TypeScript, Next.js, Prisma &amp;amp;amp; GraphQL&quot;&gt;www.prisma.io/blog/fullstack-nextjs-graphql-prisma-oklidw1rhw&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js / Prisma / GraphQL 기반 애플리케이션 개발을 테마로 한 튜토리얼 글.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-react-18-yagmur-cetin-tas&quot;&gt;What&amp;#039;s new in React 18? | Yagmur Cetin Tas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yagmurcetintas.com/journal/whats-new-in-react-18&quot; title=&quot;What&amp;amp;#039;s new in React 18? | Yagmur Cetin Tas&quot;&gt;yagmurcetintas.com/journal/whats-new-in-react-18&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 18에서 예정돼 있는 변경 사항의 개요를 정리한 글.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;get-your-head-straight-speaker-deck&quot;&gt;Get Your Head Straight - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/csswizardry/get-your-head-straight&quot; title=&quot;Get Your Head Straight - Speaker Deck&quot;&gt;speakerdeck.com/csswizardry/get-your-head-straight&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;내 style이나 script를 작성할 때 발생할 수 있는 다양한 성능 문제와 해결 방법을 제시하고 이와 관련된 성능 문제를 쉽게 발견할 수 있도록 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 내용을 표시해 주는 ct.css를 소개한다.&lt;br&gt;
ct.css는 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 내 작성돼 있는 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;나 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;이 3rd party 인지 또, 블록킹 하고 있진 않은지 알아보기 쉽게 표시해준다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://csswizardry.com/ct/&quot; title=&quot;🧠 ct.css – Let’s take a look inside your &amp;amp;amp;lt;head&amp;amp;amp;gt;&quot;&gt;🧠 ct.css – Let’s take a look inside your &amp;lt;head&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vite-packages-plugin-react-at-main-vitejs-vite&quot;&gt;vite/packages/plugin-react at main · vitejs/vite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/plugin-react&quot; title=&quot;vite/packages/plugin-react at main · vitejs/vite&quot;&gt;github.com/vitejs/vite/tree/main/packages/plugin-react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite의 React Plugin.&lt;br&gt;
&lt;code&gt;@vitejs/plugin-react-refresh&lt;/code&gt;를 대체하는 플러그인.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;builderio-partytown-relocate-resource-intensive-third-party-scripts-off-of-the-main-thread-and-into-a-web-worker&quot;&gt;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/BuilderIO/partytown&quot; title=&quot;BuilderIO/partytown: Relocate resource intensive third-party scripts off of the main thread and into a web worker. 🎉&quot;&gt;github.com/BuilderIO/partytown&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;서드 파티 스크립트를 Worker 내에서 실행하여 메인스레드의 블록킹을 방지하는 라이브러리.&lt;br&gt;
Worker 내에서 DOM 조작을 Proxy 하고 동기 XHR로 통신, Service Worker에서 이 통신을 가로채 메인스레드와 비동기로 작업을 수행하고 그 결과를 다시 Worker에 반환하는 방식.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp&quot; title=&quot;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&quot;&gt;Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gvergnaud-ts-pattern-the-exhaustive-pattern-matching-library-for-typescript-with-smart-type-inference&quot;&gt;gvergnaud/ts-pattern: 🎨 The exhaustive Pattern Matching library for TypeScript, with smart type inference.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gvergnaud/ts-pattern&quot; title=&quot;gvergnaud/ts-pattern: 🎨 The exhaustive Pattern Matching library for TypeScript, with smart type inference.&quot;&gt;github.com/gvergnaud/ts-pattern&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 친화적으로 고안된 패턴 매칭 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cesanta-elk-a-low-footprint-javascript-engine-for-embedded-systems&quot;&gt;cesanta/elk: A low footprint JavaScript engine for embedded systems&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cesanta/elk&quot; title=&quot;cesanta/elk: A low footprint JavaScript engine for embedded systems&quot;&gt;github.com/cesanta/elk&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;임베디드 용 작은 크기의 JavaScript 엔진&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 27 Sep 2021 23:10:06 +0900</pubDate>
        <link>https://jser.info/ko/2021/09/27/lit-2-gatsby-4-beta-partytownthird-party-script-into-worker/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/09/27/lit-2-gatsby-4-beta-partytownthird-party-script-into-worker/</guid>
        
        <category>React</category>
        
        <category>WebComponents</category>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-21: Deno 1.14 릴리스, Chrome의 User-Agent 문자열 축소 일정, Vue 2에서 Vue 3로의 이전</title>
        <description>&lt;p&gt;JSer.info #558 - Deno 1.14가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/v1.14&quot;&gt;Deno 1.14 Release Notes | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-14-0&quot;&gt;Deno 1.14.0이 릴리스! 새로운 기능, 변경 사항 소개&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;deno lint&lt;/code&gt;와 &lt;code&gt;deno fmt&lt;/code&gt;가 옵션을 지원하여 quote나 indent 등의 설정을 가능하도록 개선.&lt;br&gt;
&lt;code&gt;URLPattern&lt;/code&gt; 지원, &lt;code&gt;fetch&lt;/code&gt;에서 Mutual TLS를 지원한다.&lt;br&gt;
또, unstable한 기능으로 File locking APIs 지원이 추가됐다.&lt;br&gt;
그 외로 URL parsing과 &lt;code&gt;std/http&lt;/code&gt; 모듈의 성능 개선이 이뤄졌다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Chrome의 User-Agent 문자열 축소 일정이 다시 공개됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&quot;&gt;Chromium Blog: User-Agent Reduction Origin Trial and Dates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;navigator.userAgent&lt;/code&gt;, &lt;code&gt;@navigator.appVersion&lt;/code&gt;, &lt;code&gt;navigator.platform&lt;/code&gt; 등의 장보량을 줄이거나 고정하여 핑거프린팅과 스니핑 등으로 악용될 리스크를 줄이는데 목적이 있다. 과거 사용해오던 API는 비추천되며 대신 &lt;a href=&quot;https://github.com/WICG/ua-client-hints&quot;&gt;User Agent Client Hints&lt;/a&gt;를 사용하길 권고한다.&lt;/p&gt;

&lt;p&gt;UA 문자열 축소 등은 다음과 같은 일정으로 진행된다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome 92: 콘솔에서 경고 출력&lt;/li&gt;
&lt;li&gt;Chrome 95에서 100: Origin Trial 실시 &lt;/li&gt;
&lt;li&gt;Chrome 100: Reverse Origin Trial 실시&lt;/li&gt;
&lt;li&gt;Chrome 101에서 110: 축소를 단계적으로 실행&lt;/li&gt;
&lt;li&gt;Chrome 113: 완료&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&quot;&gt;Vue2 기반 프로젝트를 Vue3로 이전하다&lt;/a&gt;(일본어)에는 &lt;code&gt;@vue/compat&lt;/code&gt;를 사용하여 Vue2로 작성된 애플리케이션을 Vue3로 점차 이전하는 방법을 이야기한다.&lt;/p&gt;

&lt;p&gt;Vue2 애플리케이션에 &lt;code&gt;@vue/compat&lt;/code&gt;과 &lt;code&gt;eslint-plugin-vue&lt;/code&gt;를 도입하고 경고 메시지를 살펴보면서 진행하여 최종적으로 &lt;code&gt;@vue/compat&lt;/code&gt;를 제거까지의 흐름을 소개한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v3.ja.vuejs.org/guide/migration/migration-build.html#%E6%A6%82%E8%A6%81&quot;&gt;移行ビルド | Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;material-ui-is-now-mui-mui&quot;&gt;Material-UI is now MUI! - MUI&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mui.com/blog/material-ui-is-now-mui/&quot; title=&quot;Material-UI is now MUI! - MUI&quot;&gt;mui.com/blog/material-ui-is-now-mui/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;머티리얼 디자인의 React 구현으로 시작한 Material-UI가 MUI로 이름이 변경됐다.&lt;br&gt;
이에 따라서 패지키 역시 &lt;code&gt;@material-ui&lt;/code&gt;에서 &lt;code&gt;@mui&lt;/code&gt;로 변경됐고 웹사이트도 개편됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;is-nuxt-3-ready&quot;&gt;Is Nuxt 3 Ready?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nuxtjs.org/v3/&quot; title=&quot;Is Nuxt 3 Ready?&quot;&gt;nuxtjs.org/v3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3는 2021년 10월 12일에 릴리스될 예정이다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-14-release-notes-deno-blog&quot;&gt;Deno 1.14 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.14&quot; title=&quot;Deno 1.14 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.14&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.14 릴리스.&lt;br&gt;
&lt;code&gt;deno lint&lt;/code&gt;와 &lt;code&gt;deno fmt&lt;/code&gt;에서 옵션 지원, &lt;code&gt;URLPattern&lt;/code&gt; 지원, &lt;code&gt;fetch&lt;/code&gt;에서 Mutual TLS 지원.&lt;br&gt;
또, unstable한 기능으로 File locking APIs 지원, URL parsing과 &lt;code&gt;std/http&lt;/code&gt; 모듈 성능 개선.&lt;br&gt;
그 외로 TypeScript 44, V8 9.4로 갱신됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/deno-release-note-1-14-0&quot; title=&quot;Deno 1.14.0 릴리스! 새로운 기능, 변경 사항 소개&quot;&gt;Deno 1.14.0 릴리스! 새로운 기능, 변경 사항 소개&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-user-agent-reduction-origin-trial-and-dates&quot;&gt;Chromium Blog: User-Agent Reduction Origin Trial and Dates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&quot; title=&quot;Chromium Blog: User-Agent Reduction Origin Trial and Dates&quot;&gt;blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome의 User-Agent 변경 일정 공개.&lt;br&gt;
Chrome 95 부터 Origin Trial 기반으로 옵트인으로 도입, Chrome 100 부터 서서히 축소된 포멧으로 전환, Chrome 113에서 UA와 관련 API의 데이터 축소 완료.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-cybozu-inside-out&quot;&gt;프런트엔드 스택 개편을 위해 DevTools를 만들어 개발 환경 개선하기 - Cybozu Inside Out | 사이보으즈 엔지니어 블로그(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cybozu.io/entry/2021/09/13/080000&quot; title=&quot;프런트엔드 스택 개편을 위해 DevTools를 만들어 개발 환경 개선하기 - Cybozu Inside Out | 사이보으즈 엔지니어 블로그(&quot;&gt;blog.cybozu.io/entry/2021/09/13/080000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Closure Tools 용 DevTools를 왜 개발했고 어떻게 활용하는지 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-chrome&quot;&gt;Vue의 리렌더링된 컴포넌트를 하이라이트하는 Chrome 확장을 만들었다(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/yuichkun/articles/e4e8c7e633439c&quot; title=&quot;Vue의 리렌더링된 컴포넌트를 하이라이트하는 Chrome 확장을 만들었다&quot;&gt;zenn.dev/yuichkun/articles/e4e8c7e633439c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React DevTools 처럼 렌더링된 요소를 하이라이트하는 Vue 용 디버깅 확장 소개&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yuichkun/vue-devtool-flash-updates&quot; title=&quot;yuichkun/vue-devtool-flash-updates: A handy tool that highlights re-rendered components.&quot;&gt;yuichkun/vue-devtool-flash-updates: A handy tool that highlights re-rendered components.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue2-vue3&quot;&gt;Vue2 기반 프로젝트를 Vue3로 이전하다(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&quot; title=&quot;Vue2 기반 프로젝트를 Vue3로 이전하다&quot;&gt;zenn.dev/azukiazusa/articles/c8d76eb56f5fd8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;vie-cli를 사용하고 있는 프로젝트를 Vue2에서 Vue3로 이전하는 튜토리얼 글.&lt;br&gt;
&lt;code&gt;@vue/compat&lt;/code&gt;, &lt;code&gt;eslint-plugin-vue&lt;/code&gt;를 이용해 각 비호환 API에 대응하고 &lt;code&gt;@vue/compat&lt;/code&gt;을 제거하기 까지의 과정을 소개한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-future-of-css-cascade-layers-css-layer-bram-us&quot;&gt;The Future of CSS: Cascade Layers (CSS @layer) – Bram.us&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&quot; title=&quot;The Future of CSS: Cascade Layers (CSS @layer) – Bram.us&quot;&gt;www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS의 &lt;code&gt;@layer&lt;/code&gt; 소개.&lt;br&gt;
Specificity와 Order Of Appearance 전에 Layer를 평가하여 캐스케이드를 제어할 수 있도록 하는 Cascade Layers 사양.&lt;br&gt;
레이어가 Specificity 보다 우선되기 때문에 의도하지 않은 스타일 덮어쓰기 등을 제어하기 쉬워진다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;small-bundles-fast-pages-what-to-do-with-too-much-javascript-calibre&quot;&gt;Small Bundles, Fast Pages: What To Do With Too Much JavaScript | Calibre&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calibreapp.com/blog/bundle-size-optimization&quot; title=&quot;Small Bundles, Fast Pages: What To Do With Too Much JavaScript | Calibre&quot;&gt;calibreapp.com/blog/bundle-size-optimization&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript의 bundle size를 어떻게 작게 유지할 수 있을까?&lt;br&gt;
bundle size와 성능 영향, bundle size 가시화, 특정 패키지의 사용을 ESLint로 금지하는 방법, Modern Browser 용 빌드 분리 방법 등 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-95-chrome-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 95) - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-devtools-95/&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 95) - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-devtools-95/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95 개발자 도구의 변경 사항 정리.&lt;br&gt;
CSS Unit 선택 UI 추가, Isssues 탭 개선, Lighthouse 8.4 지원&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;iframe-sandbox-speaker-deck&quot;&gt;iframe sandbox에서 사용자 입력 스크립트 실행하기 - Speaker Deck(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/syumai/iframe-sandboxdeyuzaru-li-sukuriputowoshi-xing-suru&quot; title=&quot;iframe sandbox에서 사용자 입력 스크립트 실행하기 - Speaker Deck&quot;&gt;speakerdeck.com/syumai/iframe-sandboxdeyuzaru-li-sukuriputowoshi-xing-suru&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;iframe을 사용한 사용자 입력 스크립트 실행 방법.&lt;br&gt;
Cross Origin 상황에서 Window Object를 사용해 코드를 실행하고 postMessage로 그 결과를 전달 받는 방법.&lt;br&gt;
또, postMessage의 origin과 source 체크에 대해서도 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-almanac-css-tricks&quot;&gt;CSS Almanac | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/almanac/&quot; title=&quot;CSS Almanac | CSS-Tricks&quot;&gt;css-tricks.com/almanac/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS 레퍼런스 페이지&lt;br&gt;
CSS의 셀렉터, 프로퍼티 별 설명이 잘 정리돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;intro-to-d3-js&quot;&gt;Intro to D3.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yangdanny97.github.io/intro-to-d3/&quot; title=&quot;Intro to D3.js&quot;&gt;yangdanny97.github.io/intro-to-d3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3 v5+ 버전에 대응한 D3 튜토리얼&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typicode-xv-a-simple-fast-and-small-test-runner-with-native-esm-support&quot;&gt;typicode/xv: A simple, fast and small test runner with native ESM support&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typicode/xv&quot; title=&quot;typicode/xv: A simple, fast and small test runner with native ESM support&quot;&gt;github.com/typicode/xv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESM으로 다루는 테스트 프레임워크.&lt;br&gt;
각 테스트 케이스를 &lt;code&gt;export&lt;/code&gt; 구문으로 export 하며 각 테스트 케이스를 실행하고 결과를 표시하는 CLI를 제공한다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 21 Sep 2021 11:25:53 +0900</pubDate>
        <link>https://jser.info/ko/2021/09/21/deno-1.14-chromeuser-agent-vue-2vue-3/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/09/21/deno-1.14-chromeuser-agent-vue-2vue-3/</guid>
        
        <category>debug</category>
        
        <category>Vue</category>
        
        <category>Chrome</category>
        
        <category>tutorial</category>
        
        <category>CSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-14: Node v16.9.0(Corepack), Spook.js(Same-Site에서의 사이드 채널 공격)</title>
        <description>&lt;p&gt;JSer.info #557 - Node.js 16.9.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.9.0/&quot;&gt;Node v16.9.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm / yarn / pnpm 등 패키지 매니저를 프로젝트 별로 지정하여 사용할 수 있는 Corepack을 시험적으로 지원한다. Corepack을 활성화 한 경우 어떤 패키지 매니저를 사용할 것인지를 &lt;code&gt;package.json&lt;/code&gt;의  &lt;code&gt;packageManager&lt;/code&gt; 필드에 지정하여 프록시를 통해 패키지 설치나 명령어를 실행할 수 있다.&lt;/p&gt;

&lt;p&gt;시험적인 기능이므로 사용하려면 &lt;code&gt;corepack enable yarn&lt;/code&gt; 등의 명령어가 옵트-인으로 필요하다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/dist/latest-v16.x/docs/api/corepack.html&quot; title=&quot;Corepack | Node.js v16.9.0 Documentation&quot;&gt;Corepack | Node.js v16.9.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/teppeis/articles/2021-05-corepack&quot;&gt;corepack is 무엇?&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로 V8 9.3으로 갱신, &lt;code&gt;Object.hasOwn&lt;/code&gt;와 Error Cause 지원, &lt;code&gt;stream.compose&lt;/code&gt;가 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-93&quot; title=&quot;V8 release v9.3 · V8&quot;&gt;V8 release v9.3 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;에는 투기(transient)적 실행을 이용한 same-site 환경에서의 사이드 채널 공격에 대한 논문이 공개돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/agektmr/articles/f8dcd345a88c97&quot;&gt;same-site/cross-site, same-origin/cross-originをちゃんと理解する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;과거 구글이 공개한 &lt;a href=&quot;https://blog.google/products/google-cloud/answering-your-questions-about-meltdown-and-spectre/&quot;&gt;Spectre&lt;/a&gt; 취약성을 다뤘던 &lt;a href=&quot;https://leaky.page/&quot;&gt;https://leaky.page/&lt;/a&gt;라는 사이트가 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot;&gt;Google Online Security Blog: A Spectre proof-of-concept for a Spectre-proof web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;는 이를 보다 사실적으로 검증한 논문으로 Bitbucket이나 Tumblr 등의 사용자 컨텐츠를 예로 서브 도메인이 있는 사이트 간 데모, Google Chrome 확장 기능 간 데모 등을 소개하며 eTLD+1가 일치하는 same-site에서의 사이드 채널 공격이 어떻게 이뤄질 수 있는지 설명한다.&lt;/p&gt;

&lt;p&gt;간단히 소개(자세한 내용은 논문 참고)하면 크롬은 각각의 사이트를 별도 프로세스로 분리하여 사이드 채널 공격을 막을 수 있도록 설계 돼 있다. 하지만 메모리가 압박 받는 상황(의도적으로 압박하는 상황일 수 있음)에서 eTLD+1이 일치하는 same-site를 실행할 경우 설계대로 사이트가 분리되지 않기 때문에 이 경우 사이트 간 사이드 채널 공격이 가능하다는 것이다.&lt;/p&gt;

&lt;p&gt;Same-Site 여부는 &lt;a href=&quot;https://publicsuffix.org/&quot;&gt;Public Suffix List&lt;/a&gt;를 기준으로 정하므로 Bitbucket은 bitbucket.io에 관한 내용을 Public Suffix List에 추가해 Cross-Site로 인식시키는 방법으로 대응하고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/publicsuffix/list/pull/1374&quot;&gt;Adding bitbucket.io pages which render user generated content by andyortlieb-atlassian · Pull Request #1374 · publicsuffix/list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, 확장 기능 Page(&lt;code&gt;chrome-extension://&lt;/code&gt;)에서의 문제는 Chrome 92에서 확장 간에는 Same-Site 등의 조건 여부와 상관 없이 프로세스를 공유하지 않도록 하여 이 문제에 대응했다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/07/protecting-more-with-site-isolation.html&quot;&gt;Google Online Security Blog: Protecting more with Site Isolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot;&gt;Spook.js&lt;/a&gt;에는 투기적 실행을 이용한 사이드 채널 공격에 대해서 자세히 작성돼 있으므로 소개한 내용 외에 더 관심이 가는 분들은 직접 방문해보길 바란다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-9-0-current-node-js&quot;&gt;Node v16.9.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.9.0/&quot; title=&quot;Node v16.9.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.9.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v16.9.0 릴리스.&lt;br&gt;
npm / yarn / pnpm 등의 패키지 매니저를 프로젝트 별로 다르게 설치할 수 있는 Corepack 지원.&lt;br&gt;
V8 9.3으로 업데이트, &lt;code&gt;Object.hasOwn&lt;/code&gt;과 Error Cause를 지원, &lt;code&gt;stream.compose&lt;/code&gt; 추가.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/dist/latest-v16.x/docs/api/corepack.html&quot; title=&quot;Corepack | Node.js v16.9.0 Documentation&quot;&gt;Corepack | Node.js v16.9.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-93&quot; title=&quot;V8 release v9.3 · V8&quot;&gt;V8 release v9.3 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-0-1-prisma-prisma&quot;&gt;Release 3.0.1 · prisma/prisma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prisma/prisma/releases/tag/3.0.1&quot; title=&quot;Release 3.0.1 · prisma/prisma&quot;&gt;github.com/prisma/prisma/releases/tag/3.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prisma 3.0.1 릴리스. 3부터는 Semver에 따라서 릴리스한다.&lt;br&gt;
Referential Actions, Named Constraints, Microsoft SQL / Azure SQL, Node-API 등이 GA(Generally Available)가 됐다.&lt;br&gt;
비호환 변경 사항으로 &lt;code&gt;prisma db seed&lt;/code&gt;의 구조 변경, &lt;code&gt;null&lt;/code&gt;을 쿼리로 지정하지 못하도록 하고 &lt;code&gt;JsonNull&lt;/code&gt; / &lt;code&gt;DbNull&lt;/code&gt; / &lt;code&gt;AnyNull&lt;/code&gt; 중 하나를 사용하도록 하는 변경도 포함됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-3-28-and-4-0-beta-released&quot;&gt;Ember 3.28 and 4.0 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.emberjs.com/ember-3-28-released/&quot; title=&quot;Ember 3.28 and 4.0 Beta Released&quot;&gt;blog.emberjs.com/ember-3-28-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.28과 4.0 Beta 릴리스.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-2-4-new-bracketsameline-option-and-typescript-4-4-support-prettier&quot;&gt;Prettier 2.4: new bracketSameLine option and TypeScript 4.4 support! · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2021/09/09/2.4.0.html&quot; title=&quot;Prettier 2.4: new bracketSameLine option and TypeScript 4.4 support! · Prettier&quot;&gt;prettier.io/blog/2021/09/09/2.4.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 2.4 릴리스.&lt;br&gt;
TypeScript 4.4 지원, &lt;code&gt;jsxBracketSameLine&lt;/code&gt; 옵션을 &lt;code&gt;bracketSameLine&lt;/code&gt; 옵션으로 변경.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nightwatch-v2-0-alpha-is-released-nightwatch-js-blog&quot;&gt;Nightwatch v2.0-alpha is Released | Nightwatch.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nightwatchjs.org/blog/nightwatch-v2-alpha-is-released.html&quot; title=&quot;Nightwatch v2.0-alpha is Released | Nightwatch.js Blog&quot;&gt;nightwatchjs.org/blog/nightwatch-v2-alpha-is-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nightwatch v2.0-alpha 릴리스.&lt;br&gt;
&lt;code&gt;selenium-webdriver&lt;/code&gt;를 이용하도록, WebDriver Actions API 지원, Chrome Dev Tools Protocol 지원.&lt;br&gt;
&lt;code&gt;.ensure&lt;/code&gt; assertion 추가, &lt;code&gt;perform()&lt;/code&gt; 등에서 WebDriver object를 직접 다룰 수 있도록, Async / Await 대응 개선.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;time-for-a-review-of-firefox-92-mozilla-hacks-the-web-developer-blog&quot;&gt;Time for a review of Firefox 92 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/09/time-for-a-review-of-firefox-92/&quot; title=&quot;Time for a review of Firefox 92 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/09/time-for-a-review-of-firefox-92/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 92 릴리스.&lt;br&gt;
CSS의 &lt;code&gt;accent-color&lt;/code&gt;와 &lt;code&gt;size-adjust&lt;/code&gt; 지원, Stage 4 &lt;code&gt;Object.hasOwn&lt;/code&gt; 지원 등.&lt;br&gt;
또, ₩selectionchange₩ 이벤트에서 &lt;code&gt;input&lt;/code&gt;이나 &lt;code&gt;textarea&lt;/code&gt; 내의 선택 범위 변경도 인식할 수 있도록 변경.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/92&quot; title=&quot;Firefox 92 for developers - Mozilla | MDN&quot;&gt;Firefox 92 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/92.0/releasenotes/&quot; title=&quot;Firefox 92.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 92.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-workbox-v6-3-0-googlechrome-workbox&quot;&gt;Release Workbox v6.3.0 · GoogleChrome/workbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/workbox/releases/tag/v6.3.0&quot; title=&quot;Release Workbox v6.3.0 · GoogleChrome/workbox&quot;&gt;github.com/GoogleChrome/workbox/releases/tag/v6.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Workbox 6.3.0 릴리즈.&lt;br&gt;
&lt;code&gt;integrity&lt;/code&gt; 속성이 지정돼 있는 리소스에 대한 precaching 수정, IDB 기록에 &lt;code&gt;{ durability: &amp;#39;relaxed&amp;#39; }&lt;/code&gt;을 사용하도록.&lt;br&gt;
BroadcastCacheUpdate에 &lt;code&gt;notifyAllClients&lt;/code&gt; 옵션 추가, &lt;code&gt;Vary:&lt;/code&gt; 헤더에 대한 디버깅 로그 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-s-new-with-devtools-cross-browser-edition-smashing-magazine&quot;&gt;What’s New With DevTools: Cross-Browser Edition — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/09/devtools-cross-browser-edition/&quot; title=&quot;What’s New With DevTools: Cross-Browser Edition — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/09/devtools-cross-browser-edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;브라우저 별 개발자 도구 기능을 정리 및 소개하는 글&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-notions-marketing-site-to-next-js&quot;&gt;Migrating Notion&amp;#039;s marketing site to Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.notion.so/blog/migrating-notion-marketing-to-next-js&quot; title=&quot;Migrating Notion&amp;amp;#039;s marketing site to Next.js&quot;&gt;www.notion.so/blog/migrating-notion-marketing-to-next-js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Notion 마케팅 사이트를 Next.js로 이전한 내용 정리.&lt;br&gt;
React 기반의 애플리케이션과 마케팅 사이트가 React 구성 요소 디렉터리를 공유할 수 있도록 하여 마케팅 사이트에서 라이브 데모를 포함할 수 있도록 대응.&lt;br&gt;
라우팅 전환과 테스트, CSS 대응 방법 등 이전과 관련한 다양한 주제에 대해서 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-eventing-deep-dive&quot;&gt;JavaScript Eventing Deep Dive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/eventing-deepdive/&quot; title=&quot;JavaScript Eventing Deep Dive&quot;&gt;web.dev/eventing-deepdive/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Event Capturing / Event Bubbling phase의 동작 원리 소개.&lt;br&gt;
각각의 phase에 맞춰 Event 흐름을 멈추게 할 수 있는 &lt;code&gt;stopPropagation()&lt;/code&gt;, &lt;code&gt;stopImmediatePropagation()&lt;/code&gt;, &lt;code&gt;preventDefault()&lt;/code&gt; 동작 방식 설명.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;journey-with-icons-continues&quot;&gt;Journey with Icons Continues&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://antfu.me/posts/journey-with-icons-continues&quot; title=&quot;Journey with Icons Continues&quot;&gt;antfu.me/posts/journey-with-icons-continues&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite에서 아이콘 컴포넌트를 온디멘드 빌드하여 사용할 수 있는 unplugin-icons 소개&lt;br&gt;
아이콘 데이터로는 Iconify를 사용하며 아이콘 컴포넌트를 가져온 시점에 Vite 측에서 SVG 기반의 아이콘 컴포넌트를 작성하여 반환하는 구조로 이뤄져 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://iconify.design/&quot; title=&quot;Iconify - Unified icons framework&quot;&gt;Iconify - Unified icons framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/antfu/unplugin-icons&quot; title=&quot;antfu/unplugin-icons: 🤹 Access thousands of icons as components on-demand universally.&quot;&gt;antfu/unplugin-icons: 🤹 Access thousands of icons as components on-demand universally.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-flow-enums-as-announced-in-an-earlier-post-flow-by-george-zahariev-flow-sep-2021-medium&quot;&gt;Introducing Flow Enums. As announced in an earlier post, Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/flow-type/introducing-flow-enums-16d4239b3180&quot; title=&quot;Introducing Flow Enums. As announced in an earlier post, Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&quot;&gt;medium.com/flow-type/introducing-flow-enums-16d4239b3180&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FlowType에 도입된 &lt;code&gt;enum&lt;/code&gt; 소개.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flow-type/typescript-enums-vs-flow-enums-83da2ca4a9b4&quot; title=&quot;TypeScript Enums vs. Flow Enums. The Flow team recently announced Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&quot;&gt;TypeScript Enums vs. Flow Enums. The Flow team recently announced Flow… | by George Zahariev | Flow | Sep, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postd&quot;&gt;프런트엔드 테스트는 모두를 위한 것 | POSTD(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://postd.cc/frontend-testing-is-for-everyone/&quot; title=&quot;フロントエンドのテストは皆のためのもの | POSTD&quot;&gt;postd.cc/frontend-testing-is-for-everyone/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Front-End Testing is For Everyone 번역 글.&lt;br&gt;
테스트가 검증하는 범위와 검증 도구를 정리한 글.&lt;br&gt;
유닛 테스트, 결합 테스트, E2E 테스트, 접근성 테스트, 시각적 회귀(visual regression) 테스트, 성능 테스트를 다루고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/front-end-testing-is-for-everyone/&quot; title=&quot;Front-End Testing is For Everyone | CSS-Tricks&quot;&gt;Front-End Testing is For Everyone | CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spook-js&quot;&gt;Spook.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.spookjs.com/&quot; title=&quot;Spook.js&quot;&gt;www.spookjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;paper&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;동일 페이지 내에 대한 Spectre 취약성을 다뤘던 leaky.page에 이어 웹 사이트 간이나 확장 기능 간 까지 실증적으로 검증하여 정리한 논문.&lt;br&gt;
Chrome은 메모리를 압박하면 eTLD+1의 범위로 프로세스를 정리하는데 이러한 V8의 성질을 이용해 투기(transient)적 실행 공격을 하면 다른 사이트의 메모리 데이터를 읽어드릴 수 있다는 내용.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers-jp.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot; title=&quot;Google Developers Japan: Spectre의 영향을 받지 않는 웹을 만들기 위한 개념 증명에 관해&quot;&gt;Google Developers Japan: Spectre의 영향을 받지 않는 웹을 만들기 위한 개념 증명에 관해&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wizardpisces-tiny-sass-compiler-another-sass-compiler-write-from-scatch-runnable-on-both-node-and-browser&quot;&gt;wizardpisces/tiny-sass-compiler: Another sass compiler write from scatch，runnable on both node and browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wizardpisces/tiny-sass-compiler&quot; title=&quot;wizardpisces/tiny-sass-compiler: Another sass compiler write from scatch，runnable on both node and browser&quot;&gt;github.com/wizardpisces/tiny-sass-compiler&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript로 작성한 Sass 컴파일러&lt;br&gt;
브라우저와 Node.js에서 동작한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-kindle-amazon&quot;&gt;TypeScript 핸즈온 | 쇼다 츠야노 | 공학 | Kindle 스토어 | Amazon(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B09D76MB7B/&quot; title=&quot;TypeScript 핸즈온 | 쇼다 츠야노 | 공학 | Kindle 스토어 | Amazon&quot;&gt;www.amazon.co.jp/dp/B09D76MB7B/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;핸즈온 형식의 TypeScript 입문서&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.shuwasystem.co.jp/book/9784798065335.html&quot; title=&quot;TypeScript 핸즈온 - 슈와시스템 당신의 배움을 지원합니다&quot;&gt;TypeScript 핸즈온 - 슈와시스템 당신의 배움을 지원합니다&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 Sep 2021 10:00:58 +0900</pubDate>
        <link>https://jser.info/ko/2021/09/14/node-v16.9.0corepack-spook.jssame-site/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/09/14/node-v16.9.0corepack-spook.jssame-site/</guid>
        
        <category>Tools</category>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>database</category>
        
        <category>Ember</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-09-07: Electron 14.0.0, node-fetch 3.0.0, replace-jquery</title>
        <description>&lt;p&gt;JSer.info #556 - Electron 14.0.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-14-0&quot;&gt;Electron 14.0.0 | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;각각 Chromium 93, Node.js 14.17.0, V8 9.3로 의존 모듈이 갱신됐다.&lt;br&gt;
비호환 변경으로 &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; 옵션과 &lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt; 옵션(&lt;code&gt;true&lt;/code&gt;가 기본)이 삭제됐다.&lt;/p&gt;

&lt;p&gt;또, Electron 12에서 Deprecated 됐던 &lt;code&gt;remote&lt;/code&gt; 모듈을 삭제하면서 &lt;a href=&quot;https://www.npmjs.com/package/@electron/remote&quot;&gt;@electron/remote&lt;/a&gt;라는 외부 모듈로 추출 및 변경했다.&lt;br&gt;
Renderer와 Main(Node.js)의 교류는 기본적으로 &lt;a href=&quot;https://www.electronjs.org/docs/api/context-bridge&quot;&gt;contextBridge&lt;/a&gt;를 사용하는 방향으로 이뤄진다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/hibara/items/c59fb6924610fc22a9db&quot;&gt;Electron(v.14.0.0 현재)의 IPC 통신 입문 - 보다 안전한 방법으로 변화 - Qiita&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js에서의 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; 폴리필 라이브러리 node-fetch 3.0.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/releases/tag/v3.0.0&quot;&gt;Release v3.0.0 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비호환 변경으로 Node.js의 ESM을 지원하고 Node.js 12 미만 지원이 종료됐다.&lt;br&gt;
또, AbortController 지원으로 인해 비표준이었던 &lt;code&gt;timeout&lt;/code&gt; 옵션은 불필요해졌으므로 삭제됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/issues/523&quot;&gt;Should we deprecate timeout in favor of AbortController? · Issue #523 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다른 한편, 비표준인 &lt;code&gt;highWaterMark&lt;/code&gt; 옵션이 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/issues/386&quot;&gt;When users clone(), automatically create streams with custom highWaterMark · Issue #386 · node-fetch/node-fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sachinchoolur/replace-jquery&quot;&gt;replace-jQuery&lt;/a&gt;는 jQuery 메서드에 상응하는 Utility 코드(완전히 호환되지는 않는다)를 생성하는 도구다.&lt;/p&gt;

&lt;p&gt;기본적으로는 특정 코드 내(사용자가 지정)에서 사용하고 있는 jQuery 메서드를 갖는 Utility 코드를 생성한다. 또, 특정 메서드만 지정해서 생성할 수도 있다.&lt;/p&gt;

&lt;p&gt;본래 코드에 있는 &lt;code&gt;$&lt;/code&gt;나 &lt;code&gt;jQuery&lt;/code&gt; 자체를 덮어쓰는 건 아니지만 사용하고 있는 jQuery 메서드를 Utility로 바꿔쓸 수 있도록 하여 jQuery에 대한 의존을 줄이는 것을 목적으로 한 도구다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-14-0-0-electron-blog&quot;&gt;Electron 14.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-14-0&quot; title=&quot;Electron 14.0.0 | Electron Blog&quot;&gt;www.electronjs.org/blog/electron-14-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 14.0.0 릴리스.&lt;br&gt;
Chromium 93, Node.js 14.17.0, V8 9.3로 업데이트.&lt;br&gt;
비호환 변경으로는 &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; 옵션 삭제, &lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt; 옵션을 삭제하고 기본 활성화 되도록 변경됐으며 remote 모듈을 삭제하고 &lt;code&gt;@electron/remote&lt;/code&gt; 라는 외부 모듈로 추출하고 사용한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;august-31-2021-security-releases-node-js&quot;&gt;August 31 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases2/&quot; title=&quot;August 31 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/aug-2021-security-releases2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 보안 업데이트.&lt;br&gt;
OpenSSL와 npm 6.x 계열 취약성 수정을 포함, Node.js v12.22.6 (LTS)와 Node.js v14.17.6 (LTS)가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yamory.io/blog/cve-2021-32804-node-tar-reproduce/&quot; title=&quot;npm에도 영향이 있는 node-tar의 경로 탐색 취약성 CVE-2021-32804 | yamory Blog&quot;&gt;npm에도 영향이 있는 node-tar의 경로 탐색 취약성 CVE-2021-32804 | yamory Blog&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-selenium-4-0-0-rc-1-seleniumhq-selenium&quot;&gt;Release Selenium 4.0.0 RC 1 · SeleniumHQ/selenium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/releases/tag/selenium-4.0.0-rc-1&quot; title=&quot;Release Selenium 4.0.0 RC 1 · SeleniumHQ/selenium&quot;&gt;github.com/SeleniumHQ/selenium/releases/tag/selenium-4.0.0-rc-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Selenium 4.0.0 RC 1 릴리스.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-0-0-node-fetch-node-fetch&quot;&gt;Release v3.0.0 · node-fetch/node-fetch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/node-fetch/node-fetch/releases/tag/v3.0.0&quot; title=&quot;Release v3.0.0 · node-fetch/node-fetch&quot;&gt;github.com/node-fetch/node-fetch/releases/tag/v3.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;node-fetch 3.0.0 릴리스.&lt;br&gt;
ESM 지원, Node.js 12 미만 지원 종료, &lt;code&gt;timeout&lt;/code&gt; 옵션 삭제, &lt;code&gt;highWaterMark&lt;/code&gt; 옵션 추가 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1-13-0-rc-2-released-jquery-ui-blog&quot;&gt;jQuery UI 1.13.0-rc.2 released | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jqueryui.com/2021/09/jquery-ui-1-13-0-rc-2-released/&quot; title=&quot;jQuery UI 1.13.0-rc.2 released | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2021/09/jquery-ui-1-13-0-rc-2-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.13.0-rc.2 릴리스.&lt;br&gt;
5년 만의 릴리스.&lt;br&gt;
최근 jQuery와의 호환성을 개선하는 목적의 릴리스이며 따라서 비호환 변경 사항은 없다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stitches-1-0-0-stitches&quot;&gt;Stitches 1.0.0 — Stitches&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stitches.dev/blog/stitches-1.0.0&quot; title=&quot;Stitches 1.0.0 — Stitches&quot;&gt;stitches.dev/blog/stitches-1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JS 프레임워크인 Stitches 1.0.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/modulz/stitches/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · modulz/stitches&quot;&gt;Release v1.0.0 · modulz/stitches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-08-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-08 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/09/04/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-08 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/09/04/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021년 8월 TC39 미팅에서 변경된 ECMAScript Proposal 정리.&lt;br&gt;
Class Static Block, &lt;code&gt;hasOwn&lt;/code&gt;, &lt;code&gt;.at()&lt;/code&gt;이 각각 Stage 4가 됐으며 ES2022에 들어가게 된다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-iterator-generator&quot;&gt;JavaScript의 Iterator / Generator 정리&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/qnighy/articles/112af47edfda96&quot; title=&quot;JavaScript의 Iterator / Generator 정리&quot;&gt;zenn.dev/qnighy/articles/112af47edfda96&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Iterator와 Generator를 자세히 설명하는 글&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ss2021-jssst-sigppl-special-interest-group-on-programming-and-programming-languages&quot;&gt;ss2021 - 일본 소프트웨어 과학회 프로그래밍 토론 연구회 (JSSST-SIGPPL) (Special Interest Group on Programming and Programming Languages)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ppl.jssst.or.jp/index.php?ss2021&quot; title=&quot;ss2021 - 일본 소프트웨어 과학회 프로그래밍 토론 연구회 (JSSST-SIGPPL) (Special Interest Group on Programming and Programming Languages)&quot;&gt;ppl.jssst.or.jp/index.php?ss2021&lt;/a&gt;(일본어)&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;blink&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;「JavaScript 처리계와 Chrome 브라우저의 구현 기술」에 대한 강연 자료(슬라이드) 정리 모음.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bundle-a-quick-npm-package-size-checker&quot;&gt;bundle - a quick npm package size checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bundle.js.org/&quot; title=&quot;bundle - a quick npm package size checker&quot;&gt;bundle.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;브라우저 상에서 skypack.dev와 esbuild-wasm을 이용해 코드를 bundle 하고 bundle size를 검사할 수 있는 도구.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-schema-dts-json-ld-typescript-types-for-schema-org-vocabulary&quot;&gt;google/schema-dts: JSON-LD TypeScript types for Schema.org vocabulary&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/schema-dts&quot; title=&quot;google/schema-dts: JSON-LD TypeScript types for Schema.org vocabulary&quot;&gt;github.com/google/schema-dts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Schema.org의 vocabulary에 대응한 JSON-LD의 TypeScript 타입 정의 라이브러리.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://json-ld.org/&quot; title=&quot;JSON-LD - JSON for Linking Data&quot;&gt;JSON-LD - JSON for Linking Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;asmcss-assembler-a-modern-ui-framework&quot;&gt;asmcss/assembler: A modern UI framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/asmcss/assembler&quot; title=&quot;asmcss/assembler: A modern UI framework&quot;&gt;github.com/asmcss/assembler&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x-style&lt;/code&gt;라는 가상 프로퍼티를 이용해 좀 더 간결한 문법으로 스타일을 정의할 수 있는 Utility-first한 UI 프레임워크.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;niksy-isomorphic-timers-promises-timers-promises-for-client-and-server&quot;&gt;niksy/isomorphic-timers-promises: `timers/promises` for client and server.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/niksy/isomorphic-timers-promises&quot; title=&quot;niksy/isomorphic-timers-promises: \`timers/promises\` for client and server.&quot;&gt;github.com/niksy/isomorphic-timers-promises&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js의 &lt;code&gt;timers/promises&lt;/code&gt; polyfill 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-ts-gyb-generating-native-code-interfaces-from-typescript&quot;&gt;microsoft/ts-gyb: Generating native code interfaces from TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/ts-gyb&quot; title=&quot;microsoft/ts-gyb: Generating native code interfaces from TypeScript&quot;&gt;github.com/microsoft/ts-gyb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript의 interface로 부터 mustache templates를 사용해 코드를 생성하는 도구.&lt;br&gt;
TypeScript의 interface에서 다른 언어의 boilerplate를 생성하는 게 목적이다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sachinchoolur-replace-jquery-automatically-finds-jquery-methods-from-existing-projects-and-generates-vanilla-js-alternatives&quot;&gt;sachinchoolur/replace-jquery: Automatically finds jQuery methods from existing projects and generates vanilla js alternatives.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sachinchoolur/replace-jquery&quot; title=&quot;sachinchoolur/replace-jquery: Automatically finds jQuery methods from existing projects and generates vanilla js alternatives.&quot;&gt;github.com/sachinchoolur/replace-jquery&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery 기반의 코드 내(사용자 지정)에서 사용하고 있는 jQuery 메서드를 지원하는(대체 코드, 바닐라 기반)를 생성하는 도구.&lt;br&gt;
대체 코드로 생성 할 jQuery 메서드를 따로 지정하여 필요 메서드만 유틸리티 코드로 생성할 수도 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-cookbook&quot;&gt;React Cookbook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/react-cookbook/9781492085836/&quot; title=&quot;React Cookbook&quot;&gt;learning.oreilly.com/library/view/react-cookbook/9781492085836/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React를 주제로 한 도서.&lt;br&gt;
라우터, 상태, GraphQL, UI, 보안, 테스트, 접근성, 성능 등 토픽 별로 정리한 쿡 북.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Sep 2021 10:36:56 +0900</pubDate>
        <link>https://jser.info/ko/2021/09/07/electron-14.0.0-node-fetch-3.0.0-replace-jquery/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/09/07/electron-14.0.0-node-fetch-3.0.0-replace-jquery/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>CSS</category>
        
        <category>UI</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-08-31: TypeScript 4.4, PageSpeed Insights의 Lab / Field data, Packemon(라이브러리 용 빌드 도구)</title>
        <description>&lt;p&gt;JSer.info #555 - TypeScript 4.4 정식 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/&quot;&gt;Announcing TypeScript 4.4 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Control Flow Analysis 개선, Index Signatures로 Symbol과 Template String를 이용 할 수 있도록.&lt;br&gt;
Catch 절의 기본 타입을 &lt;code&gt;unknown&lt;/code&gt; 타입으로 하는 &lt;code&gt;useUnknownInCatchVariables&lt;/code&gt; 옵션 추가.&lt;br&gt;
optional과 &lt;code&gt;undefined&lt;/code&gt; 값을 구별하는 &lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt; 옵션 추가.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useUnknownInCatchVariables&lt;/code&gt;는 &lt;code&gt;strict&lt;/code&gt; 옵션이 켜진 경우 자동으로 활성화 된다.&lt;br&gt;
하지만 &lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt;는 &lt;code&gt;strict&lt;/code&gt; 옵션과는 별도로 설정해야 한다.&lt;/p&gt;

&lt;p&gt;또, ES Proposal Stage 3의&lt;a href=&quot;https://github.com/tc39/proposal-class-static-block#ecmascript-class-static-initialization-blocks&quot;&gt;class static block&lt;/a&gt;를 지원한다.&lt;br&gt;
그 외로는 &lt;code&gt;tsc --help&lt;/code&gt; 출력 방식 개선, 빌드 성능이 개선됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/lab-and-field-data-differences/&quot;&gt;Why lab and field data can be different (and what to do about it)&lt;/a&gt;에서는 &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;PageSpeed Insights&lt;/a&gt; 등에 표시되는 &amp;quot;lab data&amp;quot;와 &amp;quot;field data&amp;quot;의 차이점을 소개하고 있다.&lt;/p&gt;

&lt;p&gt;Lab data는 네트워크와 실행 환경을 고정한 Synthetic 모니터링 데이터라고 한다.&lt;br&gt;
한편, Field data는 &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot;&gt;Chrome User Experience Report&lt;/a&gt;로 수집된 Chrome 사용자의 RUM 데이터를 기반으로 하고 있다.&lt;/p&gt;

&lt;p&gt;두 데이터의 차이, 어떤 경우에 값에 차이가 발생하는지 등을 이야기한다.&lt;br&gt;
실제 사용자 경험에 가까운 것은 Field data 이므로 우선은 Field data를 살펴볼 것, 두 데이터에 차이가 있을 경우 최적화 여지가 있음을 나타내는 것 등에 대해서 작성돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://packemon.dev/&quot;&gt;Packemon&lt;/a&gt;은 npm에 공개하는 패키지 용 빌드 도구다.&lt;/p&gt;

&lt;p&gt;Node.js(mjs,cjs), 브라우저(ESM、UMD) 용 빌드를 한번에 할 수 있다.&lt;/p&gt;

&lt;p&gt;ECMAScript Modules(ESM, Node.js 12+)에서는 사용할 수 없는 Node.js API도 있고 import 시 &lt;code&gt;mjs&lt;/code&gt; 파일 확장자가 필요하는 등 CommonJS와 다소 차이가 있는데 Packemon은 빌드 시에 &lt;a href=&quot;https://github.com/milesj/packemon/tree/master/packages/babel-plugin-cjs-esm-interop&quot;&gt;Babel를 사용해 ESM 용 코드를 변환&lt;/a&gt;하거나 ESM에서 사용할 수 없는 기능을 빌드시에 감지하여 알려준다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/azu/scraps/8251dab75562c8&quot;&gt;Node.js 라이브러리 / 도구를 ESM으로 이전하다[Node.js 12+]&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c&quot;&gt;Pure ESM package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로는 &lt;code&gt;packemon validate&lt;/code&gt;라는 패키지 메타 데이터 벨리데이션이 가능한 명령어도 제공한다.&lt;br&gt;
비슷한 도구로는 &lt;a href=&quot;https://github.com/developit/microbundle&quot;&gt;Microbundle&lt;/a&gt;가 있으나 packemon은 패키지 공개를 보조하는 도구도 제공하므로 약간의 차이는 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-8-0-current-node-js&quot;&gt;Node v16.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.8.0/&quot; title=&quot;Node v16.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 16.8.0 릴리스.&lt;br&gt;
&lt;code&gt;stream.Duplex.from&lt;/code&gt;, &lt;code&gt;stream.Readable.isDisturbed(stream)&lt;/code&gt; 추가.&lt;br&gt;
&lt;code&gt;util&lt;/code&gt; 모듈에 &lt;code&gt;toUSVString&lt;/code&gt; 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-4-typescript&quot;&gt;Announcing TypeScript 4.4 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/&quot; title=&quot;Announcing TypeScript 4.4 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.4 릴리스.&lt;br&gt;
Control Flow Analysis 개선, Index Signatures로 Symbol과 Template String를 이용 할 수 있도록.&lt;br&gt;
Catch 절의 기본 타입을 &lt;code&gt;unknown&lt;/code&gt; 타입으로 하는 &lt;code&gt;useUnknownInCatchVariables&lt;/code&gt; 옵션 추가.&lt;br&gt;
optional과 &lt;code&gt;undefined&lt;/code&gt; 값을 구별하는 &lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt; 옵션 추가.&lt;br&gt;
또, ES Proposal Stage 3의 class static block 지원.&lt;br&gt;
&lt;code&gt;tsc --help&lt;/code&gt;의 출력 방식과 빌드 성능이 개선 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-94-beta-webcodecs-webgpu-scheduling-and-more&quot;&gt;Chromium Blog: Chrome 94 Beta: WebCodecs, WebGPU, Scheduling, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/08/chrome-94-beta-webcodecs-webgpu.html&quot; title=&quot;Chromium Blog: Chrome 94 Beta: WebCodecs, WebGPU, Scheduling, and More&quot;&gt;blog.chromium.org/2021/08/chrome-94-beta-webcodecs-webgpu.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 94 Beta 릴리스.&lt;br&gt;
Origin Trial로서 HTTP status code 103 Early Hints를 시험적으로 지원.&lt;br&gt;
WebCodecs, &lt;code&gt;scheduler.postTask()&lt;/code&gt;, &lt;code&gt;MediaStreamTrackGenerator&lt;/code&gt; / &lt;code&gt;MediaStreamTrackProcessor&lt;/code&gt; 지원.&lt;br&gt;
Self Profiling API 지원.&lt;br&gt;
또, WebSQL이 서드 파티 컨텍스트에서 비권장 됐고, &lt;code&gt;navigator.plugins&lt;/code&gt; / &lt;code&gt;navigator.mimeTypes&lt;/code&gt;는 고정된 값을 반환하도록 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-swr-1-0-swr&quot;&gt;Announcing SWR 1.0 – SWR&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://swr.vercel.app/blog/swr-v1&quot; title=&quot;Announcing SWR 1.0 – SWR&quot;&gt;swr.vercel.app/blog/swr-v1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;데이터 가져오기 용 React Hooks 라이브러리 SWR 1.0 릴리스.&lt;br&gt;
&lt;code&gt;fallback&lt;/code&gt; 옵션 추가, Immutable Mode 추가, &lt;code&gt;provider&lt;/code&gt; 옵션 추가, &lt;code&gt;useSWRConfig&lt;/code&gt; 추가.&lt;br&gt;
또, Middleware 대응, 일부 API 변경,  디폴트 &lt;code&gt;fetcher&lt;/code&gt;를 지정하지 않아도 되도록 개선.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-27-1-0-facebook-jest&quot;&gt;Release 27.1.0 · facebook/jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jest/releases/tag/v27.1.0&quot; title=&quot;Release 27.1.0 · facebook/jest&quot;&gt;github.com/facebook/jest/releases/tag/v27.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 27.1.0 릴리스.&lt;br&gt;
&lt;code&gt;snapshotFormat&lt;/code&gt; 옵션 추가, Node.js 16에서 추가된 &lt;code&gt;node:&lt;/code&gt; prefix 모듈 지원.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_core_modules&quot; title=&quot;Modules: CommonJS modules | Node.js v16.8.0 Documentation&quot;&gt;Modules: CommonJS modules | Node.js v16.8.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mongoose-changelog-md-at-master-automattic-mongoose&quot;&gt;mongoose/CHANGELOG.md at master · Automattic/mongoose&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md#600--2021-08-24&quot; title=&quot;mongoose/CHANGELOG.md at master · Automattic/mongoose&quot;&gt;github.com/Automattic/mongoose/blob/master/CHANGELOG.md#600--2021-08-24&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MongoDB&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mongoose 6.0 릴리스.&lt;br&gt;
MongoDB Driver 4.0 지원, &lt;code&gt;sanitizeFilter&lt;/code&gt;와 &lt;code&gt;Trusted()&lt;/code&gt; 메서드 추가, &lt;code&gt;default&lt;/code&gt;로 함수를 전달할 수 있도록, Document의 변경을  Proxy로 감지할 수 있다.&lt;br&gt;
비호환 변경 사항으로는 &lt;code&gt;createConnection(uri)&lt;/code&gt;이 thenable하지 않도록 변경됐고 같은 Query를 재실행하면 에러 발생하며 &lt;code&gt;strictQuery&lt;/code&gt; 옵션이 strict로 이름 변경 됐다.&lt;br&gt;
또, 기본 동작 변경과 관련하여 불필요하게 된 옵션 삭제와 타입스크립트의 타입 정의 변경이 이뤄졌다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mongoosejs.com/docs/migrating_to_6.html&quot; title=&quot;Mongoose v6.0.2: Migrating to Mongoose 6&quot;&gt;Mongoose v6.0.2: Migrating to Mongoose 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://thecodebarbarian.com/introducing-mongoose-6.html&quot; title=&quot;Introducing Mongoose 6.0.0 | www.thecodebarbarian.com&quot;&gt;Introducing Mongoose 6.0.0 | www.thecodebarbarian.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;private-network-access-update-introducing-a-deprecation-trial-chrome-developers&quot;&gt;Private Network Access update: Introducing a deprecation trial - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/private-network-access-update/&quot; title=&quot;Private Network Access update: Introducing a deprecation trial - Chrome Developers&quot;&gt;developer.chrome.com/blog/private-network-access-update/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome에서의 non-secure한 웹사이트에서 Private Network Access를 제한하는 로드맵 공개.&lt;br&gt;
Chrome 94에서 non-secure한 Public 웹사이트에서 Private Network로의 요청을 보낼 수 없게 되는 역 Origin Trial(Deprecation trials - formerly known as reverse origin trials)을 개시한다.&lt;br&gt;
이어 Chrome 102에서 역 Origin Trial을 종료하고 전면 제한할 예정.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-portal-windows-for-electron&quot;&gt;Introducing Portal Windows for Electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tandem.chat/portal-windows/&quot; title=&quot;Introducing Portal Windows for Electron&quot;&gt;blog.tandem.chat/portal-windows/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tandem에서 만들고 사용하고 있는 Portal Windows 라이브러리 소개.&lt;br&gt;
Portal Windows는 Electron 에서 별도 윈도우를 미러링할 수 있게 도와주는 라이브러리다.&lt;br&gt;
별도 앱 윈도우를 리액트 컴포넌트로 렌더링하고 스크린 쉐어 등에 이용할 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cryptagon/portal-windows&quot; title=&quot;cryptagon/portal-windows: Render and position native windows as simply as you render and position tooltips in your React app.&quot;&gt;cryptagon/portal-windows: Render and position native windows as simply as you render and position tooltips in your React app.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-lab-and-field-data-can-be-different-and-what-to-do-about-it&quot;&gt;Why lab and field data can be different (and what to do about it)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/lab-and-field-data-differences/&quot; title=&quot;Why lab and field data can be different (and what to do about it)&quot;&gt;web.dev/lab-and-field-data-differences/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PageSpeed Insight 등에 보고되는 합성 환경(synthetic environment) 측정 데이터인 Lab data와 실 사용자 모니터링(Real User Monitoring - RUM)인 Field data 소개.&lt;br&gt;
각 데이터의 차이점, 측정 방법, 캐시 상태, AMP / SXG, BFCache 등으로 데이터가 받는 영향에 대해 다룬다.&lt;br&gt;
Lab와 Field 데이터 모두 보고된 경우에는 Field data가 보다 사용자 체험에 가깝다고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-client-side-routing-the-app-history-api&quot;&gt;Modern client-side routing: the App History API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/app-history-api/&quot; title=&quot;Modern client-side routing: the App History API&quot;&gt;web.dev/app-history-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 95에서 구현된 App History API(Experimental Web Platform features 플래그를 활성화하여 사용)  소개.&lt;br&gt;
App History API는 SPA 구현시 다소 문제가 있는 것으로 알려진 History API를 대체하는 API 다.&lt;br&gt;
&lt;code&gt;navigation&lt;/code&gt; 이벤트를 통해 네비게이션 감지, &lt;code&gt;transitionWhile(promise)&lt;/code&gt;로 전환중 / 성공 / 실패 표현, 네비게이션 에러 시의 롤백 등의 구체적인 예제를 소개한다.&lt;br&gt;
또, History 관리, 상태 관리 방법 뿐 아니라 Form의 Submit에 의한 네비게이션 방법도 다루고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/app-history&quot; title=&quot;WICG/app-history: The app history API provides a web application-focused way of managing same-origin same-frame history entries and navigations.&quot;&gt;WICG/app-history: The app history API provides a web application-focused way of managing same-origin same-frame history entries and navigations.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nan-to-node-api-migration-a-short-story-nodesource&quot;&gt;NAN to Node-API Migration: A Short Story - NodeSource&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodesource.com/blog/NAN-to-Node-API-migration-a-short-story&quot; title=&quot;NAN to Node-API Migration: A Short Story - NodeSource&quot;&gt;nodesource.com/blog/NAN-to-Node-API-migration-a-short-story&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C++&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js의 native addon 개발 시 사용하는 NAN과 Node-API(N-API) 소개.&lt;br&gt;
Node-API는 V8에 의존하지 않는 native addon을 개발을 위해 추가된다. NAN에서 Node-API로 전환하면서 Node-API 사용 방법을 살펴볼 수 있도록 구성된 글.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-projectvisbug-firebug-for-designers-edit-any-webpage-in-any-state-https-a-nerdy-dev-gimme-visbug&quot;&gt;GoogleChromeLabs/ProjectVisBug: FireBug for designers › Edit any webpage, in any state &lt;a href=&quot;https://a.nerdy.dev/gimme-visbug&quot;&gt;https://a.nerdy.dev/gimme-visbug&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/ProjectVisBug&quot; title=&quot;GoogleChromeLabs/ProjectVisBug: FireBug for designers › Edit any webpage, in any state https://a.nerdy.dev/gimme-visbug&quot;&gt;github.com/GoogleChromeLabs/ProjectVisBug&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Design&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;디자이너 용 DevTools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://visbug.web.app/&quot; title=&quot;VisBug&quot;&gt;VisBug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gotta-pack-em-all-packemon&quot;&gt;Gotta pack &amp;#039;em all! | Packemon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://packemon.dev/&quot; title=&quot;Gotta pack &amp;amp;#039;em all! | Packemon&quot;&gt;packemon.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Zero Configuration 라이브러리 용 빌드 도구.&lt;br&gt;
Node.js(mjs,cjs), 브라우저(ESM, UMD) 용 빌드를 한번에 할 수 있다.&lt;br&gt;
또, 설정에 따른 package.json 수정, Babel을 사용한 ESM 용 코드 변환, mjs로 사용할 수 없는 기능을 빌드 하려는지 체크,  패키지의 메타 데이터 벨리데이션을 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/packemon-demo&quot; title=&quot;azu/packemon-demo: Packemon demo package&quot;&gt;azu/packemon-demo: Packemon demo package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;5alidz-tiny-schema-validator-json-schema-validator&quot;&gt;5alidz/tiny-schema-validator: JSON schema validator&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/5alidz/tiny-schema-validator&quot; title=&quot;5alidz/tiny-schema-validator: JSON schema validator&quot;&gt;github.com/5alidz/tiny-schema-validator&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Schema를 정의하여 검증 할 수 있는 JSON 스카미 빌더 라이브러리.&lt;br&gt;
작성한 Schema 객체는 TypeScript의 타입으로도 사용할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unjs-unplugin-unified-plugin-system-for-vite-rollup-and-webpack&quot;&gt;unjs/unplugin: Unified plugin system for Vite, Rollup, and Webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/unjs/unplugin&quot; title=&quot;unjs/unplugin: Unified plugin system for Vite, Rollup, and Webpack&quot;&gt;github.com/unjs/unplugin&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;vite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rollup&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vite / Rollup / webpack의 plugin을 동일한 코드로 생성하는 라이브러리.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 31 Aug 2021 07:46:59 +0900</pubDate>
        <link>https://jser.info/ko/2021/08/31/typescript-4.4-pagespeed-insightslabfield-data-packemon/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/08/31/typescript-4.4-pagespeed-insightslabfield-data-packemon/</guid>
        
        <category>node.js</category>
        
        <category>Chrome</category>
        
        <category>TypeScript</category>
        
        <category>browser</category>
        
        <category>React</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-08-25: browser-compat-data에 Deno를 추가, Mobile First and Desktop First, create-react-app에서 Next.js로 이전</title>
        <description>&lt;p&gt;JSer.info #554 - MDN 등에서 이용하는 브라우저 구현 호환 데이터를 관리하고 있는 &lt;code&gt;@mdn/browser-compat-data&lt;/code&gt; 4.0.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/releases/tag/v4.0.0&quot;&gt;Release v4.0.0 · mdn/browser-compat-data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;호환 목록에 Deno 데이터가 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/deno-on-mdn&quot;&gt;Deno on MDN | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;스키마에 &lt;code&gt;preview&lt;/code&gt;와 &lt;code&gt;accepts_flags&lt;/code&gt; 추가, XPath와 XSLT의 데이터가 불완전하므로 삭제됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&quot;&gt;The State Of Mobile First and Desktop First - Ahmad Shadeed&lt;/a&gt;에서 CSS를 작성할 때 Mobile 코드를 먼저 작성하느냐 Desktop 코드를 먼저 작성하느냐에 따른 차이를 이야기한다.&lt;/p&gt;

&lt;p&gt;Mobile과 Desktop 중 하나를 먼저 작성하고 다른 쪽을 Media Query로 덮어쓸때의 코드 차이와 확장성 측면의 차이를 비교한다.&lt;br&gt;
또, 베이스 코드를 두고 여기에 Mobile과 Desktop 대응 코드를 각각 작성할 경우의 어려움 점에 대해서도 이야기한다. &lt;br&gt;
나아가 Flexbox나 CSS Grid, Container Queries 등 새로운 CSS 기능을 사용하여 좀 더 간단하게 작성할 수 있게 된 부분도 다룬다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://kittygiraudel.com/2021/08/24/from-cra-to-next/&quot;&gt;From Create-React-App to Next | Kitty Giraudel&lt;/a&gt;에는 &lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;(CRA)에서 &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;로 이전을 어떤식으로 했는지 소개한다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;나 스타일링 등의 항목 별로 CRA에서 Next.js로 어떻게 이식했는지 소개.&lt;br&gt;
또, &lt;code&gt;&amp;lt;Link&lt;/code&gt;&amp;gt; 외에는 두 시스템(react-scripts, Next.js)에서 모두 실행 할 수 있으므로 이전 간 동작 확인을 위해 &lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt; 역시 두 시스템에 대응 가능하도록 정의하여 테스트 할 수 있는 방법도 다룬다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-65-react-native&quot;&gt;Announcing React Native 0.65 · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/08/17/version-065&quot; title=&quot;Announcing React Native 0.65 · React Native&quot;&gt;reactnative.dev/blog/2021/08/17/version-065&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.65 릴리스.&lt;br&gt;
Hermes 0.8로 업그레이드 하고 Hades 라는 가비지 콜렉터 구현, ECMAScript i18n API 지원, Apple M1 지원 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v9-1-0-mochajs-mocha&quot;&gt;Release v9.1.0 · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v9.1.0&quot; title=&quot;Release v9.1.0 · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/releases/tag/v9.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mocha 9.1.0 릴리스.&lt;br&gt;
&lt;code&gt;--fail-zero&lt;/code&gt;, &lt;code&gt;--node-option&lt;/code&gt; 지원, &lt;code&gt;JSON&lt;/code&gt; 레포트 추가 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-130-webkit&quot;&gt;Release Notes for Safari Technology Preview 130 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11958/release-notes-for-safari-technology-preview-130/&quot; title=&quot;Release Notes for Safari Technology Preview 130 | WebKit&quot;&gt;webkit.org/blog/11958/release-notes-for-safari-technology-preview-130/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;플래그(&lt;code&gt;--useArrayFindLastMethod&lt;/code&gt;)를 붙여서 &lt;code&gt;Array.prototype.findLast&lt;/code&gt;와 &lt;code&gt;Array.prototype.findLastIndex&lt;/code&gt; 지원, WebAudio에서 WebM / Opus 컨테이너 지원 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-mdn-browser-compat-data&quot;&gt;Release v4.0.0 · mdn/browser-compat-data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · mdn/browser-compat-data&quot;&gt;github.com/mdn/browser-compat-data/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDN등에서 사용하고 있는 웹 기술 호환성 목록 browser-compat-data 4.0.0 릴리즈.&lt;br&gt;
스키마에 &lt;code&gt;preview&lt;/code&gt;와 &lt;code&gt;accepts_flags&lt;/code&gt; 추가, Deno란 추가, XPath와 XSLT 데이터가 불완전 하기 때문에 삭제됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.com/blog/deno-on-mdn&quot; title=&quot;Deno on MDN | Deno Blog&quot;&gt;Deno on MDN | Deno Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-registry-is-deprecating-tls-1-0-and-tls-1-1-the-github-blog&quot;&gt;The npm registry is deprecating TLS 1.0 and TLS 1.1 | The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-08-23-npm-registry-deprecating-tls-1-0-tls-1-1/&quot; title=&quot;The npm registry is deprecating TLS 1.0 and TLS 1.1 | The GitHub Blog&quot;&gt;github.blog/2021-08-23-npm-registry-deprecating-tls-1-0-tls-1-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm registry에서 LS 1.0과 TLS 1.1을 비권장하고 2021년 9월 29일에 지원을 종료할 예정.&lt;br&gt;
Node.js 0.10.0 미만 버전을 사용하고 있는 경우, 커스텀 바이너리를 사용하고 있는 경우가 대응 대상이 되지만 이미 99%는 TLS 1.2를 이용하고 있다고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-mobile-first-and-desktop-first-ahmad-shadeed&quot;&gt;The State Of Mobile First and Desktop First - Ahmad Shadeed&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&quot; title=&quot;The State Of Mobile First and Desktop First - Ahmad Shadeed&quot;&gt;ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS를 작성 할 때 Mobile과 Desktop 용 중 어느 것을 먼저 작성할 것인지.&lt;br&gt;
Mobile과 Desktop 중 무엇을 먼저 쓰고, 다른 쪽을 Media Query로 덮어써서 대응 할 경우의 코드량이나 확장성의 차이 연구.&lt;br&gt;
또, 기반 코드에 각 코드를 작성한 경우나 Flexbox, Container Query와 같은 최신 기능을 사용할 경우에 대해서도 다루고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mouseover-dom-blog-jxck-io&quot;&gt;mouseover 중에 표시 되는 DOM 디버깅 하기 | blog.jxck.io(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2021-08-20/how-to-debug-mouseover.html&quot; title=&quot;mouseover 中に表示される DOM のデバッグ | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2021-08-20/how-to-debug-mouseover.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mouseover 중에 표시되는 DOM 요소를 개발자 도구에서 디버깅하는 방법 소개(소소한 디버깅 팁).&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;return-await-promise-vs-return-promise-in-javascript&quot;&gt;&amp;#039;return await promise&amp;#039; vs &amp;#039;return promise&amp;#039; in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/return-await-promise-javascript/&quot; title=&quot;&amp;amp;#039;return await promise&amp;amp;#039; vs &amp;amp;#039;return promise&amp;amp;#039; in JavaScript&quot;&gt;dmitripavlutin.com/return-await-promise-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;return await promise&lt;/code&gt;와 &lt;code&gt;return promise&lt;/code&gt; 두 구문의 동작이 다를 수 있는 경우 소개.&lt;br&gt;
&lt;code&gt;try...catch&lt;/code&gt;로 둘러 쌓여 있는 경우에 &lt;code&gt;await&lt;/code&gt;에 의해 throw 되면 결과가 다르다고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-prettier-livesense-engineer-blog&quot;&gt;여러 저장소 간 에서의 eslint・prettier 설정 공통화 - LIVESENSE ENGINEER BLOG(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://made.livesense.co.jp/entry/2021/08/24/083000&quot; title=&quot;複数リポジトリ間におけるeslint・prettierの設定共通化 - LIVESENSE ENGINEER BLOG&quot;&gt;made.livesense.co.jp/entry/2021/08/24/083000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint의 설정을 소속 그룹(회사) 내 에서 공유하고 관리하기 위해 scoped packages으로 공개 하고 이용하는 방법 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-wasm-is-not-the-future-of-babylon-js-by-babylon-js-aug-2021-medium&quot;&gt;Why WASM is not the future of Babylon.js | by Babylon.js | Aug, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babylonjs.medium.com/why-wasm-is-not-the-future-of-babylon-js-5832b09c9b10&quot; title=&quot;Why WASM is not the future of Babylon.js | by Babylon.js | Aug, 2021 | Medium&quot;&gt;babylonjs.medium.com/why-wasm-is-not-the-future-of-babylon-js-5832b09c9b10&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssembly는 C++ 등의 네이티브 언어를 컴파일하여 사용하는 데 목적이 있으므로 TypeScript로 작성한 Babylon.js를 WASM으로 전환할 합당한 이유가 아직 없다는 의견을 풀어내는 글.&lt;br&gt;
WASM과 JS 간의 커뮤니케이션 비용, 어려운 디버깅, 메모리 관리 등도 포함하기 때문에 관리 범위가 커지는 문제점에 대해서 언급한다.&lt;br&gt;
또, Babylon.js의 물리 엔진 등 WASM을 이미 이용하고 있는 일부 영역에 대해서도 소개한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-create-react-app-to-next-kitty-giraudel&quot;&gt;From Create-React-App to Next | Kitty Giraudel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kittygiraudel.com/2021/08/24/from-cra-to-next/&quot; title=&quot;From Create-React-App to Next | Kitty Giraudel&quot;&gt;kittygiraudel.com/2021/08/24/from-cra-to-next/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;create-react-app로 작성한 앱을 Next.js로 이전 한 이야기.&lt;br&gt;
보일러 플레이트, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, 라우팅, 컴포넌트의 Dynamic Import, Styling, CSR/SSR, Lint 등에 대해.&lt;br&gt;
또, &lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt; 외에는 두 시스템(react-scripts, Next.js)에서 모두 실행 할 수 있으므로 &lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt; 역시 두 시스템에 대응 가능하도록 정의하여 마이그레이션 하는 동안에는 여전히 react-scripts를 이용해 제품 빌드 및 배포할 수 있도록 구성했다고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speedvitals-optimize-your-website-for-web-vitals&quot;&gt;SpeedVitals - Optimize your Website for Web Vitals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speedvitals.com/&quot; title=&quot;SpeedVitals - Optimize your Website for Web Vitals&quot;&gt;speedvitals.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;특정 웹 사이트를 성능 측정 하여 Core Web Vitals 측면의 개선 방법을 제시하는 서비스.&lt;br&gt;
측정 결과로 부터 LCP 스코어 개선 방법, 레이아웃 시프트 시각화 등 개선에 관한 정보를 제공한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.speedvitals.com/introducing-speedvitals/#more-20&quot; title=&quot;Introducing SpeedVitals Alpha Version! - SpeedVitals&quot;&gt;Introducing SpeedVitals Alpha Version! - SpeedVitals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-wc-semantic-dom-diff-npm&quot;&gt;@open-wc/semantic-dom-diff - npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/@open-wc/semantic-dom-diff&quot; title=&quot;@open-wc/semantic-dom-diff - npm&quot;&gt;www.npmjs.com/package/@open-wc/semantic-dom-diff&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DOM / HTML assertion 라이브러리.&lt;br&gt;
HTML 문자열을 비교하여 테스트 할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-next-js&quot;&gt;Testing | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/docs/testing&quot; title=&quot;Testing | Next.js&quot;&gt;nextjs.org/docs/testing&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js에서의 테스트를 주제로 한 문서.&lt;br&gt;
Cypress를 사용한 E2E 테스트와 Jest + React Testing Library를 사용한 테스트 방법 소개.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/delba_oliveira/status/1427307677709967362&quot; title=&quot;Delba de Oliveira on Twitter: &amp;amp;amp;amp;quot;We&amp;amp;amp;#039;ve just released the first iteration of the Next.js Testing Docs: https://t.co/jhe7zSigt3 🧪 We wanted to provide a starting point for those looking to set up Next.js with 3 commonly used testing tools: @cypress\_io, @fbjest and React @TestingLib.&amp;amp;amp;amp;quot; / Twitter&quot;&gt;Delba de Oliveira on Twitter: &amp;amp;quot;We&amp;#039;ve just released the first iteration of the Next.js Testing Docs: https://t.co/jhe7zSigt3 🧪 We wanted to provide a starting point for those looking to set up Next.js with 3 commonly used testing tools: @cypress_io, @fbjest and React @TestingLib.&amp;amp;quot; / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;geist-org-react-modern-and-minimalist-react-ui-library&quot;&gt;geist-org/react: Modern and minimalist React UI library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/geist-org/react&quot; title=&quot;geist-org/react: Modern and minimalist React UI library.&quot;&gt;github.com/geist-org/react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vercel의 디자인에 영감을 받아 개발한 React UI 프레임워크.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;johnsoncodehk-volar-fast-vue-language-support-extension&quot;&gt;johnsoncodehk/volar: ⚡ Fast Vue Language Support Extension&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/johnsoncodehk/volar&quot; title=&quot;johnsoncodehk/volar: ⚡ Fast Vue Language Support Extension&quot;&gt;github.com/johnsoncodehk/volar&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3를 지원하는 VSCode 용 확장 기능.&lt;br&gt;
&lt;code&gt;.vue&lt;/code&gt; 파일의 TypeScript 타입 체크 및 템플릿의 language server를 제공한다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 25 Aug 2021 11:44:57 +0900</pubDate>
        <link>https://jser.info/ko/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/</guid>
        
        <category>React</category>
        
        <category>testing</category>
        
        <category>DOM</category>
        
        <category>Next.js</category>
        
        <category>webservice</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-08-17: Next.js 11.1, Rails 7에서 예정돼 있는 import maps 기반 JS 라이브러리 이용</title>
        <description>&lt;p&gt;JSer.info #553 - Next.js 11.1 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nextjs.org/blog/next-11-1&quot;&gt;Blog - Next.js 11.1 | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/next.js/pull/27738&quot;&gt;오픈 리다이렉터의 취약성&lt;/a&gt;이 수정됐다.&lt;br&gt;
&lt;code&gt;experimental.esmExternals&lt;/code&gt; 옵션으로 Node.js의 ESM를 지원한다.&lt;br&gt;
그 외로 &lt;code&gt;node-fetch&lt;/code&gt;의 keepAlive를 기본적으로 활성화, Source Map / ESLint / &lt;code&gt;next/image&lt;/code&gt;가 개선됐다.&lt;/p&gt;

&lt;p&gt;또, Rust 기반 JS / TS Compiler / Bundler인 &lt;a href=&quot;https://swc.rs/&quot;&gt;SWC&lt;/a&gt; 개발자인 &lt;a href=&quot;https://twitter.com/kdy1dev&quot;&gt;DongYoon Kang&lt;/a&gt;이 Vercel에 합류, Next.js에서의 컴파일러로 &lt;a href=&quot;https://github.com/vercel/next.js/tree/d2f43b718f979aa517a80d4ad8e2ecd764200d39/packages/next/build/swc&quot;&gt;SWC를 이용할 수 있도록 개발중&lt;/a&gt; 이다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Rails 7.0에서 현재 webpacker(webpack)이 아닌 &lt;a href=&quot;https://github.com/WICG/import-maps&quot;&gt;Import maps&lt;/a&gt;를 사용해 JavaScript 라이브러리르 이용하는 방법을 기본 전략으로 제안하고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://world.hey.com/dhh/modern-web-apps-without-javascript-bundling-or-transpiling-a20f2755&quot;&gt;Modern web apps without JavaScript bundling or transpiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails/pull/42999&quot;&gt;Replace webpack with importmapped Hotwire as default js by dhh · Pull Request #42999 · rails/rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Import maps는 ES Modules로 import 할 때에 import 하는 모듈의 이름 해결을 정의하는 웹 표준이다.&lt;/p&gt;

&lt;p&gt;다음과 같이 &lt;code&gt;type=&amp;quot;importmap&amp;quot;&lt;/code&gt;으로 Import maps를 지정한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;importmap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;./src/app.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://cdn.skypack.dev/md5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 Import maps의 정의가 각 모듈에서 이름 해결에 이용된다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ./src/app.js 를 불러온다.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;md5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://cdn.skypack.dev/md5 를 불러온다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Import maps은 &lt;a href=&quot;https://caniuse.com/import-maps&quot;&gt;Chrome계 브라우저만 지원&lt;/a&gt; 하고 있어서 그 외 브라우저에서는 &lt;a href=&quot;https://github.com/guybedford/es-module-shims&quot;&gt;ES Module Shims&lt;/a&gt;의 도움이 필요하다. (&lt;a href=&quot;https://github.com/rails/importmap-rails/&quot;&gt;rails/importmap-rails&lt;/a&gt;にはshimが同梱されています)&lt;/p&gt;

&lt;p&gt;Rails 7에서는 JavaScript의 build이나 bundle 하지 않고 CDN에서 라이브러리를 가져올 수 있는 구조를 Import maps과 함께 사용할 수 있도록 개선하고 webpacker를 옵션으로 변경할 예정이다.&lt;br&gt;
단, TypeScript나 React와 같이 빌드가 꼭 필요한 경우에는 여전히 webpacker를 사용해야 한다.&lt;/p&gt;

&lt;p&gt;동작 방식에 대한 자세한 내용은 아래 영상을 통해 살펴볼 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PtxZvFnL2i0&quot;&gt;Alpha preview: Modern JavaScript in Rails 7 without Webpack - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;august-2021-security-releases-node-js&quot;&gt;August 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/&quot; title=&quot;August 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/aug-2021-security-releases/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 보안 업데이트.&lt;br&gt;
각 버전에 대응하는 Node v12.22.5 (LTS), Node v14.17.5 (LTS), Node v16.6.2가 릴리스 됐다.&lt;br&gt;
DNS 라이브러리 c-ares의 보안 수정, &lt;code&gt;http2&lt;/code&gt;의 stream를 닫았을 경우의 Use after free 처리 수정.&lt;br&gt;
&lt;code&gt;rejectUnauthorized&lt;/code&gt;에 &lt;code&gt;undefined&lt;/code&gt;을 전달하면 기한 만료 증명서로 인식하는 문제 수정.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hopping-on-firefox-91-mozilla-hacks-the-web-developer-blog&quot;&gt;Hopping on Firefox 91 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/08/hopping-on-firefox-91/&quot; title=&quot;Hopping on Firefox 91 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/08/hopping-on-firefox-91/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 91 릴리스.&lt;br&gt;
Visual Viewport API, Intl.DateTimeFormat 개선, Error Cause 지원.&lt;br&gt;
또, Gamepad API가 Secure Context에서만 동작하도록 변경.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/91.0/releasenotes/&quot; title=&quot;Firefox 91.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 91.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/91&quot; title=&quot;Firefox 91 for developers - Mozilla | MDN&quot;&gt;Firefox 91 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blog-next-js-11-1-next-js&quot;&gt;Blog - Next.js 11.1 | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/blog/next-11-1&quot; title=&quot;Blog - Next.js 11.1 | Next.js&quot;&gt;nextjs.org/blog/next-11-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 11.1 릴리스.&lt;br&gt;
오픈 리다이렉터의 취약점 수정, experimental로 Node.js의 ESM 지원, Rust 기반의 JS / TS 컴파일러 SWC를 이용할 수 있게 됐다.&lt;br&gt;
&lt;code&gt;node-fetch&lt;/code&gt;의 keepAlive를 기본적으로 활성화, Source Map / ESLint / &lt;code&gt;next/image&lt;/code&gt; 개선 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-4-rc-typescript&quot;&gt;Announcing TypeScript 4.4 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-4-rc/&quot; title=&quot;Announcing TypeScript 4.4 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-4-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.4 RC 릴리스.&lt;br&gt;
Control Flow Analysis 개선, Index Signatures에 Symbol이나 Template String를 이용할 수 있도록.&lt;br&gt;
Catch 절의 기본 타입을 &lt;code&gt;unknown&lt;/code&gt; 타입으로 하는 &lt;code&gt;useUnknownInCatchVariables&lt;/code&gt; 옵션 추가.&lt;br&gt;
optional과 &lt;code&gt;undefined&lt;/code&gt; 값을 구별하는 &lt;code&gt;exactOptionalPropertyTypes&lt;/code&gt; 옵션 추가.&lt;br&gt;
또, ES Proposal Stage 3의 class static block 지원.&lt;br&gt;
declaration 생성 및 &lt;code&gt;strict&lt;/code&gt; 모드의 빌드 성능 개선.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-vueuse-vueuse&quot;&gt;Release v6.0.0 · vueuse/vueuse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vueuse/vueuse/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · vueuse/vueuse&quot;&gt;github.com/vueuse/vueuse/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;vueuse 6.0.0 릴리스.&lt;br&gt;
Vue 3.2의 &lt;code&gt;effectScope&lt;/code&gt; API에 대응, &lt;code&gt;createSharedComposable&lt;/code&gt; / &lt;code&gt;toReactive&lt;/code&gt; / &lt;code&gt;useEventBus&lt;/code&gt; 추가.&lt;br&gt;
&lt;code&gt;useStorage&lt;/code&gt;에 onError 콜백 함수 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-development-making-a-web-worker-optional-by-tobias-uhlig-aug-2021-itnext&quot;&gt;JavaScript Development: Making a Web Worker optional | by Tobias Uhlig | Aug, 2021 | ITNEXT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://itnext.io/javascript-development-making-a-web-worker-optional-f23a13490b28&quot; title=&quot;JavaScript Development: Making a Web Worker optional | by Tobias Uhlig | Aug, 2021 | ITNEXT&quot;&gt;itnext.io/javascript-development-making-a-web-worker-optional-f23a13490b28&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;무거운 로직을 별도의 Web Worker로 분리하는 것은 의미 있지만 스레드가 거의 유휴(idle) 상태의 경우에 Worker를 나누면 오히려 postMessage 만큼의 지연이 발생한다.&lt;br&gt;
그래서 Worker로 나눠 실행하고 있던 처리를 같은 API를 유지하면서 동일 스레드에서 실행하도록 하는 접근법을 neo.mjs 2.3.4에서의 대응 사례와 함께 소개한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/neomjs/neo&quot; title=&quot;neomjs/neo: The application worker driven frontend framework&quot;&gt;neomjs/neo: The application worker driven frontend framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-rendering-in-vue-to-improve-performance-by-martin-malinda-vue-js-developers-aug-2021-medium&quot;&gt;&amp;lt;Lazy&amp;gt; rendering in Vue to improve performance | by Martin Malinda | Vue.js Developers | Aug, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/js-dojo/lazy-rendering-in-vue-to-improve-performance-dcccd445d5f&quot; title=&quot;&amp;amp;lt;Lazy&amp;amp;gt; rendering in Vue to improve performance | by Martin Malinda | Vue.js Developers | Aug, 2021 | Medium&quot;&gt;medium.com/js-dojo/lazy-rendering-in-vue-to-improve-performance-dcccd445d5f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue에서 지연 렌더링을 사용해 성능을 개선하는 방법 소개.&lt;br&gt;
렌더링 타이밍 늦추기, Intersection Observer를 사용해 viewport에 들어온 시점에 렌더링 하기, 무한 리스트 UI 구현 방법 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;slinkity&quot;&gt;Slinkity&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://slinkity.dev/&quot; title=&quot;Slinkity&quot;&gt;slinkity.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;정적 사이트 제너레이터인 11ty에 React / Vue / Svelte 등의 컴포넌트를 import 할 수 있도록 하는 확장 기능.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-web-apps-without-javascript-bundling-or-transpiling&quot;&gt;Modern web apps without JavaScript bundling or transpiling&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://world.hey.com/dhh/modern-web-apps-without-javascript-bundling-or-transpiling-a20f2755&quot; title=&quot;Modern web apps without JavaScript bundling or transpiling&quot;&gt;world.hey.com/dhh/modern-web-apps-without-javascript-bundling-or-transpiling-a20f2755&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rails 7.0에서 webpacker(webpack) 같은 번들러를 사용하지 않고 import-map 기반의 접근 전략으로 변경하는 방안을 소개한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/importmap-rails/&quot; title=&quot;rails/importmap-rails: Use ESM with importmap to manage modern JavaScript in Rails without transpiling or bundling.&quot;&gt;rails/importmap-rails: Use ESM with importmap to manage modern JavaScript in Rails without transpiling or bundling.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails/pull/42999&quot; title=&quot;Replace webpack with importmapped Hotwire as default js by dhh · Pull Request #42999 · rails/rails&quot;&gt;Replace webpack with importmapped Hotwire as default js by dhh · Pull Request #42999 · rails/rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PtxZvFnL2i0&quot; title=&quot;Alpha preview: Modern JavaScript in Rails 7 without Webpack - YouTube&quot;&gt;Alpha preview: Modern JavaScript in Rails 7 without Webpack - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;don-t-attach-tooltips-to-document-body-atif-afzal&quot;&gt;Don’t attach tooltips to document.body - Atif Afzal&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://atfzl.com/don-t-attach-tooltips-to-document-body&quot; title=&quot;Don’t attach tooltips to document.body - Atif Afzal&quot;&gt;atfzl.com/don-t-attach-tooltips-to-document-body&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;document.body&lt;/code&gt; 바로 아래에 툴팁 표시 용 요소를 추가하면 커다란 요소 스타일 갱신 처리가 이뤄져 성능 문제가 발생한다.&lt;br&gt;
어떤식으로 레이아웃 영향을 확인했는지, 툴팁 표시 용 요소를 한번 래핑하여 스타일 갱신 영향 범위를 줄이는 방법을 소개한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-grid-tooling-in-devtools-chrome-developers&quot;&gt;CSS Grid tooling in DevTools - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/css-grid-tooling/&quot; title=&quot;CSS Grid tooling in DevTools - Chrome Developers&quot;&gt;developer.chrome.com/blog/css-grid-tooling/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome DevTools의 CSS Grid 디버깅 기능과 추가된 CDP(chrome devtools protocol) 소개.&lt;br&gt;
DevTools의 Grid 오버레이 항시 표시, DOM 변경 즉시 반영 또, Computed한 Style 에서 요소 검색을 구현하기 위해 CDP에 새로운 명령어를 구현했다고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;craigmichaelmartin-pure-orm-a-node-js-sql-toolkit-for-writing-native-sql-queries-yielding-pure-business-objects&quot;&gt;craigmichaelmartin/pure-orm: A Node.js SQL toolkit for writing native SQL queries yielding pure business objects&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/craigmichaelmartin/pure-orm&quot; title=&quot;craigmichaelmartin/pure-orm: A Node.js SQL toolkit for writing native SQL queries yielding pure business objects&quot;&gt;github.com/craigmichaelmartin/pure-orm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ORM 라이브러리.&lt;br&gt;
Business Object(BO)와 Data Access Object(DAO)를 사용해 DB와의 데이터를 주고 받을 수 있다.&lt;br&gt;
DAO는 쿼리 빌더가 아니라 순수 SQL 구문에 가까운 문법을 이용한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microlinkhq-keyv-simple-key-value-storage-with-support-for-multiple-backends&quot;&gt;microlinkhq/keyv: Simple key-value storage with support for multiple backends.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microlinkhq/keyv&quot; title=&quot;microlinkhq/keyv: Simple key-value storage with support for multiple backends.&quot;&gt;github.com/microlinkhq/keyv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;redis / mongo / SQLite / MySQL / PostgreSQL 등의 여러 백엔드 환경에 대응(adapter)한 KVS 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jlongster-absurd-sql-sqlite3-in-ur-indexeddb-hopefully-a-better-backend-soon&quot;&gt;jlongster/absurd-sql: sqlite3 in ur indexeddb (hopefully a better backend soon)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jlongster/absurd-sql&quot; title=&quot;jlongster/absurd-sql: sqlite3 in ur indexeddb (hopefully a better backend soon)&quot;&gt;github.com/jlongster/absurd-sql&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IndexedDB&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;sql.js의 IndexedDB 백엔드.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jlongster.com/future-sql-web&quot; title=&quot;A future for SQL on the web&quot;&gt;A future for SQL on the web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 17 Aug 2021 08:06:44 +0900</pubDate>
        <link>https://jser.info/ko/2021/08/17/next.js-11.1-rails-7import-mapsjs/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/08/17/next.js-11.1-rails-7import-mapsjs/</guid>
        
        <category>node.js</category>
        
        <category>Vue</category>
        
        <category>performance</category>
        
        <category>CSS</category>
        
        <category>security</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
